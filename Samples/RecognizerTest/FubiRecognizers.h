#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=4.0.30319.1.
// 
using namespace System;
ref class NewDataSet;


/// <summary>
///Represents a strongly typed in-memory cache of data.
///</summary>
[System::Serializable, 
System::ComponentModel::DesignerCategoryAttribute(L"code"), 
System::ComponentModel::ToolboxItem(true), 
System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
System::Xml::Serialization::XmlRootAttribute(L"NewDataSet"), 
System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
public ref class NewDataSet : public ::System::Data::DataSet {
    public : ref class FubiRecognizersDataTable;
    public : ref class JointRelationRecognizerDataTable;
    public : ref class JointsDataTable;
    public : ref class JointDataTable;
    public : ref class HandJointsDataTable;
    public : ref class MaxValuesDataTable;
    public : ref class MinValuesDataTable;
    public : ref class RelationDataTable;
    public : ref class MiddleJointDataTable;
    public : ref class HandJointDataTable;
    public : ref class METAINFODataTable;
    public : ref class PropertyDataTable;
    public : ref class JointOrientationRecognizerDataTable;
    public : ref class MaxDegreesDataTable;
    public : ref class MinDegreesDataTable;
    public : ref class OrientationDataTable;
    public : ref class LinearMovementRecognizerDataTable;
    public : ref class DirectionDataTable;
    public : ref class BasicDirectionDataTable;
    public : ref class SpeedDataTable;
    public : ref class LengthDataTable;
    public : ref class AngularMovementRecognizerDataTable;
    public : ref class MaxAngularVelocityDataTable;
    public : ref class MinAngularVelocityDataTable;
    public : ref class BasicAngularVelocityDataTable;
    public : ref class FingerCountRecognizerDataTable;
    public : ref class FingerCountDataTable;
    public : ref class TemplateRecognizerDataTable;
    public : ref class TrainingDataDataTable;
    public : ref class IgnoreAxesDataTable;
    public : ref class CombinationRecognizerDataTable;
    public : ref class StateDataTable;
    public : ref class RecognizerDataTable;
    public : ref class NotRecognizerDataTable;
    public : ref class AlternativeRecognizersDataTable;
    public : ref class FubiRecognizersRow;
    public : ref class JointRelationRecognizerRow;
    public : ref class JointsRow;
    public : ref class JointRow;
    public : ref class HandJointsRow;
    public : ref class MaxValuesRow;
    public : ref class MinValuesRow;
    public : ref class RelationRow;
    public : ref class MiddleJointRow;
    public : ref class HandJointRow;
    public : ref class METAINFORow;
    public : ref class PropertyRow;
    public : ref class JointOrientationRecognizerRow;
    public : ref class MaxDegreesRow;
    public : ref class MinDegreesRow;
    public : ref class OrientationRow;
    public : ref class LinearMovementRecognizerRow;
    public : ref class DirectionRow;
    public : ref class BasicDirectionRow;
    public : ref class SpeedRow;
    public : ref class LengthRow;
    public : ref class AngularMovementRecognizerRow;
    public : ref class MaxAngularVelocityRow;
    public : ref class MinAngularVelocityRow;
    public : ref class BasicAngularVelocityRow;
    public : ref class FingerCountRecognizerRow;
    public : ref class FingerCountRow;
    public : ref class TemplateRecognizerRow;
    public : ref class TrainingDataRow;
    public : ref class IgnoreAxesRow;
    public : ref class CombinationRecognizerRow;
    public : ref class StateRow;
    public : ref class RecognizerRow;
    public : ref class NotRecognizerRow;
    public : ref class AlternativeRecognizersRow;
    public : ref class FubiRecognizersRowChangeEvent;
    public : ref class JointRelationRecognizerRowChangeEvent;
    public : ref class JointsRowChangeEvent;
    public : ref class JointRowChangeEvent;
    public : ref class HandJointsRowChangeEvent;
    public : ref class MaxValuesRowChangeEvent;
    public : ref class MinValuesRowChangeEvent;
    public : ref class RelationRowChangeEvent;
    public : ref class MiddleJointRowChangeEvent;
    public : ref class HandJointRowChangeEvent;
    public : ref class METAINFORowChangeEvent;
    public : ref class PropertyRowChangeEvent;
    public : ref class JointOrientationRecognizerRowChangeEvent;
    public : ref class MaxDegreesRowChangeEvent;
    public : ref class MinDegreesRowChangeEvent;
    public : ref class OrientationRowChangeEvent;
    public : ref class LinearMovementRecognizerRowChangeEvent;
    public : ref class DirectionRowChangeEvent;
    public : ref class BasicDirectionRowChangeEvent;
    public : ref class SpeedRowChangeEvent;
    public : ref class LengthRowChangeEvent;
    public : ref class AngularMovementRecognizerRowChangeEvent;
    public : ref class MaxAngularVelocityRowChangeEvent;
    public : ref class MinAngularVelocityRowChangeEvent;
    public : ref class BasicAngularVelocityRowChangeEvent;
    public : ref class FingerCountRecognizerRowChangeEvent;
    public : ref class FingerCountRowChangeEvent;
    public : ref class TemplateRecognizerRowChangeEvent;
    public : ref class TrainingDataRowChangeEvent;
    public : ref class IgnoreAxesRowChangeEvent;
    public : ref class CombinationRecognizerRowChangeEvent;
    public : ref class StateRowChangeEvent;
    public : ref class RecognizerRowChangeEvent;
    public : ref class NotRecognizerRowChangeEvent;
    public : ref class AlternativeRecognizersRowChangeEvent;
    
    private: NewDataSet::FubiRecognizersDataTable^  tableFubiRecognizers;
    
    private: NewDataSet::JointRelationRecognizerDataTable^  tableJointRelationRecognizer;
    
    private: NewDataSet::JointsDataTable^  tableJoints;
    
    private: NewDataSet::JointDataTable^  tableJoint;
    
    private: NewDataSet::HandJointsDataTable^  tableHandJoints;
    
    private: NewDataSet::MaxValuesDataTable^  tableMaxValues;
    
    private: NewDataSet::MinValuesDataTable^  tableMinValues;
    
    private: NewDataSet::RelationDataTable^  tableRelation;
    
    private: NewDataSet::MiddleJointDataTable^  tableMiddleJoint;
    
    private: NewDataSet::HandJointDataTable^  tableHandJoint;
    
    private: NewDataSet::METAINFODataTable^  tableMETAINFO;
    
    private: NewDataSet::PropertyDataTable^  tableProperty;
    
    private: NewDataSet::JointOrientationRecognizerDataTable^  tableJointOrientationRecognizer;
    
    private: NewDataSet::MaxDegreesDataTable^  tableMaxDegrees;
    
    private: NewDataSet::MinDegreesDataTable^  tableMinDegrees;
    
    private: NewDataSet::OrientationDataTable^  tableOrientation;
    
    private: NewDataSet::LinearMovementRecognizerDataTable^  tableLinearMovementRecognizer;
    
    private: NewDataSet::DirectionDataTable^  tableDirection;
    
    private: NewDataSet::BasicDirectionDataTable^  tableBasicDirection;
    
    private: NewDataSet::SpeedDataTable^  tableSpeed;
    
    private: NewDataSet::LengthDataTable^  tableLength;
    
    private: NewDataSet::AngularMovementRecognizerDataTable^  tableAngularMovementRecognizer;
    
    private: NewDataSet::MaxAngularVelocityDataTable^  tableMaxAngularVelocity;
    
    private: NewDataSet::MinAngularVelocityDataTable^  tableMinAngularVelocity;
    
    private: NewDataSet::BasicAngularVelocityDataTable^  tableBasicAngularVelocity;
    
    private: NewDataSet::FingerCountRecognizerDataTable^  tableFingerCountRecognizer;
    
    private: NewDataSet::FingerCountDataTable^  tableFingerCount;
    
    private: NewDataSet::TemplateRecognizerDataTable^  tableTemplateRecognizer;
    
    private: NewDataSet::TrainingDataDataTable^  tableTrainingData;
    
    private: NewDataSet::IgnoreAxesDataTable^  tableIgnoreAxes;
    
    private: NewDataSet::CombinationRecognizerDataTable^  tableCombinationRecognizer;
    
    private: NewDataSet::StateDataTable^  tableState;
    
    private: NewDataSet::RecognizerDataTable^  tableRecognizer;
    
    private: NewDataSet::NotRecognizerDataTable^  tableNotRecognizer;
    
    private: NewDataSet::AlternativeRecognizersDataTable^  tableAlternativeRecognizers;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_JointRelationRecognizer;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_Joints;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_Joints;
    
    private: ::System::Data::DataRelation^  relationTemplateRecognizer_Joints;
    
    private: ::System::Data::DataRelation^  relationMiddleJoint_Joint;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_Joint;
    
    private: ::System::Data::DataRelation^  relationJointOrientationRecognizer_Joint;
    
    private: ::System::Data::DataRelation^  relationAngularMovementRecognizer_Joint;
    
    private: ::System::Data::DataRelation^  relationFingerCountRecognizer_Joint;
    
    private: ::System::Data::DataRelation^  relationTemplateRecognizer_Joint;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_HandJoints;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_HandJoints;
    
    private: ::System::Data::DataRelation^  relationTemplateRecognizer_HandJoints;
    
    private: ::System::Data::DataRelation^  relationMiddleJoint_MaxValues;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_MaxValues;
    
    private: ::System::Data::DataRelation^  relationMiddleJoint_MinValues;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_MinValues;
    
    private: ::System::Data::DataRelation^  relationMiddleJoint_Relation;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_Relation;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_MiddleJoint;
    
    private: ::System::Data::DataRelation^  relationMiddleJoint_HandJoint;
    
    private: ::System::Data::DataRelation^  relationJointOrientationRecognizer_HandJoint;
    
    private: ::System::Data::DataRelation^  relationAngularMovementRecognizer_HandJoint;
    
    private: ::System::Data::DataRelation^  relationJointRelationRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationJointOrientationRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationAngularMovementRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationFingerCountRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationTemplateRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationState_METAINFO;
    
    private: ::System::Data::DataRelation^  relationCombinationRecognizer_METAINFO;
    
    private: ::System::Data::DataRelation^  relationMETAINFO_Property;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_JointOrientationRecognizer;
    
    private: ::System::Data::DataRelation^  relationJointOrientationRecognizer_MaxDegrees;
    
    private: ::System::Data::DataRelation^  relationJointOrientationRecognizer_MinDegrees;
    
    private: ::System::Data::DataRelation^  relationJointOrientationRecognizer_Orientation;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_LinearMovementRecognizer;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_Direction;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_BasicDirection;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_Speed;
    
    private: ::System::Data::DataRelation^  relationLinearMovementRecognizer_Length;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_AngularMovementRecognizer;
    
    private: ::System::Data::DataRelation^  relationAngularMovementRecognizer_MaxAngularVelocity;
    
    private: ::System::Data::DataRelation^  relationAngularMovementRecognizer_MinAngularVelocity;
    
    private: ::System::Data::DataRelation^  relationAngularMovementRecognizer_BasicAngularVelocity;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_FingerCountRecognizer;
    
    private: ::System::Data::DataRelation^  relationFingerCountRecognizer_FingerCount;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_TemplateRecognizer;
    
    private: ::System::Data::DataRelation^  relationTemplateRecognizer_TrainingData;
    
    private: ::System::Data::DataRelation^  relationTemplateRecognizer_IgnoreAxes;
    
    private: ::System::Data::DataRelation^  relationFubiRecognizers_CombinationRecognizer;
    
    private: ::System::Data::DataRelation^  relationCombinationRecognizer_State;
    
    private: ::System::Data::DataRelation^  relationAlternativeRecognizers_Recognizer;
    
    private: ::System::Data::DataRelation^  relationState_Recognizer;
    
    private: ::System::Data::DataRelation^  relationAlternativeRecognizers_NotRecognizer;
    
    private: ::System::Data::DataRelation^  relationState_NotRecognizer;
    
    private: ::System::Data::DataRelation^  relationState_AlternativeRecognizers;
    
    private: ::System::Data::SchemaSerializationMode _schemaSerializationMode;
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void FubiRecognizersRowChangeEventHandler(::System::Object^  sender, NewDataSet::FubiRecognizersRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void JointRelationRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::JointRelationRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void JointsRowChangeEventHandler(::System::Object^  sender, NewDataSet::JointsRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void JointRowChangeEventHandler(::System::Object^  sender, NewDataSet::JointRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void HandJointsRowChangeEventHandler(::System::Object^  sender, NewDataSet::HandJointsRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MaxValuesRowChangeEventHandler(::System::Object^  sender, NewDataSet::MaxValuesRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MinValuesRowChangeEventHandler(::System::Object^  sender, NewDataSet::MinValuesRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void RelationRowChangeEventHandler(::System::Object^  sender, NewDataSet::RelationRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MiddleJointRowChangeEventHandler(::System::Object^  sender, NewDataSet::MiddleJointRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void HandJointRowChangeEventHandler(::System::Object^  sender, NewDataSet::HandJointRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void METAINFORowChangeEventHandler(::System::Object^  sender, NewDataSet::METAINFORowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void PropertyRowChangeEventHandler(::System::Object^  sender, NewDataSet::PropertyRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void JointOrientationRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::JointOrientationRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MaxDegreesRowChangeEventHandler(::System::Object^  sender, NewDataSet::MaxDegreesRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MinDegreesRowChangeEventHandler(::System::Object^  sender, NewDataSet::MinDegreesRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void OrientationRowChangeEventHandler(::System::Object^  sender, NewDataSet::OrientationRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void LinearMovementRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::LinearMovementRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void DirectionRowChangeEventHandler(::System::Object^  sender, NewDataSet::DirectionRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void BasicDirectionRowChangeEventHandler(::System::Object^  sender, NewDataSet::BasicDirectionRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void SpeedRowChangeEventHandler(::System::Object^  sender, NewDataSet::SpeedRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void LengthRowChangeEventHandler(::System::Object^  sender, NewDataSet::LengthRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void AngularMovementRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::AngularMovementRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MaxAngularVelocityRowChangeEventHandler(::System::Object^  sender, NewDataSet::MaxAngularVelocityRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void MinAngularVelocityRowChangeEventHandler(::System::Object^  sender, NewDataSet::MinAngularVelocityRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void BasicAngularVelocityRowChangeEventHandler(::System::Object^  sender, NewDataSet::BasicAngularVelocityRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void FingerCountRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::FingerCountRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void FingerCountRowChangeEventHandler(::System::Object^  sender, NewDataSet::FingerCountRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void TemplateRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::TemplateRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void TrainingDataRowChangeEventHandler(::System::Object^  sender, NewDataSet::TrainingDataRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void IgnoreAxesRowChangeEventHandler(::System::Object^  sender, NewDataSet::IgnoreAxesRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void CombinationRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::CombinationRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void StateRowChangeEventHandler(::System::Object^  sender, NewDataSet::StateRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void RecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::RecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void NotRecognizerRowChangeEventHandler(::System::Object^  sender, NewDataSet::NotRecognizerRowChangeEvent^  e);
    
    public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    delegate System::Void AlternativeRecognizersRowChangeEventHandler(::System::Object^  sender, NewDataSet::AlternativeRecognizersRowChangeEvent^  e);
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    NewDataSet();
    protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::FubiRecognizersDataTable^  FubiRecognizers {
        NewDataSet::FubiRecognizersDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::JointRelationRecognizerDataTable^  JointRelationRecognizer {
        NewDataSet::JointRelationRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::JointsDataTable^  Joints {
        NewDataSet::JointsDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::JointDataTable^  Joint {
        NewDataSet::JointDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::HandJointsDataTable^  HandJoints {
        NewDataSet::HandJointsDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MaxValuesDataTable^  MaxValues {
        NewDataSet::MaxValuesDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MinValuesDataTable^  MinValues {
        NewDataSet::MinValuesDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::RelationDataTable^  Relation {
        NewDataSet::RelationDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MiddleJointDataTable^  MiddleJoint {
        NewDataSet::MiddleJointDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::HandJointDataTable^  HandJoint {
        NewDataSet::HandJointDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::METAINFODataTable^  METAINFO {
        NewDataSet::METAINFODataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::PropertyDataTable^  Property {
        NewDataSet::PropertyDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::JointOrientationRecognizerDataTable^  JointOrientationRecognizer {
        NewDataSet::JointOrientationRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MaxDegreesDataTable^  MaxDegrees {
        NewDataSet::MaxDegreesDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MinDegreesDataTable^  MinDegrees {
        NewDataSet::MinDegreesDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::OrientationDataTable^  Orientation {
        NewDataSet::OrientationDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::LinearMovementRecognizerDataTable^  LinearMovementRecognizer {
        NewDataSet::LinearMovementRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::DirectionDataTable^  Direction {
        NewDataSet::DirectionDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::BasicDirectionDataTable^  BasicDirection {
        NewDataSet::BasicDirectionDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::SpeedDataTable^  Speed {
        NewDataSet::SpeedDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::LengthDataTable^  Length {
        NewDataSet::LengthDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::AngularMovementRecognizerDataTable^  AngularMovementRecognizer {
        NewDataSet::AngularMovementRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MaxAngularVelocityDataTable^  MaxAngularVelocity {
        NewDataSet::MaxAngularVelocityDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::MinAngularVelocityDataTable^  MinAngularVelocity {
        NewDataSet::MinAngularVelocityDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::BasicAngularVelocityDataTable^  BasicAngularVelocity {
        NewDataSet::BasicAngularVelocityDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::FingerCountRecognizerDataTable^  FingerCountRecognizer {
        NewDataSet::FingerCountRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::FingerCountDataTable^  FingerCount {
        NewDataSet::FingerCountDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::TemplateRecognizerDataTable^  TemplateRecognizer {
        NewDataSet::TemplateRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::TrainingDataDataTable^  TrainingData {
        NewDataSet::TrainingDataDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::IgnoreAxesDataTable^  IgnoreAxes {
        NewDataSet::IgnoreAxesDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::CombinationRecognizerDataTable^  CombinationRecognizer {
        NewDataSet::CombinationRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::StateDataTable^  State {
        NewDataSet::StateDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::RecognizerDataTable^  Recognizer {
        NewDataSet::RecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::NotRecognizerDataTable^  NotRecognizer {
        NewDataSet::NotRecognizerDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::Browsable(false), 
    System::ComponentModel::DesignerSerializationVisibility(::System::ComponentModel::DesignerSerializationVisibility::Content)]
    property NewDataSet::AlternativeRecognizersDataTable^  AlternativeRecognizers {
        NewDataSet::AlternativeRecognizersDataTable^  get();
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::BrowsableAttribute(true), 
    System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Visible)]
    virtual property ::System::Data::SchemaSerializationMode SchemaSerializationMode {
        ::System::Data::SchemaSerializationMode get() override;
        System::Void set(::System::Data::SchemaSerializationMode value) override;
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
    property ::System::Data::DataTableCollection^  Tables {
        ::System::Data::DataTableCollection^  get() new;
    }
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
    System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
    System::ComponentModel::DesignerSerializationVisibilityAttribute(::System::ComponentModel::DesignerSerializationVisibility::Hidden)]
    property ::System::Data::DataRelationCollection^  Relations {
        ::System::Data::DataRelationCollection^  get() new;
    }
    
    protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    virtual ::System::Void InitializeDerivedDataSet() override;
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    virtual ::System::Data::DataSet^  Clone() override;
    
    protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    virtual ::System::Boolean ShouldSerializeTables() override;
    
    protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    virtual ::System::Boolean ShouldSerializeRelations() override;
    
    protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    virtual ::System::Void ReadXmlSerializable(::System::Xml::XmlReader^  reader) override;
    
    protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    virtual ::System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
    
    internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Void InitVars();
    
    internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Void InitVars(::System::Boolean initTable);
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Void InitClass();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeFubiRecognizers();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeJointRelationRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeJoints();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeJoint();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeHandJoints();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMaxValues();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMinValues();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeRelation();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMiddleJoint();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeHandJoint();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMETAINFO();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeProperty();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeJointOrientationRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMaxDegrees();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMinDegrees();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeOrientation();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeLinearMovementRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeDirection();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeBasicDirection();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeSpeed();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeLength();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeAngularMovementRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMaxAngularVelocity();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeMinAngularVelocity();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeBasicAngularVelocity();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeFingerCountRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeFingerCount();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeTemplateRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeTrainingData();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeIgnoreAxes();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeCombinationRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeState();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeNotRecognizer();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Boolean ShouldSerializeAlternativeRecognizers();
    
    private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ::System::Void SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e);
    
    public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class FubiRecognizersDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnglobalMinConfidence;
        
        private: ::System::Data::DataColumn^  columnglobalUseFilteredData;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FubiRecognizersRowChangeEventHandler^  FubiRecognizersRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FubiRecognizersRowChangeEventHandler^  FubiRecognizersRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FubiRecognizersRowChangeEventHandler^  FubiRecognizersRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FubiRecognizersRowChangeEventHandler^  FubiRecognizersRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FubiRecognizersDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FubiRecognizersDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FubiRecognizersDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  globalMinConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  globalUseFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  default [::System::Int32 ] {
            NewDataSet::FubiRecognizersRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddFubiRecognizersRow(NewDataSet::FubiRecognizersRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::FubiRecognizersRow^  AddFubiRecognizersRow(System::Single globalMinConfidence, System::Boolean globalUseFilteredData);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::FubiRecognizersRow^  NewFubiRecognizersRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveFubiRecognizersRow(NewDataSet::FubiRecognizersRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class JointRelationRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnvisibility;
        
        private: ::System::Data::DataColumn^  columnuseLocalPositions;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnmeasuringUnit;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRelationRecognizerRowChangeEventHandler^  JointRelationRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRelationRecognizerRowChangeEventHandler^  JointRelationRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRelationRecognizerRowChangeEventHandler^  JointRelationRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRelationRecognizerRowChangeEventHandler^  JointRelationRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRelationRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRelationRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRelationRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  visibilityColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useLocalPositionsColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  measuringUnitColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::JointRelationRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddJointRelationRecognizerRow(NewDataSet::JointRelationRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointRelationRecognizerRow^  AddJointRelationRecognizerRow(
                    System::String^  name, 
                    System::String^  visibility, 
                    System::Boolean useLocalPositions, 
                    System::Single minConfidence, 
                    System::Boolean useFilteredData, 
                    System::String^  measuringUnit, 
                    NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_JointRelationRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointRelationRecognizerRow^  NewJointRelationRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveJointRelationRecognizerRow(NewDataSet::JointRelationRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class JointsDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnmain;
        
        private: ::System::Data::DataColumn^  columnrelative;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointsRowChangeEventHandler^  JointsRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointsRowChangeEventHandler^  JointsRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointsRowChangeEventHandler^  JointsRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointsRowChangeEventHandler^  JointsRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointsDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointsDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  mainColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  relativeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointsRow^  default [::System::Int32 ] {
            NewDataSet::JointsRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddJointsRow(NewDataSet::JointsRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointsRow^  AddJointsRow(System::String^  main, System::String^  relative, NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_Joints, 
                    NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Joints, NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_Joints);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointsRow^  NewJointsRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveJointsRow(NewDataSet::JointsRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class JointDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnMiddleJoint_Id;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFingerCountRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRowChangeEventHandler^  JointRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRowChangeEventHandler^  JointRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRowChangeEventHandler^  JointRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointRowChangeEventHandler^  JointRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  MiddleJoint_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FingerCountRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRow^  default [::System::Int32 ] {
            NewDataSet::JointRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddJointRow(NewDataSet::JointRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointRow^  AddJointRow(
                    System::String^  name, 
                    NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_Joint, 
                    NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_Joint, 
                    NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_Joint, 
                    NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_Joint, 
                    NewDataSet::FingerCountRecognizerRow^  parentFingerCountRecognizerRowByFingerCountRecognizer_Joint, 
                    NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_Joint);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointRow^  NewJointRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveJointRow(NewDataSet::JointRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class HandJointsDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnmain;
        
        private: ::System::Data::DataColumn^  columnrelative;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointsRowChangeEventHandler^  HandJointsRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointsRowChangeEventHandler^  HandJointsRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointsRowChangeEventHandler^  HandJointsRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointsRowChangeEventHandler^  HandJointsRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointsDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointsDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  mainColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  relativeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::HandJointsRow^  default [::System::Int32 ] {
            NewDataSet::HandJointsRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddHandJointsRow(NewDataSet::HandJointsRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::HandJointsRow^  AddHandJointsRow(System::String^  main, System::String^  relative, NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_HandJoints, 
                    NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_HandJoints, 
                    NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_HandJoints);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::HandJointsRow^  NewHandJointsRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveHandJointsRow(NewDataSet::HandJointsRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MaxValuesDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columndist;
        
        private: ::System::Data::DataColumn^  columnMiddleJoint_Id;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxValuesRowChangeEventHandler^  MaxValuesRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxValuesRowChangeEventHandler^  MaxValuesRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxValuesRowChangeEventHandler^  MaxValuesRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxValuesRowChangeEventHandler^  MaxValuesRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxValuesDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxValuesDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxValuesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  distColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  MiddleJoint_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MaxValuesRow^  default [::System::Int32 ] {
            NewDataSet::MaxValuesRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMaxValuesRow(NewDataSet::MaxValuesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MaxValuesRow^  AddMaxValuesRow(
                    System::Single x, 
                    System::Single y, 
                    System::Single z, 
                    System::Single dist, 
                    NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_MaxValues, 
                    NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_MaxValues);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MaxValuesRow^  NewMaxValuesRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMaxValuesRow(NewDataSet::MaxValuesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MinValuesDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columndist;
        
        private: ::System::Data::DataColumn^  columnMiddleJoint_Id;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinValuesRowChangeEventHandler^  MinValuesRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinValuesRowChangeEventHandler^  MinValuesRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinValuesRowChangeEventHandler^  MinValuesRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinValuesRowChangeEventHandler^  MinValuesRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinValuesDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinValuesDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinValuesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  distColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  MiddleJoint_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MinValuesRow^  default [::System::Int32 ] {
            NewDataSet::MinValuesRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMinValuesRow(NewDataSet::MinValuesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MinValuesRow^  AddMinValuesRow(
                    System::Single x, 
                    System::Single y, 
                    System::Single z, 
                    System::Single dist, 
                    NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_MinValues, 
                    NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_MinValues);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MinValuesRow^  NewMinValuesRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMinValuesRow(NewDataSet::MinValuesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class RelationDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columntype;
        
        private: ::System::Data::DataColumn^  columnmin;
        
        private: ::System::Data::DataColumn^  columnmax;
        
        private: ::System::Data::DataColumn^  columnMiddleJoint_Id;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RelationRowChangeEventHandler^  RelationRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RelationRowChangeEventHandler^  RelationRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RelationRowChangeEventHandler^  RelationRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RelationRowChangeEventHandler^  RelationRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RelationDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RelationDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RelationDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  typeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  MiddleJoint_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::RelationRow^  default [::System::Int32 ] {
            NewDataSet::RelationRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddRelationRow(NewDataSet::RelationRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::RelationRow^  AddRelationRow(System::String^  type, System::Single min, System::Single max, NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_Relation, 
                    NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_Relation);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::RelationRow^  NewRelationRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveRelationRow(NewDataSet::RelationRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MiddleJointDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnMiddleJoint_Id;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MiddleJointRowChangeEventHandler^  MiddleJointRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MiddleJointRowChangeEventHandler^  MiddleJointRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MiddleJointRowChangeEventHandler^  MiddleJointRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MiddleJointRowChangeEventHandler^  MiddleJointRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MiddleJointDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MiddleJointDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MiddleJointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  MiddleJoint_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  default [::System::Int32 ] {
            NewDataSet::MiddleJointRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMiddleJointRow(NewDataSet::MiddleJointRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MiddleJointRow^  AddMiddleJointRow(NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_MiddleJoint);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MiddleJointRow^  NewMiddleJointRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMiddleJointRow(NewDataSet::MiddleJointRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class HandJointDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnMiddleJoint_Id;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointRowChangeEventHandler^  HandJointRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointRowChangeEventHandler^  HandJointRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointRowChangeEventHandler^  HandJointRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::HandJointRowChangeEventHandler^  HandJointRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  MiddleJoint_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::HandJointRow^  default [::System::Int32 ] {
            NewDataSet::HandJointRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddHandJointRow(NewDataSet::HandJointRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::HandJointRow^  AddHandJointRow(System::String^  name, NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_HandJoint, 
                    NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_HandJoint, 
                    NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_HandJoint);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::HandJointRow^  NewHandJointRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveHandJointRow(NewDataSet::HandJointRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class METAINFODataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnMETAINFO_Id;
        
        private: ::System::Data::DataColumn^  columnJointRelationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFingerCountRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnState_Id;
        
        private: ::System::Data::DataColumn^  columnCombinationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::METAINFORowChangeEventHandler^  METAINFORowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::METAINFORowChangeEventHandler^  METAINFORowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::METAINFORowChangeEventHandler^  METAINFORowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::METAINFORowChangeEventHandler^  METAINFORowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        METAINFODataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        METAINFODataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        METAINFODataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  METAINFO_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointRelationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FingerCountRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  State_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  CombinationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::METAINFORow^  default [::System::Int32 ] {
            NewDataSet::METAINFORow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMETAINFORow(NewDataSet::METAINFORow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::METAINFORow^  AddMETAINFORow(
                    NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_METAINFO, 
                    NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_METAINFO, 
                    NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_METAINFO, 
                    NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_METAINFO, 
                    NewDataSet::FingerCountRecognizerRow^  parentFingerCountRecognizerRowByFingerCountRecognizer_METAINFO, 
                    NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_METAINFO, 
                    NewDataSet::StateRow^  parentStateRowByState_METAINFO, 
                    NewDataSet::CombinationRecognizerRow^  parentCombinationRecognizerRowByCombinationRecognizer_METAINFO);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::METAINFORow^  NewMETAINFORow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMETAINFORow(NewDataSet::METAINFORow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class PropertyDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  column_value;
        
        private: ::System::Data::DataColumn^  columnMETAINFO_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::PropertyRowChangeEventHandler^  PropertyRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::PropertyRowChangeEventHandler^  PropertyRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::PropertyRowChangeEventHandler^  PropertyRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::PropertyRowChangeEventHandler^  PropertyRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        PropertyDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        PropertyDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        PropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  _valueColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  METAINFO_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::PropertyRow^  default [::System::Int32 ] {
            NewDataSet::PropertyRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddPropertyRow(NewDataSet::PropertyRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::PropertyRow^  AddPropertyRow(System::String^  name, System::String^  _value, NewDataSet::METAINFORow^  parentMETAINFORowByMETAINFO_Property);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::PropertyRow^  NewPropertyRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemovePropertyRow(NewDataSet::PropertyRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class JointOrientationRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnvisibility;
        
        private: ::System::Data::DataColumn^  columnuseLocalOrientations;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointOrientationRecognizerRowChangeEventHandler^  JointOrientationRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointOrientationRecognizerRowChangeEventHandler^  JointOrientationRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointOrientationRecognizerRowChangeEventHandler^  JointOrientationRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::JointOrientationRecognizerRowChangeEventHandler^  JointOrientationRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointOrientationRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointOrientationRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointOrientationRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  visibilityColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useLocalOrientationsColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::JointOrientationRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddJointOrientationRecognizerRow(NewDataSet::JointOrientationRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointOrientationRecognizerRow^  AddJointOrientationRecognizerRow(
                    System::String^  name, 
                    System::String^  visibility, 
                    System::Boolean useLocalOrientations, 
                    System::Single minConfidence, 
                    System::Boolean useFilteredData, 
                    NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_JointOrientationRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::JointOrientationRecognizerRow^  NewJointOrientationRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveJointOrientationRecognizerRow(NewDataSet::JointOrientationRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MaxDegreesDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxDegreesRowChangeEventHandler^  MaxDegreesRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxDegreesRowChangeEventHandler^  MaxDegreesRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxDegreesRowChangeEventHandler^  MaxDegreesRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxDegreesRowChangeEventHandler^  MaxDegreesRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxDegreesDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxDegreesDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxDegreesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MaxDegreesRow^  default [::System::Int32 ] {
            NewDataSet::MaxDegreesRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMaxDegreesRow(NewDataSet::MaxDegreesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MaxDegreesRow^  AddMaxDegreesRow(System::Single x, System::Single y, System::Single z, NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_MaxDegrees);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MaxDegreesRow^  NewMaxDegreesRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMaxDegreesRow(NewDataSet::MaxDegreesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MinDegreesDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinDegreesRowChangeEventHandler^  MinDegreesRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinDegreesRowChangeEventHandler^  MinDegreesRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinDegreesRowChangeEventHandler^  MinDegreesRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinDegreesRowChangeEventHandler^  MinDegreesRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinDegreesDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinDegreesDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinDegreesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MinDegreesRow^  default [::System::Int32 ] {
            NewDataSet::MinDegreesRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMinDegreesRow(NewDataSet::MinDegreesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MinDegreesRow^  AddMinDegreesRow(System::Single x, System::Single y, System::Single z, NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_MinDegrees);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MinDegreesRow^  NewMinDegreesRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMinDegreesRow(NewDataSet::MinDegreesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class OrientationDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnmaxAngleDifference;
        
        private: ::System::Data::DataColumn^  columnJointOrientationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::OrientationRowChangeEventHandler^  OrientationRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::OrientationRowChangeEventHandler^  OrientationRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::OrientationRowChangeEventHandler^  OrientationRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::OrientationRowChangeEventHandler^  OrientationRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        OrientationDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        OrientationDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        OrientationDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxAngleDifferenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  JointOrientationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::OrientationRow^  default [::System::Int32 ] {
            NewDataSet::OrientationRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddOrientationRow(NewDataSet::OrientationRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::OrientationRow^  AddOrientationRow(System::Single x, System::Single y, System::Single z, System::Single maxAngleDifference, 
                    NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_Orientation);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::OrientationRow^  NewOrientationRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveOrientationRow(NewDataSet::OrientationRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class LinearMovementRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnvisibility;
        
        private: ::System::Data::DataColumn^  columnuseLocalPositions;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnuseOnlyCorrectDirectionComponent;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LinearMovementRecognizerRowChangeEventHandler^  LinearMovementRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LinearMovementRecognizerRowChangeEventHandler^  LinearMovementRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LinearMovementRecognizerRowChangeEventHandler^  LinearMovementRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LinearMovementRecognizerRowChangeEventHandler^  LinearMovementRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LinearMovementRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LinearMovementRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LinearMovementRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  visibilityColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useLocalPositionsColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useOnlyCorrectDirectionComponentColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::LinearMovementRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddLinearMovementRecognizerRow(NewDataSet::LinearMovementRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::LinearMovementRecognizerRow^  AddLinearMovementRecognizerRow(
                    System::String^  name, 
                    System::String^  visibility, 
                    System::Boolean useLocalPositions, 
                    System::Single minConfidence, 
                    System::Boolean useFilteredData, 
                    System::Boolean useOnlyCorrectDirectionComponent, 
                    NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_LinearMovementRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::LinearMovementRecognizerRow^  NewLinearMovementRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveLinearMovementRecognizerRow(NewDataSet::LinearMovementRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class DirectionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnmaxAngleDifference;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::DirectionRowChangeEventHandler^  DirectionRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::DirectionRowChangeEventHandler^  DirectionRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::DirectionRowChangeEventHandler^  DirectionRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::DirectionRowChangeEventHandler^  DirectionRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        DirectionDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        DirectionDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        DirectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxAngleDifferenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::DirectionRow^  default [::System::Int32 ] {
            NewDataSet::DirectionRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddDirectionRow(NewDataSet::DirectionRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::DirectionRow^  AddDirectionRow(System::Single x, System::Single y, System::Single z, System::Single maxAngleDifference, 
                    NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Direction);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::DirectionRow^  NewDirectionRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveDirectionRow(NewDataSet::DirectionRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class BasicDirectionDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columntype;
        
        private: ::System::Data::DataColumn^  columnmaxAngleDifference;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicDirectionRowChangeEventHandler^  BasicDirectionRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicDirectionRowChangeEventHandler^  BasicDirectionRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicDirectionRowChangeEventHandler^  BasicDirectionRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicDirectionRowChangeEventHandler^  BasicDirectionRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicDirectionDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicDirectionDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicDirectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  typeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxAngleDifferenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::BasicDirectionRow^  default [::System::Int32 ] {
            NewDataSet::BasicDirectionRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddBasicDirectionRow(NewDataSet::BasicDirectionRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::BasicDirectionRow^  AddBasicDirectionRow(System::String^  type, System::Single maxAngleDifference, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_BasicDirection);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::BasicDirectionRow^  NewBasicDirectionRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveBasicDirectionRow(NewDataSet::BasicDirectionRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class SpeedDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnmin;
        
        private: ::System::Data::DataColumn^  columnmax;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::SpeedRowChangeEventHandler^  SpeedRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::SpeedRowChangeEventHandler^  SpeedRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::SpeedRowChangeEventHandler^  SpeedRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::SpeedRowChangeEventHandler^  SpeedRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        SpeedDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        SpeedDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        SpeedDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::SpeedRow^  default [::System::Int32 ] {
            NewDataSet::SpeedRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddSpeedRow(NewDataSet::SpeedRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::SpeedRow^  AddSpeedRow(System::Single min, System::Single max, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Speed);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::SpeedRow^  NewSpeedRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveSpeedRow(NewDataSet::SpeedRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class LengthDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnmin;
        
        private: ::System::Data::DataColumn^  columnmax;
        
        private: ::System::Data::DataColumn^  columnmeasuringUnit;
        
        private: ::System::Data::DataColumn^  columnLinearMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LengthRowChangeEventHandler^  LengthRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LengthRowChangeEventHandler^  LengthRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LengthRowChangeEventHandler^  LengthRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::LengthRowChangeEventHandler^  LengthRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LengthDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LengthDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LengthDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  measuringUnitColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  LinearMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LengthRow^  default [::System::Int32 ] {
            NewDataSet::LengthRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddLengthRow(NewDataSet::LengthRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::LengthRow^  AddLengthRow(System::Single min, System::Single max, System::String^  measuringUnit, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Length);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::LengthRow^  NewLengthRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveLengthRow(NewDataSet::LengthRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class AngularMovementRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnvisibility;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseLocalOrientations;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AngularMovementRecognizerRowChangeEventHandler^  AngularMovementRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AngularMovementRecognizerRowChangeEventHandler^  AngularMovementRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AngularMovementRecognizerRowChangeEventHandler^  AngularMovementRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AngularMovementRecognizerRowChangeEventHandler^  AngularMovementRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AngularMovementRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AngularMovementRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AngularMovementRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  visibilityColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useLocalOrientationsColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::AngularMovementRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddAngularMovementRecognizerRow(NewDataSet::AngularMovementRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::AngularMovementRecognizerRow^  AddAngularMovementRecognizerRow(
                    System::String^  name, 
                    System::String^  visibility, 
                    System::String^  minConfidence, 
                    System::Boolean useLocalOrientations, 
                    System::Boolean useFilteredData, 
                    NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_AngularMovementRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::AngularMovementRecognizerRow^  NewAngularMovementRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveAngularMovementRecognizerRow(NewDataSet::AngularMovementRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MaxAngularVelocityDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxAngularVelocityRowChangeEventHandler^  MaxAngularVelocityRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxAngularVelocityRowChangeEventHandler^  MaxAngularVelocityRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxAngularVelocityRowChangeEventHandler^  MaxAngularVelocityRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MaxAngularVelocityRowChangeEventHandler^  MaxAngularVelocityRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxAngularVelocityDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxAngularVelocityDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxAngularVelocityDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MaxAngularVelocityRow^  default [::System::Int32 ] {
            NewDataSet::MaxAngularVelocityRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMaxAngularVelocityRow(NewDataSet::MaxAngularVelocityRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MaxAngularVelocityRow^  AddMaxAngularVelocityRow(System::Single x, System::Single y, System::Single z, 
                    NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_MaxAngularVelocity);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MaxAngularVelocityRow^  NewMaxAngularVelocityRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMaxAngularVelocityRow(NewDataSet::MaxAngularVelocityRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class MinAngularVelocityDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinAngularVelocityRowChangeEventHandler^  MinAngularVelocityRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinAngularVelocityRowChangeEventHandler^  MinAngularVelocityRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinAngularVelocityRowChangeEventHandler^  MinAngularVelocityRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::MinAngularVelocityRowChangeEventHandler^  MinAngularVelocityRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinAngularVelocityDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinAngularVelocityDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinAngularVelocityDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MinAngularVelocityRow^  default [::System::Int32 ] {
            NewDataSet::MinAngularVelocityRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddMinAngularVelocityRow(NewDataSet::MinAngularVelocityRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MinAngularVelocityRow^  AddMinAngularVelocityRow(System::Single x, System::Single y, System::Single z, 
                    NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_MinAngularVelocity);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::MinAngularVelocityRow^  NewMinAngularVelocityRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveMinAngularVelocityRow(NewDataSet::MinAngularVelocityRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class BasicAngularVelocityDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columntype;
        
        private: ::System::Data::DataColumn^  columnmin;
        
        private: ::System::Data::DataColumn^  columnmax;
        
        private: ::System::Data::DataColumn^  columnAngularMovementRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicAngularVelocityRowChangeEventHandler^  BasicAngularVelocityRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicAngularVelocityRowChangeEventHandler^  BasicAngularVelocityRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicAngularVelocityRowChangeEventHandler^  BasicAngularVelocityRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::BasicAngularVelocityRowChangeEventHandler^  BasicAngularVelocityRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicAngularVelocityDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicAngularVelocityDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicAngularVelocityDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  typeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AngularMovementRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::BasicAngularVelocityRow^  default [::System::Int32 ] {
            NewDataSet::BasicAngularVelocityRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddBasicAngularVelocityRow(NewDataSet::BasicAngularVelocityRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::BasicAngularVelocityRow^  AddBasicAngularVelocityRow(System::String^  type, System::Single min, System::Single max, 
                    NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_BasicAngularVelocity);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::BasicAngularVelocityRow^  NewBasicAngularVelocityRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveBasicAngularVelocityRow(NewDataSet::BasicAngularVelocityRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class FingerCountRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnvisibility;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnFingerCountRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRecognizerRowChangeEventHandler^  FingerCountRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRecognizerRowChangeEventHandler^  FingerCountRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRecognizerRowChangeEventHandler^  FingerCountRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRecognizerRowChangeEventHandler^  FingerCountRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  visibilityColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FingerCountRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::FingerCountRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddFingerCountRecognizerRow(NewDataSet::FingerCountRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::FingerCountRecognizerRow^  AddFingerCountRecognizerRow(System::String^  name, System::String^  visibility, 
                    System::Single minConfidence, System::Boolean useFilteredData, NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_FingerCountRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::FingerCountRecognizerRow^  NewFingerCountRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveFingerCountRecognizerRow(NewDataSet::FingerCountRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class FingerCountDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnmin;
        
        private: ::System::Data::DataColumn^  columnmax;
        
        private: ::System::Data::DataColumn^  columnuseMedianCalculation;
        
        private: ::System::Data::DataColumn^  columnmedianWindowSize;
        
        private: ::System::Data::DataColumn^  columnFingerCountRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRowChangeEventHandler^  FingerCountRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRowChangeEventHandler^  FingerCountRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRowChangeEventHandler^  FingerCountRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::FingerCountRowChangeEventHandler^  FingerCountRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useMedianCalculationColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  medianWindowSizeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FingerCountRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRow^  default [::System::Int32 ] {
            NewDataSet::FingerCountRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddFingerCountRow(NewDataSet::FingerCountRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::FingerCountRow^  AddFingerCountRow(System::Int64 min, System::Int64 max, System::Boolean useMedianCalculation, 
                    System::UInt32 medianWindowSize, NewDataSet::FingerCountRecognizerRow^  parentFingerCountRecognizerRowByFingerCountRecognizer_FingerCount);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::FingerCountRow^  NewFingerCountRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveFingerCountRow(NewDataSet::FingerCountRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class TemplateRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnvisibility;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnuseLocalTransformations;
        
        private: ::System::Data::DataColumn^  columnmeasuringUnit;
        
        private: ::System::Data::DataColumn^  columnuseOrientations;
        
        private: ::System::Data::DataColumn^  columnuseDTW;
        
        private: ::System::Data::DataColumn^  columnapplyResampling;
        
        private: ::System::Data::DataColumn^  columnstochasticModel;
        
        private: ::System::Data::DataColumn^  columnnumGMRStates;
        
        private: ::System::Data::DataColumn^  columnmaxDistance;
        
        private: ::System::Data::DataColumn^  columndistanceMeasure;
        
        private: ::System::Data::DataColumn^  columnmaxRotation;
        
        private: ::System::Data::DataColumn^  columnaspectInvariant;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TemplateRecognizerRowChangeEventHandler^  TemplateRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TemplateRecognizerRowChangeEventHandler^  TemplateRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TemplateRecognizerRowChangeEventHandler^  TemplateRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TemplateRecognizerRowChangeEventHandler^  TemplateRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TemplateRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TemplateRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TemplateRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  visibilityColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useLocalTransformationsColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  measuringUnitColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useOrientationsColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useDTWColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  applyResamplingColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  stochasticModelColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  numGMRStatesColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxDistanceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  distanceMeasureColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxRotationColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  aspectInvariantColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::TemplateRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddTemplateRecognizerRow(NewDataSet::TemplateRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::TemplateRecognizerRow^  AddTemplateRecognizerRow(
                    System::String^  name, 
                    System::String^  visibility, 
                    System::Single minConfidence, 
                    System::Boolean useFilteredData, 
                    System::Boolean useLocalTransformations, 
                    System::String^  measuringUnit, 
                    System::Boolean useOrientations, 
                    System::Boolean useDTW, 
                    System::Boolean applyResampling, 
                    System::String^  stochasticModel, 
                    System::UInt32 numGMRStates, 
                    System::Single maxDistance, 
                    System::String^  distanceMeasure, 
                    System::Single maxRotation, 
                    System::Boolean aspectInvariant, 
                    NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_TemplateRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::TemplateRecognizerRow^  NewTemplateRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveTemplateRecognizerRow(NewDataSet::TemplateRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class TrainingDataDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnfile;
        
        private: ::System::Data::DataColumn^  columnstart;
        
        private: ::System::Data::DataColumn^  columnend;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TrainingDataRowChangeEventHandler^  TrainingDataRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TrainingDataRowChangeEventHandler^  TrainingDataRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TrainingDataRowChangeEventHandler^  TrainingDataRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::TrainingDataRowChangeEventHandler^  TrainingDataRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TrainingDataDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TrainingDataDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TrainingDataDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  fileColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  startColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  endColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TrainingDataRow^  default [::System::Int32 ] {
            NewDataSet::TrainingDataRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddTrainingDataRow(NewDataSet::TrainingDataRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::TrainingDataRow^  AddTrainingDataRow(System::String^  file, System::Int32 start, System::Int32 end, NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_TrainingData);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::TrainingDataRow^  NewTrainingDataRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveTrainingDataRow(NewDataSet::TrainingDataRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class IgnoreAxesDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnx;
        
        private: ::System::Data::DataColumn^  columny;
        
        private: ::System::Data::DataColumn^  columnz;
        
        private: ::System::Data::DataColumn^  columnTemplateRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::IgnoreAxesRowChangeEventHandler^  IgnoreAxesRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::IgnoreAxesRowChangeEventHandler^  IgnoreAxesRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::IgnoreAxesRowChangeEventHandler^  IgnoreAxesRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::IgnoreAxesRowChangeEventHandler^  IgnoreAxesRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        IgnoreAxesDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        IgnoreAxesDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        IgnoreAxesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  xColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  yColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  zColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  TemplateRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::IgnoreAxesRow^  default [::System::Int32 ] {
            NewDataSet::IgnoreAxesRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddIgnoreAxesRow(NewDataSet::IgnoreAxesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::IgnoreAxesRow^  AddIgnoreAxesRow(System::Boolean x, System::Boolean y, System::Boolean z, NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_IgnoreAxes);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::IgnoreAxesRow^  NewIgnoreAxesRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveIgnoreAxesRow(NewDataSet::IgnoreAxesRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class CombinationRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnwaitUntilLastStateRecognizersStop;
        
        private: ::System::Data::DataColumn^  columnCombinationRecognizer_Id;
        
        private: ::System::Data::DataColumn^  columnFubiRecognizers_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::CombinationRecognizerRowChangeEventHandler^  CombinationRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::CombinationRecognizerRowChangeEventHandler^  CombinationRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::CombinationRecognizerRowChangeEventHandler^  CombinationRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::CombinationRecognizerRowChangeEventHandler^  CombinationRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        CombinationRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        CombinationRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        CombinationRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  waitUntilLastStateRecognizersStopColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  CombinationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  FubiRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::CombinationRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::CombinationRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddCombinationRecognizerRow(NewDataSet::CombinationRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::CombinationRecognizerRow^  AddCombinationRecognizerRow(System::String^  name, System::Boolean waitUntilLastStateRecognizersStop, 
                    NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_CombinationRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::CombinationRecognizerRow^  NewCombinationRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveCombinationRecognizerRow(NewDataSet::CombinationRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class StateDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnminDuration;
        
        private: ::System::Data::DataColumn^  columnmaxDuration;
        
        private: ::System::Data::DataColumn^  columntimeForTransition;
        
        private: ::System::Data::DataColumn^  columnmaxInterruptionTime;
        
        private: ::System::Data::DataColumn^  columnnoInterruptionBeforeMinDuration;
        
        private: ::System::Data::DataColumn^  columnonFail;
        
        private: ::System::Data::DataColumn^  columnState_Id;
        
        private: ::System::Data::DataColumn^  columnCombinationRecognizer_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::StateRowChangeEventHandler^  StateRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::StateRowChangeEventHandler^  StateRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::StateRowChangeEventHandler^  StateRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::StateRowChangeEventHandler^  StateRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        StateDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        StateDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        StateDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minDurationColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxDurationColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  timeForTransitionColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  maxInterruptionTimeColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  noInterruptionBeforeMinDurationColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  onFailColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  State_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  CombinationRecognizer_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::StateRow^  default [::System::Int32 ] {
            NewDataSet::StateRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddStateRow(NewDataSet::StateRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::StateRow^  AddStateRow(
                    System::Single minDuration, 
                    System::Single maxDuration, 
                    System::Single timeForTransition, 
                    System::Single maxInterruptionTime, 
                    System::Boolean noInterruptionBeforeMinDuration, 
                    System::String^  onFail, 
                    NewDataSet::CombinationRecognizerRow^  parentCombinationRecognizerRowByCombinationRecognizer_State);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::StateRow^  NewStateRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveStateRow(NewDataSet::StateRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class RecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnignoreOnTrackingError;
        
        private: ::System::Data::DataColumn^  columnAlternativeRecognizers_Id;
        
        private: ::System::Data::DataColumn^  columnState_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RecognizerRowChangeEventHandler^  RecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RecognizerRowChangeEventHandler^  RecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RecognizerRowChangeEventHandler^  RecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::RecognizerRowChangeEventHandler^  RecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  ignoreOnTrackingErrorColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AlternativeRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  State_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::RecognizerRow^  default [::System::Int32 ] {
            NewDataSet::RecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddRecognizerRow(NewDataSet::RecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::RecognizerRow^  AddRecognizerRow(
                    System::String^  name, 
                    System::Single minConfidence, 
                    System::Boolean useFilteredData, 
                    System::Boolean ignoreOnTrackingError, 
                    NewDataSet::AlternativeRecognizersRow^  parentAlternativeRecognizersRowByAlternativeRecognizers_Recognizer, 
                    NewDataSet::StateRow^  parentStateRowByState_Recognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::RecognizerRow^  NewRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveRecognizerRow(NewDataSet::RecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class NotRecognizerDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnname;
        
        private: ::System::Data::DataColumn^  columnminConfidence;
        
        private: ::System::Data::DataColumn^  columnuseFilteredData;
        
        private: ::System::Data::DataColumn^  columnignoreOnTrackingError;
        
        private: ::System::Data::DataColumn^  columnAlternativeRecognizers_Id;
        
        private: ::System::Data::DataColumn^  columnState_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::NotRecognizerRowChangeEventHandler^  NotRecognizerRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::NotRecognizerRowChangeEventHandler^  NotRecognizerRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::NotRecognizerRowChangeEventHandler^  NotRecognizerRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::NotRecognizerRowChangeEventHandler^  NotRecognizerRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NotRecognizerDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NotRecognizerDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NotRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  nameColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  minConfidenceColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  useFilteredDataColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  ignoreOnTrackingErrorColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AlternativeRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  State_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::NotRecognizerRow^  default [::System::Int32 ] {
            NewDataSet::NotRecognizerRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddNotRecognizerRow(NewDataSet::NotRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::NotRecognizerRow^  AddNotRecognizerRow(
                    System::String^  name, 
                    System::Single minConfidence, 
                    System::Boolean useFilteredData, 
                    System::Boolean ignoreOnTrackingError, 
                    NewDataSet::AlternativeRecognizersRow^  parentAlternativeRecognizersRowByAlternativeRecognizers_NotRecognizer, 
                    NewDataSet::StateRow^  parentStateRowByState_NotRecognizer);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::NotRecognizerRow^  NewNotRecognizerRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveNotRecognizerRow(NewDataSet::NotRecognizerRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents the strongly named DataTable class.
///</summary>
    [System::Serializable, 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
    ref class AlternativeRecognizersDataTable : public ::System::Data::DataTable, public ::System::Collections::IEnumerable {
        
        private: ::System::Data::DataColumn^  columnAlternativeRecognizers_Id;
        
        private: ::System::Data::DataColumn^  columnState_Id;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AlternativeRecognizersRowChangeEventHandler^  AlternativeRecognizersRowChanging;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AlternativeRecognizersRowChangeEventHandler^  AlternativeRecognizersRowChanged;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AlternativeRecognizersRowChangeEventHandler^  AlternativeRecognizersRowDeleting;
        
        public: [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        event NewDataSet::AlternativeRecognizersRowChangeEventHandler^  AlternativeRecognizersRowDeleted;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AlternativeRecognizersDataTable();
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AlternativeRecognizersDataTable(::System::Data::DataTable^  table);
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AlternativeRecognizersDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  AlternativeRecognizers_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataColumn^  State_IdColumn {
            ::System::Data::DataColumn^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0"), 
        System::ComponentModel::Browsable(false)]
        property ::System::Int32 Count {
            ::System::Int32 get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AlternativeRecognizersRow^  default [::System::Int32 ] {
            NewDataSet::AlternativeRecognizersRow^  get(::System::Int32 index);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void AddAlternativeRecognizersRow(NewDataSet::AlternativeRecognizersRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::AlternativeRecognizersRow^  AddAlternativeRecognizersRow(NewDataSet::StateRow^  parentStateRowByState_AlternativeRecognizers);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Collections::IEnumerator^  GetEnumerator();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataTable^  CreateInstance() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitVars();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void InitClass();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NewDataSet::AlternativeRecognizersRow^  NewAlternativeRecognizersRow();
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Data::DataRow^  NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Type^  GetRowType() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        virtual ::System::Void OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void RemoveAlternativeRecognizersRow(NewDataSet::AlternativeRecognizersRow^  row);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        static ::System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs);
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class FubiRecognizersRow : public ::System::Data::DataRow {
        
        private: NewDataSet::FubiRecognizersDataTable^  tableFubiRecognizers;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FubiRecognizersRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single globalMinConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean globalUseFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsglobalMinConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetglobalMinConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsglobalUseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetglobalUseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRelationRecognizerRow^  >^  GetJointRelationRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointOrientationRecognizerRow^  >^  GetJointOrientationRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::LinearMovementRecognizerRow^  >^  GetLinearMovementRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::AngularMovementRecognizerRow^  >^  GetAngularMovementRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::FingerCountRecognizerRow^  >^  GetFingerCountRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::TemplateRecognizerRow^  >^  GetTemplateRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::CombinationRecognizerRow^  >^  GetCombinationRecognizerRows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class JointRelationRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::JointRelationRecognizerDataTable^  tableJointRelationRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRelationRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  visibility {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useLocalPositions {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  measuringUnit {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseLocalPositionsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseLocalPositionsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmeasuringUnitNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmeasuringUnitNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointsRow^  >^  GetJointsRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRow^  >^  GetJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::HandJointsRow^  >^  GetHandJointsRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MaxValuesRow^  >^  GetMaxValuesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MinValuesRow^  >^  GetMinValuesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::RelationRow^  >^  GetRelationRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MiddleJointRow^  >^  GetMiddleJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class JointsRow : public ::System::Data::DataRow {
        
        private: NewDataSet::JointsDataTable^  tableJoints;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointsRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  main {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  relative {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  TemplateRecognizerRow {
            NewDataSet::TemplateRecognizerRow^  get();
            System::Void set(NewDataSet::TemplateRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsrelativeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetrelativeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetTemplateRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class JointRow : public ::System::Data::DataRow {
        
        private: NewDataSet::JointDataTable^  tableJoint;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 MiddleJoint_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FingerCountRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  MiddleJointRow {
            NewDataSet::MiddleJointRow^  get();
            System::Void set(NewDataSet::MiddleJointRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  JointOrientationRecognizerRow {
            NewDataSet::JointOrientationRecognizerRow^  get();
            System::Void set(NewDataSet::JointOrientationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  AngularMovementRecognizerRow {
            NewDataSet::AngularMovementRecognizerRow^  get();
            System::Void set(NewDataSet::AngularMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRecognizerRow^  FingerCountRecognizerRow {
            NewDataSet::FingerCountRecognizerRow^  get();
            System::Void set(NewDataSet::FingerCountRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  TemplateRecognizerRow {
            NewDataSet::TemplateRecognizerRow^  get();
            System::Void set(NewDataSet::TemplateRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFingerCountRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFingerCountRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetTemplateRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class HandJointsRow : public ::System::Data::DataRow {
        
        private: NewDataSet::HandJointsDataTable^  tableHandJoints;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointsRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  main {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  relative {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  TemplateRecognizerRow {
            NewDataSet::TemplateRecognizerRow^  get();
            System::Void set(NewDataSet::TemplateRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsrelativeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetrelativeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetTemplateRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MaxValuesRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MaxValuesDataTable^  tableMaxValues;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxValuesRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single dist {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 MiddleJoint_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  MiddleJointRow {
            NewDataSet::MiddleJointRow^  get();
            System::Void set(NewDataSet::MiddleJointRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsdistNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetdistNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MinValuesRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MinValuesDataTable^  tableMinValues;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinValuesRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single dist {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 MiddleJoint_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  MiddleJointRow {
            NewDataSet::MiddleJointRow^  get();
            System::Void set(NewDataSet::MiddleJointRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsdistNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetdistNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class RelationRow : public ::System::Data::DataRow {
        
        private: NewDataSet::RelationDataTable^  tableRelation;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RelationRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  type {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single min {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single max {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 MiddleJoint_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  MiddleJointRow {
            NewDataSet::MiddleJointRow^  get();
            System::Void set(NewDataSet::MiddleJointRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MiddleJointRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MiddleJointDataTable^  tableMiddleJoint;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MiddleJointRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 MiddleJoint_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRow^  >^  GetJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::HandJointRow^  >^  GetHandJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MaxValuesRow^  >^  GetMaxValuesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MinValuesRow^  >^  GetMinValuesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::RelationRow^  >^  GetRelationRows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class HandJointRow : public ::System::Data::DataRow {
        
        private: NewDataSet::HandJointDataTable^  tableHandJoint;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 MiddleJoint_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  MiddleJointRow {
            NewDataSet::MiddleJointRow^  get();
            System::Void set(NewDataSet::MiddleJointRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  JointOrientationRecognizerRow {
            NewDataSet::JointOrientationRecognizerRow^  get();
            System::Void set(NewDataSet::JointOrientationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  AngularMovementRecognizerRow {
            NewDataSet::AngularMovementRecognizerRow^  get();
            System::Void set(NewDataSet::AngularMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetMiddleJoint_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAngularMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class METAINFORow : public ::System::Data::DataRow {
        
        private: NewDataSet::METAINFODataTable^  tableMETAINFO;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        METAINFORow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 METAINFO_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointRelationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FingerCountRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 State_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 CombinationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  JointRelationRecognizerRow {
            NewDataSet::JointRelationRecognizerRow^  get();
            System::Void set(NewDataSet::JointRelationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  JointOrientationRecognizerRow {
            NewDataSet::JointOrientationRecognizerRow^  get();
            System::Void set(NewDataSet::JointOrientationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  AngularMovementRecognizerRow {
            NewDataSet::AngularMovementRecognizerRow^  get();
            System::Void set(NewDataSet::AngularMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRecognizerRow^  FingerCountRecognizerRow {
            NewDataSet::FingerCountRecognizerRow^  get();
            System::Void set(NewDataSet::FingerCountRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  TemplateRecognizerRow {
            NewDataSet::TemplateRecognizerRow^  get();
            System::Void set(NewDataSet::TemplateRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::StateRow^  StateRow {
            NewDataSet::StateRow^  get();
            System::Void set(NewDataSet::StateRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::CombinationRecognizerRow^  CombinationRecognizerRow {
            NewDataSet::CombinationRecognizerRow^  get();
            System::Void set(NewDataSet::CombinationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointRelationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFingerCountRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFingerCountRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsState_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetState_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsCombinationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetCombinationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::PropertyRow^  >^  GetPropertyRows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class PropertyRow : public ::System::Data::DataRow {
        
        private: NewDataSet::PropertyDataTable^  tableProperty;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        PropertyRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  _value {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 METAINFO_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::METAINFORow^  METAINFORow {
            NewDataSet::METAINFORow^  get();
            System::Void set(NewDataSet::METAINFORow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsMETAINFO_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetMETAINFO_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class JointOrientationRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::JointOrientationRecognizerDataTable^  tableJointOrientationRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointOrientationRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  visibility {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useLocalOrientations {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseLocalOrientationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseLocalOrientationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRow^  >^  GetJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::HandJointRow^  >^  GetHandJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MaxDegreesRow^  >^  GetMaxDegreesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MinDegreesRow^  >^  GetMinDegreesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::OrientationRow^  >^  GetOrientationRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MaxDegreesRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MaxDegreesDataTable^  tableMaxDegrees;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxDegreesRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  JointOrientationRecognizerRow {
            NewDataSet::JointOrientationRecognizerRow^  get();
            System::Void set(NewDataSet::JointOrientationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointOrientationRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MinDegreesRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MinDegreesDataTable^  tableMinDegrees;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinDegreesRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  JointOrientationRecognizerRow {
            NewDataSet::JointOrientationRecognizerRow^  get();
            System::Void set(NewDataSet::JointOrientationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointOrientationRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class OrientationRow : public ::System::Data::DataRow {
        
        private: NewDataSet::OrientationDataTable^  tableOrientation;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        OrientationRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxAngleDifference {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 JointOrientationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  JointOrientationRecognizerRow {
            NewDataSet::JointOrientationRecognizerRow^  get();
            System::Void set(NewDataSet::JointOrientationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxAngleDifferenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxAngleDifferenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsJointOrientationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetJointOrientationRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class LinearMovementRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::LinearMovementRecognizerDataTable^  tableLinearMovementRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LinearMovementRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  visibility {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useLocalPositions {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useOnlyCorrectDirectionComponent {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseLocalPositionsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseLocalPositionsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseOnlyCorrectDirectionComponentNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseOnlyCorrectDirectionComponentNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointsRow^  >^  GetJointsRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::HandJointsRow^  >^  GetHandJointsRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::DirectionRow^  >^  GetDirectionRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::BasicDirectionRow^  >^  GetBasicDirectionRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::SpeedRow^  >^  GetSpeedRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::LengthRow^  >^  GetLengthRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class DirectionRow : public ::System::Data::DataRow {
        
        private: NewDataSet::DirectionDataTable^  tableDirection;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        DirectionRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxAngleDifference {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxAngleDifferenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxAngleDifferenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class BasicDirectionRow : public ::System::Data::DataRow {
        
        private: NewDataSet::BasicDirectionDataTable^  tableBasicDirection;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicDirectionRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  type {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxAngleDifference {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxAngleDifferenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxAngleDifferenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class SpeedRow : public ::System::Data::DataRow {
        
        private: NewDataSet::SpeedDataTable^  tableSpeed;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        SpeedRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single min {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single max {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class LengthRow : public ::System::Data::DataRow {
        
        private: NewDataSet::LengthDataTable^  tableLength;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LengthRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single min {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single max {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  measuringUnit {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 LinearMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  LinearMovementRecognizerRow {
            NewDataSet::LinearMovementRecognizerRow^  get();
            System::Void set(NewDataSet::LinearMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmeasuringUnitNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmeasuringUnitNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsLinearMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetLinearMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class AngularMovementRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::AngularMovementRecognizerDataTable^  tableAngularMovementRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AngularMovementRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  visibility {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  minConfidence {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useLocalOrientations {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseLocalOrientationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseLocalOrientationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRow^  >^  GetJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::HandJointRow^  >^  GetHandJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MaxAngularVelocityRow^  >^  GetMaxAngularVelocityRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::MinAngularVelocityRow^  >^  GetMinAngularVelocityRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::BasicAngularVelocityRow^  >^  GetBasicAngularVelocityRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MaxAngularVelocityRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MaxAngularVelocityDataTable^  tableMaxAngularVelocity;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxAngularVelocityRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  AngularMovementRecognizerRow {
            NewDataSet::AngularMovementRecognizerRow^  get();
            System::Void set(NewDataSet::AngularMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAngularMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class MinAngularVelocityRow : public ::System::Data::DataRow {
        
        private: NewDataSet::MinAngularVelocityDataTable^  tableMinAngularVelocity;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinAngularVelocityRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single x {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single y {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single z {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  AngularMovementRecognizerRow {
            NewDataSet::AngularMovementRecognizerRow^  get();
            System::Void set(NewDataSet::AngularMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAngularMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class BasicAngularVelocityRow : public ::System::Data::DataRow {
        
        private: NewDataSet::BasicAngularVelocityDataTable^  tableBasicAngularVelocity;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicAngularVelocityRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  type {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single min {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single max {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AngularMovementRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  AngularMovementRecognizerRow {
            NewDataSet::AngularMovementRecognizerRow^  get();
            System::Void set(NewDataSet::AngularMovementRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAngularMovementRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAngularMovementRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class FingerCountRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::FingerCountRecognizerDataTable^  tableFingerCountRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  visibility {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FingerCountRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRow^  >^  GetJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::FingerCountRow^  >^  GetFingerCountRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class FingerCountRow : public ::System::Data::DataRow {
        
        private: NewDataSet::FingerCountDataTable^  tableFingerCount;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int64 min {
            System::Int64 get();
            System::Void set(System::Int64 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int64 max {
            System::Int64 get();
            System::Void set(System::Int64 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useMedianCalculation {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::UInt32 medianWindowSize {
            System::UInt32 get();
            System::Void set(System::UInt32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FingerCountRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRecognizerRow^  FingerCountRecognizerRow {
            NewDataSet::FingerCountRecognizerRow^  get();
            System::Void set(NewDataSet::FingerCountRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseMedianCalculationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseMedianCalculationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmedianWindowSizeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmedianWindowSizeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFingerCountRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFingerCountRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class TemplateRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::TemplateRecognizerDataTable^  tableTemplateRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TemplateRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  visibility {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useLocalTransformations {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  measuringUnit {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useOrientations {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useDTW {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean applyResampling {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  stochasticModel {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::UInt32 numGMRStates {
            System::UInt32 get();
            System::Void set(System::UInt32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxDistance {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  distanceMeasure {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxRotation {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean aspectInvariant {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetvisibilityNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseLocalTransformationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseLocalTransformationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmeasuringUnitNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmeasuringUnitNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseOrientationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseOrientationsNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseDTWNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseDTWNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsapplyResamplingNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetapplyResamplingNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsstochasticModelNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetstochasticModelNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsnumGMRStatesNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetnumGMRStatesNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsdistanceMeasureNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetdistanceMeasureNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxRotationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxRotationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsaspectInvariantNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetaspectInvariantNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointsRow^  >^  GetJointsRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::JointRow^  >^  GetJointRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::HandJointsRow^  >^  GetHandJointsRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::TrainingDataRow^  >^  GetTrainingDataRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::IgnoreAxesRow^  >^  GetIgnoreAxesRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class TrainingDataRow : public ::System::Data::DataRow {
        
        private: NewDataSet::TrainingDataDataTable^  tableTrainingData;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TrainingDataRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  file {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 start {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 end {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  TemplateRecognizerRow {
            NewDataSet::TemplateRecognizerRow^  get();
            System::Void set(NewDataSet::TemplateRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsfileNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetfileNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsstartNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetstartNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsendNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetendNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetTemplateRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class IgnoreAxesRow : public ::System::Data::DataRow {
        
        private: NewDataSet::IgnoreAxesDataTable^  tableIgnoreAxes;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        IgnoreAxesRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean x {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean y {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean z {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 TemplateRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  TemplateRecognizerRow {
            NewDataSet::TemplateRecognizerRow^  get();
            System::Void set(NewDataSet::TemplateRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetxNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetyNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IszNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetzNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsTemplateRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetTemplateRecognizer_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class CombinationRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::CombinationRecognizerDataTable^  tableCombinationRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        CombinationRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean waitUntilLastStateRecognizersStop {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 CombinationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 FubiRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  FubiRecognizersRow {
            NewDataSet::FubiRecognizersRow^  get();
            System::Void set(NewDataSet::FubiRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IswaitUntilLastStateRecognizersStopNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetwaitUntilLastStateRecognizersStopNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetFubiRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::StateRow^  >^  GetStateRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class StateRow : public ::System::Data::DataRow {
        
        private: NewDataSet::StateDataTable^  tableState;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        StateRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minDuration {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxDuration {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single timeForTransition {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single maxInterruptionTime {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean noInterruptionBeforeMinDuration {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  onFail {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 State_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 CombinationRecognizer_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::CombinationRecognizerRow^  CombinationRecognizerRow {
            NewDataSet::CombinationRecognizerRow^  get();
            System::Void set(NewDataSet::CombinationRecognizerRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminDurationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminDurationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxDurationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxDurationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IstimeForTransitionNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SettimeForTransitionNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsmaxInterruptionTimeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetmaxInterruptionTimeNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsnoInterruptionBeforeMinDurationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetnoInterruptionBeforeMinDurationNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsonFailNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetonFailNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsCombinationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetCombinationRecognizer_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::RecognizerRow^  >^  GetRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::NotRecognizerRow^  >^  GetNotRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::AlternativeRecognizersRow^  >^  GetAlternativeRecognizersRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::METAINFORow^  >^  GetMETAINFORows();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class RecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::RecognizerDataTable^  tableRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean ignoreOnTrackingError {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AlternativeRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 State_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AlternativeRecognizersRow^  AlternativeRecognizersRow {
            NewDataSet::AlternativeRecognizersRow^  get();
            System::Void set(NewDataSet::AlternativeRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::StateRow^  StateRow {
            NewDataSet::StateRow^  get();
            System::Void set(NewDataSet::StateRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsignoreOnTrackingErrorNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetignoreOnTrackingErrorNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAlternativeRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAlternativeRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsState_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetState_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class NotRecognizerRow : public ::System::Data::DataRow {
        
        private: NewDataSet::NotRecognizerDataTable^  tableNotRecognizer;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NotRecognizerRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::String^  name {
            System::String^  get();
            System::Void set(System::String^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Single minConfidence {
            System::Single get();
            System::Void set(System::Single value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean useFilteredData {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Boolean ignoreOnTrackingError {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AlternativeRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 State_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AlternativeRecognizersRow^  AlternativeRecognizersRow {
            NewDataSet::AlternativeRecognizersRow^  get();
            System::Void set(NewDataSet::AlternativeRecognizersRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::StateRow^  StateRow {
            NewDataSet::StateRow^  get();
            System::Void set(NewDataSet::StateRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetminConfidenceNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetuseFilteredDataNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsignoreOnTrackingErrorNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetignoreOnTrackingErrorNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsAlternativeRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetAlternativeRecognizers_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsState_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetState_IdNull();
    };
    
    public : /// <summary>
///Represents strongly named DataRow class.
///</summary>
    ref class AlternativeRecognizersRow : public ::System::Data::DataRow {
        
        private: NewDataSet::AlternativeRecognizersDataTable^  tableAlternativeRecognizers;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AlternativeRecognizersRow(::System::Data::DataRowBuilder^  rb);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 AlternativeRecognizers_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property System::Int32 State_Id {
            System::Int32 get();
            System::Void set(System::Int32 value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::StateRow^  StateRow {
            NewDataSet::StateRow^  get();
            System::Void set(NewDataSet::StateRow^  value);
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Boolean IsState_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        ::System::Void SetState_IdNull();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::RecognizerRow^  >^  GetRecognizerRows();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        cli::array< NewDataSet::NotRecognizerRow^  >^  GetNotRecognizerRows();
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class FubiRecognizersRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::FubiRecognizersRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FubiRecognizersRowChangeEvent(NewDataSet::FubiRecognizersRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FubiRecognizersRow^  Row {
            NewDataSet::FubiRecognizersRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class JointRelationRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::JointRelationRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRelationRecognizerRowChangeEvent(NewDataSet::JointRelationRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRelationRecognizerRow^  Row {
            NewDataSet::JointRelationRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class JointsRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::JointsRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointsRowChangeEvent(NewDataSet::JointsRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointsRow^  Row {
            NewDataSet::JointsRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class JointRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::JointRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointRowChangeEvent(NewDataSet::JointRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointRow^  Row {
            NewDataSet::JointRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class HandJointsRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::HandJointsRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointsRowChangeEvent(NewDataSet::HandJointsRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::HandJointsRow^  Row {
            NewDataSet::HandJointsRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MaxValuesRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MaxValuesRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxValuesRowChangeEvent(NewDataSet::MaxValuesRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MaxValuesRow^  Row {
            NewDataSet::MaxValuesRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MinValuesRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MinValuesRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinValuesRowChangeEvent(NewDataSet::MinValuesRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MinValuesRow^  Row {
            NewDataSet::MinValuesRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class RelationRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::RelationRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RelationRowChangeEvent(NewDataSet::RelationRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::RelationRow^  Row {
            NewDataSet::RelationRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MiddleJointRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MiddleJointRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MiddleJointRowChangeEvent(NewDataSet::MiddleJointRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MiddleJointRow^  Row {
            NewDataSet::MiddleJointRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class HandJointRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::HandJointRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        HandJointRowChangeEvent(NewDataSet::HandJointRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::HandJointRow^  Row {
            NewDataSet::HandJointRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class METAINFORowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::METAINFORow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        METAINFORowChangeEvent(NewDataSet::METAINFORow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::METAINFORow^  Row {
            NewDataSet::METAINFORow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class PropertyRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::PropertyRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        PropertyRowChangeEvent(NewDataSet::PropertyRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::PropertyRow^  Row {
            NewDataSet::PropertyRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class JointOrientationRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::JointOrientationRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        JointOrientationRecognizerRowChangeEvent(NewDataSet::JointOrientationRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::JointOrientationRecognizerRow^  Row {
            NewDataSet::JointOrientationRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MaxDegreesRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MaxDegreesRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxDegreesRowChangeEvent(NewDataSet::MaxDegreesRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MaxDegreesRow^  Row {
            NewDataSet::MaxDegreesRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MinDegreesRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MinDegreesRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinDegreesRowChangeEvent(NewDataSet::MinDegreesRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MinDegreesRow^  Row {
            NewDataSet::MinDegreesRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class OrientationRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::OrientationRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        OrientationRowChangeEvent(NewDataSet::OrientationRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::OrientationRow^  Row {
            NewDataSet::OrientationRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class LinearMovementRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::LinearMovementRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LinearMovementRecognizerRowChangeEvent(NewDataSet::LinearMovementRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LinearMovementRecognizerRow^  Row {
            NewDataSet::LinearMovementRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class DirectionRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::DirectionRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        DirectionRowChangeEvent(NewDataSet::DirectionRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::DirectionRow^  Row {
            NewDataSet::DirectionRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class BasicDirectionRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::BasicDirectionRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicDirectionRowChangeEvent(NewDataSet::BasicDirectionRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::BasicDirectionRow^  Row {
            NewDataSet::BasicDirectionRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class SpeedRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::SpeedRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        SpeedRowChangeEvent(NewDataSet::SpeedRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::SpeedRow^  Row {
            NewDataSet::SpeedRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class LengthRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::LengthRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        LengthRowChangeEvent(NewDataSet::LengthRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::LengthRow^  Row {
            NewDataSet::LengthRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class AngularMovementRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::AngularMovementRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AngularMovementRecognizerRowChangeEvent(NewDataSet::AngularMovementRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AngularMovementRecognizerRow^  Row {
            NewDataSet::AngularMovementRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MaxAngularVelocityRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MaxAngularVelocityRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MaxAngularVelocityRowChangeEvent(NewDataSet::MaxAngularVelocityRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MaxAngularVelocityRow^  Row {
            NewDataSet::MaxAngularVelocityRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class MinAngularVelocityRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::MinAngularVelocityRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        MinAngularVelocityRowChangeEvent(NewDataSet::MinAngularVelocityRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::MinAngularVelocityRow^  Row {
            NewDataSet::MinAngularVelocityRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class BasicAngularVelocityRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::BasicAngularVelocityRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        BasicAngularVelocityRowChangeEvent(NewDataSet::BasicAngularVelocityRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::BasicAngularVelocityRow^  Row {
            NewDataSet::BasicAngularVelocityRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class FingerCountRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::FingerCountRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRecognizerRowChangeEvent(NewDataSet::FingerCountRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRecognizerRow^  Row {
            NewDataSet::FingerCountRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class FingerCountRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::FingerCountRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        FingerCountRowChangeEvent(NewDataSet::FingerCountRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::FingerCountRow^  Row {
            NewDataSet::FingerCountRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class TemplateRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::TemplateRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TemplateRecognizerRowChangeEvent(NewDataSet::TemplateRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TemplateRecognizerRow^  Row {
            NewDataSet::TemplateRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class TrainingDataRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::TrainingDataRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        TrainingDataRowChangeEvent(NewDataSet::TrainingDataRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::TrainingDataRow^  Row {
            NewDataSet::TrainingDataRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class IgnoreAxesRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::IgnoreAxesRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        IgnoreAxesRowChangeEvent(NewDataSet::IgnoreAxesRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::IgnoreAxesRow^  Row {
            NewDataSet::IgnoreAxesRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class CombinationRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::CombinationRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        CombinationRecognizerRowChangeEvent(NewDataSet::CombinationRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::CombinationRecognizerRow^  Row {
            NewDataSet::CombinationRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class StateRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::StateRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        StateRowChangeEvent(NewDataSet::StateRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::StateRow^  Row {
            NewDataSet::StateRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class RecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::RecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        RecognizerRowChangeEvent(NewDataSet::RecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::RecognizerRow^  Row {
            NewDataSet::RecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class NotRecognizerRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::NotRecognizerRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        NotRecognizerRowChangeEvent(NewDataSet::NotRecognizerRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::NotRecognizerRow^  Row {
            NewDataSet::NotRecognizerRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
    
    public : /// <summary>
///Row event argument class
///</summary>
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
    ref class AlternativeRecognizersRowChangeEvent : public ::System::EventArgs {
        
        private: NewDataSet::AlternativeRecognizersRow^  eventRow;
        
        private: ::System::Data::DataRowAction eventAction;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        AlternativeRecognizersRowChangeEvent(NewDataSet::AlternativeRecognizersRow^  row, ::System::Data::DataRowAction action);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property NewDataSet::AlternativeRecognizersRow^  Row {
            NewDataSet::AlternativeRecognizersRow^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"4.0.0.0")]
        property ::System::Data::DataRowAction Action {
            ::System::Data::DataRowAction get();
        }
    };
};


inline NewDataSet::NewDataSet() {
    this->BeginInit();
    this->InitClass();
    ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &NewDataSet::SchemaChanged);
    __super::Tables->CollectionChanged += schemaChangedHandler;
    __super::Relations->CollectionChanged += schemaChangedHandler;
    this->EndInit();
}

inline NewDataSet::NewDataSet(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataSet(info, context, false) {
    if (this->IsBinarySerialized(info, context) == true) {
        this->InitVars(false);
        ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &NewDataSet::SchemaChanged);
        this->Tables->CollectionChanged += schemaChangedHandler1;
        this->Relations->CollectionChanged += schemaChangedHandler1;
        return;
    }
    ::System::String^  strSchema = (cli::safe_cast<::System::String^  >(info->GetValue(L"XmlSchema", ::System::String::typeid)));
    if (this->DetermineSchemaSerializationMode(info, context) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
        ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
        ds->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
        if (ds->Tables[L"FubiRecognizers"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::FubiRecognizersDataTable(ds->Tables[L"FubiRecognizers"])));
        }
        if (ds->Tables[L"JointRelationRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointRelationRecognizerDataTable(ds->Tables[L"JointRelationRecognizer"])));
        }
        if (ds->Tables[L"Joints"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointsDataTable(ds->Tables[L"Joints"])));
        }
        if (ds->Tables[L"Joint"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointDataTable(ds->Tables[L"Joint"])));
        }
        if (ds->Tables[L"HandJoints"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::HandJointsDataTable(ds->Tables[L"HandJoints"])));
        }
        if (ds->Tables[L"MaxValues"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MaxValuesDataTable(ds->Tables[L"MaxValues"])));
        }
        if (ds->Tables[L"MinValues"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MinValuesDataTable(ds->Tables[L"MinValues"])));
        }
        if (ds->Tables[L"Relation"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::RelationDataTable(ds->Tables[L"Relation"])));
        }
        if (ds->Tables[L"MiddleJoint"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MiddleJointDataTable(ds->Tables[L"MiddleJoint"])));
        }
        if (ds->Tables[L"HandJoint"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::HandJointDataTable(ds->Tables[L"HandJoint"])));
        }
        if (ds->Tables[L"METAINFO"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::METAINFODataTable(ds->Tables[L"METAINFO"])));
        }
        if (ds->Tables[L"Property"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::PropertyDataTable(ds->Tables[L"Property"])));
        }
        if (ds->Tables[L"JointOrientationRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointOrientationRecognizerDataTable(ds->Tables[L"JointOrientationRecognizer"])));
        }
        if (ds->Tables[L"MaxDegrees"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MaxDegreesDataTable(ds->Tables[L"MaxDegrees"])));
        }
        if (ds->Tables[L"MinDegrees"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MinDegreesDataTable(ds->Tables[L"MinDegrees"])));
        }
        if (ds->Tables[L"Orientation"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::OrientationDataTable(ds->Tables[L"Orientation"])));
        }
        if (ds->Tables[L"LinearMovementRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::LinearMovementRecognizerDataTable(ds->Tables[L"LinearMovementRecognizer"])));
        }
        if (ds->Tables[L"Direction"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::DirectionDataTable(ds->Tables[L"Direction"])));
        }
        if (ds->Tables[L"BasicDirection"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::BasicDirectionDataTable(ds->Tables[L"BasicDirection"])));
        }
        if (ds->Tables[L"Speed"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::SpeedDataTable(ds->Tables[L"Speed"])));
        }
        if (ds->Tables[L"Length"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::LengthDataTable(ds->Tables[L"Length"])));
        }
        if (ds->Tables[L"AngularMovementRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::AngularMovementRecognizerDataTable(ds->Tables[L"AngularMovementRecognizer"])));
        }
        if (ds->Tables[L"MaxAngularVelocity"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MaxAngularVelocityDataTable(ds->Tables[L"MaxAngularVelocity"])));
        }
        if (ds->Tables[L"MinAngularVelocity"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MinAngularVelocityDataTable(ds->Tables[L"MinAngularVelocity"])));
        }
        if (ds->Tables[L"BasicAngularVelocity"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::BasicAngularVelocityDataTable(ds->Tables[L"BasicAngularVelocity"])));
        }
        if (ds->Tables[L"FingerCountRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::FingerCountRecognizerDataTable(ds->Tables[L"FingerCountRecognizer"])));
        }
        if (ds->Tables[L"FingerCount"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::FingerCountDataTable(ds->Tables[L"FingerCount"])));
        }
        if (ds->Tables[L"TemplateRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::TemplateRecognizerDataTable(ds->Tables[L"TemplateRecognizer"])));
        }
        if (ds->Tables[L"TrainingData"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::TrainingDataDataTable(ds->Tables[L"TrainingData"])));
        }
        if (ds->Tables[L"IgnoreAxes"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::IgnoreAxesDataTable(ds->Tables[L"IgnoreAxes"])));
        }
        if (ds->Tables[L"CombinationRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::CombinationRecognizerDataTable(ds->Tables[L"CombinationRecognizer"])));
        }
        if (ds->Tables[L"State"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::StateDataTable(ds->Tables[L"State"])));
        }
        if (ds->Tables[L"Recognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::RecognizerDataTable(ds->Tables[L"Recognizer"])));
        }
        if (ds->Tables[L"NotRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::NotRecognizerDataTable(ds->Tables[L"NotRecognizer"])));
        }
        if (ds->Tables[L"AlternativeRecognizers"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::AlternativeRecognizersDataTable(ds->Tables[L"AlternativeRecognizers"])));
        }
        this->DataSetName = ds->DataSetName;
        this->Prefix = ds->Prefix;
        this->Namespace = ds->Namespace;
        this->Locale = ds->Locale;
        this->CaseSensitive = ds->CaseSensitive;
        this->EnforceConstraints = ds->EnforceConstraints;
        this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
        this->InitVars();
    }
    else {
        this->ReadXmlSchema((gcnew ::System::Xml::XmlTextReader((gcnew ::System::IO::StringReader(strSchema)))));
    }
    this->GetSerializationData(info, context);
    ::System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew ::System::ComponentModel::CollectionChangeEventHandler(this, &NewDataSet::SchemaChanged);
    __super::Tables->CollectionChanged += schemaChangedHandler;
    this->Relations->CollectionChanged += schemaChangedHandler;
}

inline NewDataSet::FubiRecognizersDataTable^  NewDataSet::FubiRecognizers::get() {
    return this->tableFubiRecognizers;
}

inline NewDataSet::JointRelationRecognizerDataTable^  NewDataSet::JointRelationRecognizer::get() {
    return this->tableJointRelationRecognizer;
}

inline NewDataSet::JointsDataTable^  NewDataSet::Joints::get() {
    return this->tableJoints;
}

inline NewDataSet::JointDataTable^  NewDataSet::Joint::get() {
    return this->tableJoint;
}

inline NewDataSet::HandJointsDataTable^  NewDataSet::HandJoints::get() {
    return this->tableHandJoints;
}

inline NewDataSet::MaxValuesDataTable^  NewDataSet::MaxValues::get() {
    return this->tableMaxValues;
}

inline NewDataSet::MinValuesDataTable^  NewDataSet::MinValues::get() {
    return this->tableMinValues;
}

inline NewDataSet::RelationDataTable^  NewDataSet::Relation::get() {
    return this->tableRelation;
}

inline NewDataSet::MiddleJointDataTable^  NewDataSet::MiddleJoint::get() {
    return this->tableMiddleJoint;
}

inline NewDataSet::HandJointDataTable^  NewDataSet::HandJoint::get() {
    return this->tableHandJoint;
}

inline NewDataSet::METAINFODataTable^  NewDataSet::METAINFO::get() {
    return this->tableMETAINFO;
}

inline NewDataSet::PropertyDataTable^  NewDataSet::Property::get() {
    return this->tableProperty;
}

inline NewDataSet::JointOrientationRecognizerDataTable^  NewDataSet::JointOrientationRecognizer::get() {
    return this->tableJointOrientationRecognizer;
}

inline NewDataSet::MaxDegreesDataTable^  NewDataSet::MaxDegrees::get() {
    return this->tableMaxDegrees;
}

inline NewDataSet::MinDegreesDataTable^  NewDataSet::MinDegrees::get() {
    return this->tableMinDegrees;
}

inline NewDataSet::OrientationDataTable^  NewDataSet::Orientation::get() {
    return this->tableOrientation;
}

inline NewDataSet::LinearMovementRecognizerDataTable^  NewDataSet::LinearMovementRecognizer::get() {
    return this->tableLinearMovementRecognizer;
}

inline NewDataSet::DirectionDataTable^  NewDataSet::Direction::get() {
    return this->tableDirection;
}

inline NewDataSet::BasicDirectionDataTable^  NewDataSet::BasicDirection::get() {
    return this->tableBasicDirection;
}

inline NewDataSet::SpeedDataTable^  NewDataSet::Speed::get() {
    return this->tableSpeed;
}

inline NewDataSet::LengthDataTable^  NewDataSet::Length::get() {
    return this->tableLength;
}

inline NewDataSet::AngularMovementRecognizerDataTable^  NewDataSet::AngularMovementRecognizer::get() {
    return this->tableAngularMovementRecognizer;
}

inline NewDataSet::MaxAngularVelocityDataTable^  NewDataSet::MaxAngularVelocity::get() {
    return this->tableMaxAngularVelocity;
}

inline NewDataSet::MinAngularVelocityDataTable^  NewDataSet::MinAngularVelocity::get() {
    return this->tableMinAngularVelocity;
}

inline NewDataSet::BasicAngularVelocityDataTable^  NewDataSet::BasicAngularVelocity::get() {
    return this->tableBasicAngularVelocity;
}

inline NewDataSet::FingerCountRecognizerDataTable^  NewDataSet::FingerCountRecognizer::get() {
    return this->tableFingerCountRecognizer;
}

inline NewDataSet::FingerCountDataTable^  NewDataSet::FingerCount::get() {
    return this->tableFingerCount;
}

inline NewDataSet::TemplateRecognizerDataTable^  NewDataSet::TemplateRecognizer::get() {
    return this->tableTemplateRecognizer;
}

inline NewDataSet::TrainingDataDataTable^  NewDataSet::TrainingData::get() {
    return this->tableTrainingData;
}

inline NewDataSet::IgnoreAxesDataTable^  NewDataSet::IgnoreAxes::get() {
    return this->tableIgnoreAxes;
}

inline NewDataSet::CombinationRecognizerDataTable^  NewDataSet::CombinationRecognizer::get() {
    return this->tableCombinationRecognizer;
}

inline NewDataSet::StateDataTable^  NewDataSet::State::get() {
    return this->tableState;
}

inline NewDataSet::RecognizerDataTable^  NewDataSet::Recognizer::get() {
    return this->tableRecognizer;
}

inline NewDataSet::NotRecognizerDataTable^  NewDataSet::NotRecognizer::get() {
    return this->tableNotRecognizer;
}

inline NewDataSet::AlternativeRecognizersDataTable^  NewDataSet::AlternativeRecognizers::get() {
    return this->tableAlternativeRecognizers;
}

inline ::System::Data::SchemaSerializationMode NewDataSet::SchemaSerializationMode::get() {
    return this->_schemaSerializationMode;
}
inline System::Void NewDataSet::SchemaSerializationMode::set(::System::Data::SchemaSerializationMode value) {
    this->_schemaSerializationMode = __identifier(value);
}

inline ::System::Data::DataTableCollection^  NewDataSet::Tables::get() {
    return __super::Tables;
}

inline ::System::Data::DataRelationCollection^  NewDataSet::Relations::get() {
    return __super::Relations;
}

inline ::System::Void NewDataSet::InitializeDerivedDataSet() {
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline ::System::Data::DataSet^  NewDataSet::Clone() {
    NewDataSet^  cln = (cli::safe_cast<NewDataSet^  >(__super::Clone()));
    cln->InitVars();
    cln->SchemaSerializationMode = this->SchemaSerializationMode;
    return cln;
}

inline ::System::Boolean NewDataSet::ShouldSerializeTables() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeRelations() {
    return false;
}

inline ::System::Void NewDataSet::ReadXmlSerializable(::System::Xml::XmlReader^  reader) {
    if (this->DetermineSchemaSerializationMode(reader) == ::System::Data::SchemaSerializationMode::IncludeSchema) {
        this->Reset();
        ::System::Data::DataSet^  ds = (gcnew ::System::Data::DataSet());
        ds->ReadXml(reader);
        if (ds->Tables[L"FubiRecognizers"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::FubiRecognizersDataTable(ds->Tables[L"FubiRecognizers"])));
        }
        if (ds->Tables[L"JointRelationRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointRelationRecognizerDataTable(ds->Tables[L"JointRelationRecognizer"])));
        }
        if (ds->Tables[L"Joints"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointsDataTable(ds->Tables[L"Joints"])));
        }
        if (ds->Tables[L"Joint"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointDataTable(ds->Tables[L"Joint"])));
        }
        if (ds->Tables[L"HandJoints"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::HandJointsDataTable(ds->Tables[L"HandJoints"])));
        }
        if (ds->Tables[L"MaxValues"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MaxValuesDataTable(ds->Tables[L"MaxValues"])));
        }
        if (ds->Tables[L"MinValues"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MinValuesDataTable(ds->Tables[L"MinValues"])));
        }
        if (ds->Tables[L"Relation"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::RelationDataTable(ds->Tables[L"Relation"])));
        }
        if (ds->Tables[L"MiddleJoint"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MiddleJointDataTable(ds->Tables[L"MiddleJoint"])));
        }
        if (ds->Tables[L"HandJoint"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::HandJointDataTable(ds->Tables[L"HandJoint"])));
        }
        if (ds->Tables[L"METAINFO"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::METAINFODataTable(ds->Tables[L"METAINFO"])));
        }
        if (ds->Tables[L"Property"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::PropertyDataTable(ds->Tables[L"Property"])));
        }
        if (ds->Tables[L"JointOrientationRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::JointOrientationRecognizerDataTable(ds->Tables[L"JointOrientationRecognizer"])));
        }
        if (ds->Tables[L"MaxDegrees"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MaxDegreesDataTable(ds->Tables[L"MaxDegrees"])));
        }
        if (ds->Tables[L"MinDegrees"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MinDegreesDataTable(ds->Tables[L"MinDegrees"])));
        }
        if (ds->Tables[L"Orientation"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::OrientationDataTable(ds->Tables[L"Orientation"])));
        }
        if (ds->Tables[L"LinearMovementRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::LinearMovementRecognizerDataTable(ds->Tables[L"LinearMovementRecognizer"])));
        }
        if (ds->Tables[L"Direction"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::DirectionDataTable(ds->Tables[L"Direction"])));
        }
        if (ds->Tables[L"BasicDirection"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::BasicDirectionDataTable(ds->Tables[L"BasicDirection"])));
        }
        if (ds->Tables[L"Speed"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::SpeedDataTable(ds->Tables[L"Speed"])));
        }
        if (ds->Tables[L"Length"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::LengthDataTable(ds->Tables[L"Length"])));
        }
        if (ds->Tables[L"AngularMovementRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::AngularMovementRecognizerDataTable(ds->Tables[L"AngularMovementRecognizer"])));
        }
        if (ds->Tables[L"MaxAngularVelocity"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MaxAngularVelocityDataTable(ds->Tables[L"MaxAngularVelocity"])));
        }
        if (ds->Tables[L"MinAngularVelocity"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::MinAngularVelocityDataTable(ds->Tables[L"MinAngularVelocity"])));
        }
        if (ds->Tables[L"BasicAngularVelocity"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::BasicAngularVelocityDataTable(ds->Tables[L"BasicAngularVelocity"])));
        }
        if (ds->Tables[L"FingerCountRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::FingerCountRecognizerDataTable(ds->Tables[L"FingerCountRecognizer"])));
        }
        if (ds->Tables[L"FingerCount"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::FingerCountDataTable(ds->Tables[L"FingerCount"])));
        }
        if (ds->Tables[L"TemplateRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::TemplateRecognizerDataTable(ds->Tables[L"TemplateRecognizer"])));
        }
        if (ds->Tables[L"TrainingData"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::TrainingDataDataTable(ds->Tables[L"TrainingData"])));
        }
        if (ds->Tables[L"IgnoreAxes"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::IgnoreAxesDataTable(ds->Tables[L"IgnoreAxes"])));
        }
        if (ds->Tables[L"CombinationRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::CombinationRecognizerDataTable(ds->Tables[L"CombinationRecognizer"])));
        }
        if (ds->Tables[L"State"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::StateDataTable(ds->Tables[L"State"])));
        }
        if (ds->Tables[L"Recognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::RecognizerDataTable(ds->Tables[L"Recognizer"])));
        }
        if (ds->Tables[L"NotRecognizer"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::NotRecognizerDataTable(ds->Tables[L"NotRecognizer"])));
        }
        if (ds->Tables[L"AlternativeRecognizers"] != nullptr) {
            __super::Tables->Add((gcnew NewDataSet::AlternativeRecognizersDataTable(ds->Tables[L"AlternativeRecognizers"])));
        }
        this->DataSetName = ds->DataSetName;
        this->Prefix = ds->Prefix;
        this->Namespace = ds->Namespace;
        this->Locale = ds->Locale;
        this->CaseSensitive = ds->CaseSensitive;
        this->EnforceConstraints = ds->EnforceConstraints;
        this->Merge(ds, false, ::System::Data::MissingSchemaAction::Add);
        this->InitVars();
    }
    else {
        this->ReadXml(reader);
        this->InitVars();
    }
}

inline ::System::Xml::Schema::XmlSchema^  NewDataSet::GetSchemaSerializable() {
    ::System::IO::MemoryStream^  stream = (gcnew ::System::IO::MemoryStream());
    this->WriteXmlSchema((gcnew ::System::Xml::XmlTextWriter(stream, nullptr)));
    stream->Position = 0;
    return ::System::Xml::Schema::XmlSchema::Read((gcnew ::System::Xml::XmlTextReader(stream)), nullptr);
}

inline ::System::Void NewDataSet::InitVars() {
    this->InitVars(true);
}

inline ::System::Void NewDataSet::InitVars(::System::Boolean initTable) {
    this->tableFubiRecognizers = (cli::safe_cast<NewDataSet::FubiRecognizersDataTable^  >(__super::Tables[L"FubiRecognizers"]));
    if (initTable == true) {
        if (this->tableFubiRecognizers != nullptr) {
            this->tableFubiRecognizers->InitVars();
        }
    }
    this->tableJointRelationRecognizer = (cli::safe_cast<NewDataSet::JointRelationRecognizerDataTable^  >(__super::Tables[L"JointRelationRecognizer"]));
    if (initTable == true) {
        if (this->tableJointRelationRecognizer != nullptr) {
            this->tableJointRelationRecognizer->InitVars();
        }
    }
    this->tableJoints = (cli::safe_cast<NewDataSet::JointsDataTable^  >(__super::Tables[L"Joints"]));
    if (initTable == true) {
        if (this->tableJoints != nullptr) {
            this->tableJoints->InitVars();
        }
    }
    this->tableJoint = (cli::safe_cast<NewDataSet::JointDataTable^  >(__super::Tables[L"Joint"]));
    if (initTable == true) {
        if (this->tableJoint != nullptr) {
            this->tableJoint->InitVars();
        }
    }
    this->tableHandJoints = (cli::safe_cast<NewDataSet::HandJointsDataTable^  >(__super::Tables[L"HandJoints"]));
    if (initTable == true) {
        if (this->tableHandJoints != nullptr) {
            this->tableHandJoints->InitVars();
        }
    }
    this->tableMaxValues = (cli::safe_cast<NewDataSet::MaxValuesDataTable^  >(__super::Tables[L"MaxValues"]));
    if (initTable == true) {
        if (this->tableMaxValues != nullptr) {
            this->tableMaxValues->InitVars();
        }
    }
    this->tableMinValues = (cli::safe_cast<NewDataSet::MinValuesDataTable^  >(__super::Tables[L"MinValues"]));
    if (initTable == true) {
        if (this->tableMinValues != nullptr) {
            this->tableMinValues->InitVars();
        }
    }
    this->tableRelation = (cli::safe_cast<NewDataSet::RelationDataTable^  >(__super::Tables[L"Relation"]));
    if (initTable == true) {
        if (this->tableRelation != nullptr) {
            this->tableRelation->InitVars();
        }
    }
    this->tableMiddleJoint = (cli::safe_cast<NewDataSet::MiddleJointDataTable^  >(__super::Tables[L"MiddleJoint"]));
    if (initTable == true) {
        if (this->tableMiddleJoint != nullptr) {
            this->tableMiddleJoint->InitVars();
        }
    }
    this->tableHandJoint = (cli::safe_cast<NewDataSet::HandJointDataTable^  >(__super::Tables[L"HandJoint"]));
    if (initTable == true) {
        if (this->tableHandJoint != nullptr) {
            this->tableHandJoint->InitVars();
        }
    }
    this->tableMETAINFO = (cli::safe_cast<NewDataSet::METAINFODataTable^  >(__super::Tables[L"METAINFO"]));
    if (initTable == true) {
        if (this->tableMETAINFO != nullptr) {
            this->tableMETAINFO->InitVars();
        }
    }
    this->tableProperty = (cli::safe_cast<NewDataSet::PropertyDataTable^  >(__super::Tables[L"Property"]));
    if (initTable == true) {
        if (this->tableProperty != nullptr) {
            this->tableProperty->InitVars();
        }
    }
    this->tableJointOrientationRecognizer = (cli::safe_cast<NewDataSet::JointOrientationRecognizerDataTable^  >(__super::Tables[L"JointOrientationRecognizer"]));
    if (initTable == true) {
        if (this->tableJointOrientationRecognizer != nullptr) {
            this->tableJointOrientationRecognizer->InitVars();
        }
    }
    this->tableMaxDegrees = (cli::safe_cast<NewDataSet::MaxDegreesDataTable^  >(__super::Tables[L"MaxDegrees"]));
    if (initTable == true) {
        if (this->tableMaxDegrees != nullptr) {
            this->tableMaxDegrees->InitVars();
        }
    }
    this->tableMinDegrees = (cli::safe_cast<NewDataSet::MinDegreesDataTable^  >(__super::Tables[L"MinDegrees"]));
    if (initTable == true) {
        if (this->tableMinDegrees != nullptr) {
            this->tableMinDegrees->InitVars();
        }
    }
    this->tableOrientation = (cli::safe_cast<NewDataSet::OrientationDataTable^  >(__super::Tables[L"Orientation"]));
    if (initTable == true) {
        if (this->tableOrientation != nullptr) {
            this->tableOrientation->InitVars();
        }
    }
    this->tableLinearMovementRecognizer = (cli::safe_cast<NewDataSet::LinearMovementRecognizerDataTable^  >(__super::Tables[L"LinearMovementRecognizer"]));
    if (initTable == true) {
        if (this->tableLinearMovementRecognizer != nullptr) {
            this->tableLinearMovementRecognizer->InitVars();
        }
    }
    this->tableDirection = (cli::safe_cast<NewDataSet::DirectionDataTable^  >(__super::Tables[L"Direction"]));
    if (initTable == true) {
        if (this->tableDirection != nullptr) {
            this->tableDirection->InitVars();
        }
    }
    this->tableBasicDirection = (cli::safe_cast<NewDataSet::BasicDirectionDataTable^  >(__super::Tables[L"BasicDirection"]));
    if (initTable == true) {
        if (this->tableBasicDirection != nullptr) {
            this->tableBasicDirection->InitVars();
        }
    }
    this->tableSpeed = (cli::safe_cast<NewDataSet::SpeedDataTable^  >(__super::Tables[L"Speed"]));
    if (initTable == true) {
        if (this->tableSpeed != nullptr) {
            this->tableSpeed->InitVars();
        }
    }
    this->tableLength = (cli::safe_cast<NewDataSet::LengthDataTable^  >(__super::Tables[L"Length"]));
    if (initTable == true) {
        if (this->tableLength != nullptr) {
            this->tableLength->InitVars();
        }
    }
    this->tableAngularMovementRecognizer = (cli::safe_cast<NewDataSet::AngularMovementRecognizerDataTable^  >(__super::Tables[L"AngularMovementRecognizer"]));
    if (initTable == true) {
        if (this->tableAngularMovementRecognizer != nullptr) {
            this->tableAngularMovementRecognizer->InitVars();
        }
    }
    this->tableMaxAngularVelocity = (cli::safe_cast<NewDataSet::MaxAngularVelocityDataTable^  >(__super::Tables[L"MaxAngularVelocity"]));
    if (initTable == true) {
        if (this->tableMaxAngularVelocity != nullptr) {
            this->tableMaxAngularVelocity->InitVars();
        }
    }
    this->tableMinAngularVelocity = (cli::safe_cast<NewDataSet::MinAngularVelocityDataTable^  >(__super::Tables[L"MinAngularVelocity"]));
    if (initTable == true) {
        if (this->tableMinAngularVelocity != nullptr) {
            this->tableMinAngularVelocity->InitVars();
        }
    }
    this->tableBasicAngularVelocity = (cli::safe_cast<NewDataSet::BasicAngularVelocityDataTable^  >(__super::Tables[L"BasicAngularVelocity"]));
    if (initTable == true) {
        if (this->tableBasicAngularVelocity != nullptr) {
            this->tableBasicAngularVelocity->InitVars();
        }
    }
    this->tableFingerCountRecognizer = (cli::safe_cast<NewDataSet::FingerCountRecognizerDataTable^  >(__super::Tables[L"FingerCountRecognizer"]));
    if (initTable == true) {
        if (this->tableFingerCountRecognizer != nullptr) {
            this->tableFingerCountRecognizer->InitVars();
        }
    }
    this->tableFingerCount = (cli::safe_cast<NewDataSet::FingerCountDataTable^  >(__super::Tables[L"FingerCount"]));
    if (initTable == true) {
        if (this->tableFingerCount != nullptr) {
            this->tableFingerCount->InitVars();
        }
    }
    this->tableTemplateRecognizer = (cli::safe_cast<NewDataSet::TemplateRecognizerDataTable^  >(__super::Tables[L"TemplateRecognizer"]));
    if (initTable == true) {
        if (this->tableTemplateRecognizer != nullptr) {
            this->tableTemplateRecognizer->InitVars();
        }
    }
    this->tableTrainingData = (cli::safe_cast<NewDataSet::TrainingDataDataTable^  >(__super::Tables[L"TrainingData"]));
    if (initTable == true) {
        if (this->tableTrainingData != nullptr) {
            this->tableTrainingData->InitVars();
        }
    }
    this->tableIgnoreAxes = (cli::safe_cast<NewDataSet::IgnoreAxesDataTable^  >(__super::Tables[L"IgnoreAxes"]));
    if (initTable == true) {
        if (this->tableIgnoreAxes != nullptr) {
            this->tableIgnoreAxes->InitVars();
        }
    }
    this->tableCombinationRecognizer = (cli::safe_cast<NewDataSet::CombinationRecognizerDataTable^  >(__super::Tables[L"CombinationRecognizer"]));
    if (initTable == true) {
        if (this->tableCombinationRecognizer != nullptr) {
            this->tableCombinationRecognizer->InitVars();
        }
    }
    this->tableState = (cli::safe_cast<NewDataSet::StateDataTable^  >(__super::Tables[L"State"]));
    if (initTable == true) {
        if (this->tableState != nullptr) {
            this->tableState->InitVars();
        }
    }
    this->tableRecognizer = (cli::safe_cast<NewDataSet::RecognizerDataTable^  >(__super::Tables[L"Recognizer"]));
    if (initTable == true) {
        if (this->tableRecognizer != nullptr) {
            this->tableRecognizer->InitVars();
        }
    }
    this->tableNotRecognizer = (cli::safe_cast<NewDataSet::NotRecognizerDataTable^  >(__super::Tables[L"NotRecognizer"]));
    if (initTable == true) {
        if (this->tableNotRecognizer != nullptr) {
            this->tableNotRecognizer->InitVars();
        }
    }
    this->tableAlternativeRecognizers = (cli::safe_cast<NewDataSet::AlternativeRecognizersDataTable^  >(__super::Tables[L"AlternativeRecognizers"]));
    if (initTable == true) {
        if (this->tableAlternativeRecognizers != nullptr) {
            this->tableAlternativeRecognizers->InitVars();
        }
    }
    this->relationFubiRecognizers_JointRelationRecognizer = this->Relations[L"FubiRecognizers_JointRelationRecognizer"];
    this->relationJointRelationRecognizer_Joints = this->Relations[L"JointRelationRecognizer_Joints"];
    this->relationLinearMovementRecognizer_Joints = this->Relations[L"LinearMovementRecognizer_Joints"];
    this->relationTemplateRecognizer_Joints = this->Relations[L"TemplateRecognizer_Joints"];
    this->relationMiddleJoint_Joint = this->Relations[L"MiddleJoint_Joint"];
    this->relationJointRelationRecognizer_Joint = this->Relations[L"JointRelationRecognizer_Joint"];
    this->relationJointOrientationRecognizer_Joint = this->Relations[L"JointOrientationRecognizer_Joint"];
    this->relationAngularMovementRecognizer_Joint = this->Relations[L"AngularMovementRecognizer_Joint"];
    this->relationFingerCountRecognizer_Joint = this->Relations[L"FingerCountRecognizer_Joint"];
    this->relationTemplateRecognizer_Joint = this->Relations[L"TemplateRecognizer_Joint"];
    this->relationJointRelationRecognizer_HandJoints = this->Relations[L"JointRelationRecognizer_HandJoints"];
    this->relationLinearMovementRecognizer_HandJoints = this->Relations[L"LinearMovementRecognizer_HandJoints"];
    this->relationTemplateRecognizer_HandJoints = this->Relations[L"TemplateRecognizer_HandJoints"];
    this->relationMiddleJoint_MaxValues = this->Relations[L"MiddleJoint_MaxValues"];
    this->relationJointRelationRecognizer_MaxValues = this->Relations[L"JointRelationRecognizer_MaxValues"];
    this->relationMiddleJoint_MinValues = this->Relations[L"MiddleJoint_MinValues"];
    this->relationJointRelationRecognizer_MinValues = this->Relations[L"JointRelationRecognizer_MinValues"];
    this->relationMiddleJoint_Relation = this->Relations[L"MiddleJoint_Relation"];
    this->relationJointRelationRecognizer_Relation = this->Relations[L"JointRelationRecognizer_Relation"];
    this->relationJointRelationRecognizer_MiddleJoint = this->Relations[L"JointRelationRecognizer_MiddleJoint"];
    this->relationMiddleJoint_HandJoint = this->Relations[L"MiddleJoint_HandJoint"];
    this->relationJointOrientationRecognizer_HandJoint = this->Relations[L"JointOrientationRecognizer_HandJoint"];
    this->relationAngularMovementRecognizer_HandJoint = this->Relations[L"AngularMovementRecognizer_HandJoint"];
    this->relationJointRelationRecognizer_METAINFO = this->Relations[L"JointRelationRecognizer_METAINFO"];
    this->relationJointOrientationRecognizer_METAINFO = this->Relations[L"JointOrientationRecognizer_METAINFO"];
    this->relationLinearMovementRecognizer_METAINFO = this->Relations[L"LinearMovementRecognizer_METAINFO"];
    this->relationAngularMovementRecognizer_METAINFO = this->Relations[L"AngularMovementRecognizer_METAINFO"];
    this->relationFingerCountRecognizer_METAINFO = this->Relations[L"FingerCountRecognizer_METAINFO"];
    this->relationTemplateRecognizer_METAINFO = this->Relations[L"TemplateRecognizer_METAINFO"];
    this->relationState_METAINFO = this->Relations[L"State_METAINFO"];
    this->relationCombinationRecognizer_METAINFO = this->Relations[L"CombinationRecognizer_METAINFO"];
    this->relationMETAINFO_Property = this->Relations[L"METAINFO_Property"];
    this->relationFubiRecognizers_JointOrientationRecognizer = this->Relations[L"FubiRecognizers_JointOrientationRecognizer"];
    this->relationJointOrientationRecognizer_MaxDegrees = this->Relations[L"JointOrientationRecognizer_MaxDegrees"];
    this->relationJointOrientationRecognizer_MinDegrees = this->Relations[L"JointOrientationRecognizer_MinDegrees"];
    this->relationJointOrientationRecognizer_Orientation = this->Relations[L"JointOrientationRecognizer_Orientation"];
    this->relationFubiRecognizers_LinearMovementRecognizer = this->Relations[L"FubiRecognizers_LinearMovementRecognizer"];
    this->relationLinearMovementRecognizer_Direction = this->Relations[L"LinearMovementRecognizer_Direction"];
    this->relationLinearMovementRecognizer_BasicDirection = this->Relations[L"LinearMovementRecognizer_BasicDirection"];
    this->relationLinearMovementRecognizer_Speed = this->Relations[L"LinearMovementRecognizer_Speed"];
    this->relationLinearMovementRecognizer_Length = this->Relations[L"LinearMovementRecognizer_Length"];
    this->relationFubiRecognizers_AngularMovementRecognizer = this->Relations[L"FubiRecognizers_AngularMovementRecognizer"];
    this->relationAngularMovementRecognizer_MaxAngularVelocity = this->Relations[L"AngularMovementRecognizer_MaxAngularVelocity"];
    this->relationAngularMovementRecognizer_MinAngularVelocity = this->Relations[L"AngularMovementRecognizer_MinAngularVelocity"];
    this->relationAngularMovementRecognizer_BasicAngularVelocity = this->Relations[L"AngularMovementRecognizer_BasicAngularVelocity"];
    this->relationFubiRecognizers_FingerCountRecognizer = this->Relations[L"FubiRecognizers_FingerCountRecognizer"];
    this->relationFingerCountRecognizer_FingerCount = this->Relations[L"FingerCountRecognizer_FingerCount"];
    this->relationFubiRecognizers_TemplateRecognizer = this->Relations[L"FubiRecognizers_TemplateRecognizer"];
    this->relationTemplateRecognizer_TrainingData = this->Relations[L"TemplateRecognizer_TrainingData"];
    this->relationTemplateRecognizer_IgnoreAxes = this->Relations[L"TemplateRecognizer_IgnoreAxes"];
    this->relationFubiRecognizers_CombinationRecognizer = this->Relations[L"FubiRecognizers_CombinationRecognizer"];
    this->relationCombinationRecognizer_State = this->Relations[L"CombinationRecognizer_State"];
    this->relationAlternativeRecognizers_Recognizer = this->Relations[L"AlternativeRecognizers_Recognizer"];
    this->relationState_Recognizer = this->Relations[L"State_Recognizer"];
    this->relationAlternativeRecognizers_NotRecognizer = this->Relations[L"AlternativeRecognizers_NotRecognizer"];
    this->relationState_NotRecognizer = this->Relations[L"State_NotRecognizer"];
    this->relationState_AlternativeRecognizers = this->Relations[L"State_AlternativeRecognizers"];
}

inline ::System::Void NewDataSet::InitClass() {
    this->DataSetName = L"NewDataSet";
    this->Prefix = L"";
    this->Namespace = L"http://www.hcm-lab.de";
    this->Locale = (gcnew ::System::Globalization::CultureInfo(L""));
    this->EnforceConstraints = true;
    this->SchemaSerializationMode = ::System::Data::SchemaSerializationMode::IncludeSchema;
    this->tableFubiRecognizers = (gcnew NewDataSet::FubiRecognizersDataTable());
    __super::Tables->Add(this->tableFubiRecognizers);
    this->tableJointRelationRecognizer = (gcnew NewDataSet::JointRelationRecognizerDataTable());
    __super::Tables->Add(this->tableJointRelationRecognizer);
    this->tableJoints = (gcnew NewDataSet::JointsDataTable());
    __super::Tables->Add(this->tableJoints);
    this->tableJoint = (gcnew NewDataSet::JointDataTable());
    __super::Tables->Add(this->tableJoint);
    this->tableHandJoints = (gcnew NewDataSet::HandJointsDataTable());
    __super::Tables->Add(this->tableHandJoints);
    this->tableMaxValues = (gcnew NewDataSet::MaxValuesDataTable());
    __super::Tables->Add(this->tableMaxValues);
    this->tableMinValues = (gcnew NewDataSet::MinValuesDataTable());
    __super::Tables->Add(this->tableMinValues);
    this->tableRelation = (gcnew NewDataSet::RelationDataTable());
    __super::Tables->Add(this->tableRelation);
    this->tableMiddleJoint = (gcnew NewDataSet::MiddleJointDataTable());
    __super::Tables->Add(this->tableMiddleJoint);
    this->tableHandJoint = (gcnew NewDataSet::HandJointDataTable());
    __super::Tables->Add(this->tableHandJoint);
    this->tableMETAINFO = (gcnew NewDataSet::METAINFODataTable());
    __super::Tables->Add(this->tableMETAINFO);
    this->tableProperty = (gcnew NewDataSet::PropertyDataTable());
    __super::Tables->Add(this->tableProperty);
    this->tableJointOrientationRecognizer = (gcnew NewDataSet::JointOrientationRecognizerDataTable());
    __super::Tables->Add(this->tableJointOrientationRecognizer);
    this->tableMaxDegrees = (gcnew NewDataSet::MaxDegreesDataTable());
    __super::Tables->Add(this->tableMaxDegrees);
    this->tableMinDegrees = (gcnew NewDataSet::MinDegreesDataTable());
    __super::Tables->Add(this->tableMinDegrees);
    this->tableOrientation = (gcnew NewDataSet::OrientationDataTable());
    __super::Tables->Add(this->tableOrientation);
    this->tableLinearMovementRecognizer = (gcnew NewDataSet::LinearMovementRecognizerDataTable());
    __super::Tables->Add(this->tableLinearMovementRecognizer);
    this->tableDirection = (gcnew NewDataSet::DirectionDataTable());
    __super::Tables->Add(this->tableDirection);
    this->tableBasicDirection = (gcnew NewDataSet::BasicDirectionDataTable());
    __super::Tables->Add(this->tableBasicDirection);
    this->tableSpeed = (gcnew NewDataSet::SpeedDataTable());
    __super::Tables->Add(this->tableSpeed);
    this->tableLength = (gcnew NewDataSet::LengthDataTable());
    __super::Tables->Add(this->tableLength);
    this->tableAngularMovementRecognizer = (gcnew NewDataSet::AngularMovementRecognizerDataTable());
    __super::Tables->Add(this->tableAngularMovementRecognizer);
    this->tableMaxAngularVelocity = (gcnew NewDataSet::MaxAngularVelocityDataTable());
    __super::Tables->Add(this->tableMaxAngularVelocity);
    this->tableMinAngularVelocity = (gcnew NewDataSet::MinAngularVelocityDataTable());
    __super::Tables->Add(this->tableMinAngularVelocity);
    this->tableBasicAngularVelocity = (gcnew NewDataSet::BasicAngularVelocityDataTable());
    __super::Tables->Add(this->tableBasicAngularVelocity);
    this->tableFingerCountRecognizer = (gcnew NewDataSet::FingerCountRecognizerDataTable());
    __super::Tables->Add(this->tableFingerCountRecognizer);
    this->tableFingerCount = (gcnew NewDataSet::FingerCountDataTable());
    __super::Tables->Add(this->tableFingerCount);
    this->tableTemplateRecognizer = (gcnew NewDataSet::TemplateRecognizerDataTable());
    __super::Tables->Add(this->tableTemplateRecognizer);
    this->tableTrainingData = (gcnew NewDataSet::TrainingDataDataTable());
    __super::Tables->Add(this->tableTrainingData);
    this->tableIgnoreAxes = (gcnew NewDataSet::IgnoreAxesDataTable());
    __super::Tables->Add(this->tableIgnoreAxes);
    this->tableCombinationRecognizer = (gcnew NewDataSet::CombinationRecognizerDataTable());
    __super::Tables->Add(this->tableCombinationRecognizer);
    this->tableState = (gcnew NewDataSet::StateDataTable());
    __super::Tables->Add(this->tableState);
    this->tableRecognizer = (gcnew NewDataSet::RecognizerDataTable());
    __super::Tables->Add(this->tableRecognizer);
    this->tableNotRecognizer = (gcnew NewDataSet::NotRecognizerDataTable());
    __super::Tables->Add(this->tableNotRecognizer);
    this->tableAlternativeRecognizers = (gcnew NewDataSet::AlternativeRecognizersDataTable());
    __super::Tables->Add(this->tableAlternativeRecognizers);
    ::System::Data::ForeignKeyConstraint^  fkc;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_JointRelationRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->FubiRecognizers_IdColumn}));
    this->tableJointRelationRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_Joints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoints->JointRelationRecognizer_IdColumn}));
    this->tableJoints->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_Joints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoints->LinearMovementRecognizer_IdColumn}));
    this->tableJoints->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TemplateRecognizer_Joints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoints->TemplateRecognizer_IdColumn}));
    this->tableJoints->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"MiddleJoint_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->MiddleJoint_IdColumn}));
    this->tableJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->JointRelationRecognizer_IdColumn}));
    this->tableJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointOrientationRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->JointOrientationRecognizer_IdColumn}));
    this->tableJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AngularMovementRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->AngularMovementRecognizer_IdColumn}));
    this->tableJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FingerCountRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->FingerCountRecognizer_IdColumn}));
    this->tableJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TemplateRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->TemplateRecognizer_IdColumn}));
    this->tableJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_HandJoints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoints->JointRelationRecognizer_IdColumn}));
    this->tableHandJoints->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_HandJoints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoints->LinearMovementRecognizer_IdColumn}));
    this->tableHandJoints->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TemplateRecognizer_HandJoints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoints->TemplateRecognizer_IdColumn}));
    this->tableHandJoints->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"MiddleJoint_MaxValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxValues->MiddleJoint_IdColumn}));
    this->tableMaxValues->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_MaxValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxValues->JointRelationRecognizer_IdColumn}));
    this->tableMaxValues->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"MiddleJoint_MinValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinValues->MiddleJoint_IdColumn}));
    this->tableMinValues->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_MinValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinValues->JointRelationRecognizer_IdColumn}));
    this->tableMinValues->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"MiddleJoint_Relation", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRelation->MiddleJoint_IdColumn}));
    this->tableRelation->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_Relation", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRelation->JointRelationRecognizer_IdColumn}));
    this->tableRelation->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_MiddleJoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->JointRelationRecognizer_IdColumn}));
    this->tableMiddleJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"MiddleJoint_HandJoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoint->MiddleJoint_IdColumn}));
    this->tableHandJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointOrientationRecognizer_HandJoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoint->JointOrientationRecognizer_IdColumn}));
    this->tableHandJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AngularMovementRecognizer_HandJoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoint->AngularMovementRecognizer_IdColumn}));
    this->tableHandJoint->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointRelationRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->JointRelationRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointOrientationRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->JointOrientationRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->LinearMovementRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AngularMovementRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->AngularMovementRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FingerCountRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->FingerCountRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TemplateRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->TemplateRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"State_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->State_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"CombinationRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableCombinationRecognizer->CombinationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->CombinationRecognizer_IdColumn}));
    this->tableMETAINFO->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"METAINFO_Property", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->METAINFO_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableProperty->METAINFO_IdColumn}));
    this->tableProperty->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_JointOrientationRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->FubiRecognizers_IdColumn}));
    this->tableJointOrientationRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointOrientationRecognizer_MaxDegrees", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxDegrees->JointOrientationRecognizer_IdColumn}));
    this->tableMaxDegrees->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointOrientationRecognizer_MinDegrees", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinDegrees->JointOrientationRecognizer_IdColumn}));
    this->tableMinDegrees->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"JointOrientationRecognizer_Orientation", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOrientation->JointOrientationRecognizer_IdColumn}));
    this->tableOrientation->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_LinearMovementRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->FubiRecognizers_IdColumn}));
    this->tableLinearMovementRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_Direction", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDirection->LinearMovementRecognizer_IdColumn}));
    this->tableDirection->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_BasicDirection", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableBasicDirection->LinearMovementRecognizer_IdColumn}));
    this->tableBasicDirection->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_Speed", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSpeed->LinearMovementRecognizer_IdColumn}));
    this->tableSpeed->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"LinearMovementRecognizer_Length", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLength->LinearMovementRecognizer_IdColumn}));
    this->tableLength->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_AngularMovementRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->FubiRecognizers_IdColumn}));
    this->tableAngularMovementRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AngularMovementRecognizer_MaxAngularVelocity", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxAngularVelocity->AngularMovementRecognizer_IdColumn}));
    this->tableMaxAngularVelocity->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AngularMovementRecognizer_MinAngularVelocity", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinAngularVelocity->AngularMovementRecognizer_IdColumn}));
    this->tableMinAngularVelocity->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AngularMovementRecognizer_BasicAngularVelocity", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableBasicAngularVelocity->AngularMovementRecognizer_IdColumn}));
    this->tableBasicAngularVelocity->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_FingerCountRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FubiRecognizers_IdColumn}));
    this->tableFingerCountRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FingerCountRecognizer_FingerCount", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCount->FingerCountRecognizer_IdColumn}));
    this->tableFingerCount->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_TemplateRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->FubiRecognizers_IdColumn}));
    this->tableTemplateRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TemplateRecognizer_TrainingData", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTrainingData->TemplateRecognizer_IdColumn}));
    this->tableTrainingData->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"TemplateRecognizer_IgnoreAxes", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableIgnoreAxes->TemplateRecognizer_IdColumn}));
    this->tableIgnoreAxes->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"FubiRecognizers_CombinationRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableCombinationRecognizer->FubiRecognizers_IdColumn}));
    this->tableCombinationRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"CombinationRecognizer_State", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableCombinationRecognizer->CombinationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->CombinationRecognizer_IdColumn}));
    this->tableState->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AlternativeRecognizers_Recognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAlternativeRecognizers->AlternativeRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRecognizer->AlternativeRecognizers_IdColumn}));
    this->tableRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"State_Recognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRecognizer->State_IdColumn}));
    this->tableRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"AlternativeRecognizers_NotRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAlternativeRecognizers->AlternativeRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNotRecognizer->AlternativeRecognizers_IdColumn}));
    this->tableNotRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"State_NotRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNotRecognizer->State_IdColumn}));
    this->tableNotRecognizer->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    fkc = (gcnew ::System::Data::ForeignKeyConstraint(L"State_AlternativeRecognizers", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAlternativeRecognizers->State_IdColumn}));
    this->tableAlternativeRecognizers->Constraints->Add(fkc);
    fkc->AcceptRejectRule = ::System::Data::AcceptRejectRule::None;
    fkc->DeleteRule = ::System::Data::Rule::Cascade;
    fkc->UpdateRule = ::System::Data::Rule::Cascade;
    this->relationFubiRecognizers_JointRelationRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_JointRelationRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_JointRelationRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_JointRelationRecognizer);
    this->relationJointRelationRecognizer_Joints = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_Joints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoints->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_Joints->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_Joints);
    this->relationLinearMovementRecognizer_Joints = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_Joints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoints->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_Joints->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_Joints);
    this->relationTemplateRecognizer_Joints = (gcnew ::System::Data::DataRelation(L"TemplateRecognizer_Joints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoints->TemplateRecognizer_IdColumn}, false));
    this->relationTemplateRecognizer_Joints->Nested = true;
    this->Relations->Add(this->relationTemplateRecognizer_Joints);
    this->relationMiddleJoint_Joint = (gcnew ::System::Data::DataRelation(L"MiddleJoint_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->MiddleJoint_IdColumn}, false));
    this->relationMiddleJoint_Joint->Nested = true;
    this->Relations->Add(this->relationMiddleJoint_Joint);
    this->relationJointRelationRecognizer_Joint = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_Joint->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_Joint);
    this->relationJointOrientationRecognizer_Joint = (gcnew ::System::Data::DataRelation(L"JointOrientationRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->JointOrientationRecognizer_IdColumn}, false));
    this->relationJointOrientationRecognizer_Joint->Nested = true;
    this->Relations->Add(this->relationJointOrientationRecognizer_Joint);
    this->relationAngularMovementRecognizer_Joint = (gcnew ::System::Data::DataRelation(L"AngularMovementRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->AngularMovementRecognizer_IdColumn}, false));
    this->relationAngularMovementRecognizer_Joint->Nested = true;
    this->Relations->Add(this->relationAngularMovementRecognizer_Joint);
    this->relationFingerCountRecognizer_Joint = (gcnew ::System::Data::DataRelation(L"FingerCountRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->FingerCountRecognizer_IdColumn}, false));
    this->relationFingerCountRecognizer_Joint->Nested = true;
    this->Relations->Add(this->relationFingerCountRecognizer_Joint);
    this->relationTemplateRecognizer_Joint = (gcnew ::System::Data::DataRelation(L"TemplateRecognizer_Joint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJoint->TemplateRecognizer_IdColumn}, false));
    this->relationTemplateRecognizer_Joint->Nested = true;
    this->Relations->Add(this->relationTemplateRecognizer_Joint);
    this->relationJointRelationRecognizer_HandJoints = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_HandJoints", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoints->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_HandJoints->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_HandJoints);
    this->relationLinearMovementRecognizer_HandJoints = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_HandJoints", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoints->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_HandJoints->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_HandJoints);
    this->relationTemplateRecognizer_HandJoints = (gcnew ::System::Data::DataRelation(L"TemplateRecognizer_HandJoints", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoints->TemplateRecognizer_IdColumn}, false));
    this->relationTemplateRecognizer_HandJoints->Nested = true;
    this->Relations->Add(this->relationTemplateRecognizer_HandJoints);
    this->relationMiddleJoint_MaxValues = (gcnew ::System::Data::DataRelation(L"MiddleJoint_MaxValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxValues->MiddleJoint_IdColumn}, false));
    this->relationMiddleJoint_MaxValues->Nested = true;
    this->Relations->Add(this->relationMiddleJoint_MaxValues);
    this->relationJointRelationRecognizer_MaxValues = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_MaxValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxValues->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_MaxValues->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_MaxValues);
    this->relationMiddleJoint_MinValues = (gcnew ::System::Data::DataRelation(L"MiddleJoint_MinValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinValues->MiddleJoint_IdColumn}, false));
    this->relationMiddleJoint_MinValues->Nested = true;
    this->Relations->Add(this->relationMiddleJoint_MinValues);
    this->relationJointRelationRecognizer_MinValues = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_MinValues", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinValues->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_MinValues->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_MinValues);
    this->relationMiddleJoint_Relation = (gcnew ::System::Data::DataRelation(L"MiddleJoint_Relation", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRelation->MiddleJoint_IdColumn}, false));
    this->relationMiddleJoint_Relation->Nested = true;
    this->Relations->Add(this->relationMiddleJoint_Relation);
    this->relationJointRelationRecognizer_Relation = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_Relation", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRelation->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_Relation->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_Relation);
    this->relationJointRelationRecognizer_MiddleJoint = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_MiddleJoint", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_MiddleJoint->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_MiddleJoint);
    this->relationMiddleJoint_HandJoint = (gcnew ::System::Data::DataRelation(L"MiddleJoint_HandJoint", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMiddleJoint->MiddleJoint_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoint->MiddleJoint_IdColumn}, false));
    this->relationMiddleJoint_HandJoint->Nested = true;
    this->Relations->Add(this->relationMiddleJoint_HandJoint);
    this->relationJointOrientationRecognizer_HandJoint = (gcnew ::System::Data::DataRelation(L"JointOrientationRecognizer_HandJoint", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoint->JointOrientationRecognizer_IdColumn}, false));
    this->relationJointOrientationRecognizer_HandJoint->Nested = true;
    this->Relations->Add(this->relationJointOrientationRecognizer_HandJoint);
    this->relationAngularMovementRecognizer_HandJoint = (gcnew ::System::Data::DataRelation(L"AngularMovementRecognizer_HandJoint", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableHandJoint->AngularMovementRecognizer_IdColumn}, false));
    this->relationAngularMovementRecognizer_HandJoint->Nested = true;
    this->Relations->Add(this->relationAngularMovementRecognizer_HandJoint);
    this->relationJointRelationRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"JointRelationRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->JointRelationRecognizer_IdColumn}, false));
    this->relationJointRelationRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationJointRelationRecognizer_METAINFO);
    this->relationJointOrientationRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"JointOrientationRecognizer_METAINFO", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->JointOrientationRecognizer_IdColumn}, false));
    this->relationJointOrientationRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationJointOrientationRecognizer_METAINFO);
    this->relationLinearMovementRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_METAINFO);
    this->relationAngularMovementRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"AngularMovementRecognizer_METAINFO", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->AngularMovementRecognizer_IdColumn}, false));
    this->relationAngularMovementRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationAngularMovementRecognizer_METAINFO);
    this->relationFingerCountRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"FingerCountRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->FingerCountRecognizer_IdColumn}, false));
    this->relationFingerCountRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationFingerCountRecognizer_METAINFO);
    this->relationTemplateRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"TemplateRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->TemplateRecognizer_IdColumn}, false));
    this->relationTemplateRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationTemplateRecognizer_METAINFO);
    this->relationState_METAINFO = (gcnew ::System::Data::DataRelation(L"State_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->State_IdColumn}, false));
    this->relationState_METAINFO->Nested = true;
    this->Relations->Add(this->relationState_METAINFO);
    this->relationCombinationRecognizer_METAINFO = (gcnew ::System::Data::DataRelation(L"CombinationRecognizer_METAINFO", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableCombinationRecognizer->CombinationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->CombinationRecognizer_IdColumn}, false));
    this->relationCombinationRecognizer_METAINFO->Nested = true;
    this->Relations->Add(this->relationCombinationRecognizer_METAINFO);
    this->relationMETAINFO_Property = (gcnew ::System::Data::DataRelation(L"METAINFO_Property", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMETAINFO->METAINFO_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableProperty->METAINFO_IdColumn}, false));
    this->relationMETAINFO_Property->Nested = true;
    this->Relations->Add(this->relationMETAINFO_Property);
    this->relationFubiRecognizers_JointOrientationRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_JointOrientationRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_JointOrientationRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_JointOrientationRecognizer);
    this->relationJointOrientationRecognizer_MaxDegrees = (gcnew ::System::Data::DataRelation(L"JointOrientationRecognizer_MaxDegrees", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxDegrees->JointOrientationRecognizer_IdColumn}, false));
    this->relationJointOrientationRecognizer_MaxDegrees->Nested = true;
    this->Relations->Add(this->relationJointOrientationRecognizer_MaxDegrees);
    this->relationJointOrientationRecognizer_MinDegrees = (gcnew ::System::Data::DataRelation(L"JointOrientationRecognizer_MinDegrees", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinDegrees->JointOrientationRecognizer_IdColumn}, false));
    this->relationJointOrientationRecognizer_MinDegrees->Nested = true;
    this->Relations->Add(this->relationJointOrientationRecognizer_MinDegrees);
    this->relationJointOrientationRecognizer_Orientation = (gcnew ::System::Data::DataRelation(L"JointOrientationRecognizer_Orientation", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableOrientation->JointOrientationRecognizer_IdColumn}, false));
    this->relationJointOrientationRecognizer_Orientation->Nested = true;
    this->Relations->Add(this->relationJointOrientationRecognizer_Orientation);
    this->relationFubiRecognizers_LinearMovementRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_LinearMovementRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_LinearMovementRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_LinearMovementRecognizer);
    this->relationLinearMovementRecognizer_Direction = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_Direction", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableDirection->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_Direction->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_Direction);
    this->relationLinearMovementRecognizer_BasicDirection = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_BasicDirection", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableBasicDirection->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_BasicDirection->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_BasicDirection);
    this->relationLinearMovementRecognizer_Speed = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_Speed", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableSpeed->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_Speed->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_Speed);
    this->relationLinearMovementRecognizer_Length = (gcnew ::System::Data::DataRelation(L"LinearMovementRecognizer_Length", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableLength->LinearMovementRecognizer_IdColumn}, false));
    this->relationLinearMovementRecognizer_Length->Nested = true;
    this->Relations->Add(this->relationLinearMovementRecognizer_Length);
    this->relationFubiRecognizers_AngularMovementRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_AngularMovementRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_AngularMovementRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_AngularMovementRecognizer);
    this->relationAngularMovementRecognizer_MaxAngularVelocity = (gcnew ::System::Data::DataRelation(L"AngularMovementRecognizer_MaxAngularVelocity", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMaxAngularVelocity->AngularMovementRecognizer_IdColumn}, 
        false));
    this->relationAngularMovementRecognizer_MaxAngularVelocity->Nested = true;
    this->Relations->Add(this->relationAngularMovementRecognizer_MaxAngularVelocity);
    this->relationAngularMovementRecognizer_MinAngularVelocity = (gcnew ::System::Data::DataRelation(L"AngularMovementRecognizer_MinAngularVelocity", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableMinAngularVelocity->AngularMovementRecognizer_IdColumn}, 
        false));
    this->relationAngularMovementRecognizer_MinAngularVelocity->Nested = true;
    this->Relations->Add(this->relationAngularMovementRecognizer_MinAngularVelocity);
    this->relationAngularMovementRecognizer_BasicAngularVelocity = (gcnew ::System::Data::DataRelation(L"AngularMovementRecognizer_BasicAngularVelocity", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableBasicAngularVelocity->AngularMovementRecognizer_IdColumn}, 
        false));
    this->relationAngularMovementRecognizer_BasicAngularVelocity->Nested = true;
    this->Relations->Add(this->relationAngularMovementRecognizer_BasicAngularVelocity);
    this->relationFubiRecognizers_FingerCountRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_FingerCountRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_FingerCountRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_FingerCountRecognizer);
    this->relationFingerCountRecognizer_FingerCount = (gcnew ::System::Data::DataRelation(L"FingerCountRecognizer_FingerCount", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFingerCount->FingerCountRecognizer_IdColumn}, false));
    this->relationFingerCountRecognizer_FingerCount->Nested = true;
    this->Relations->Add(this->relationFingerCountRecognizer_FingerCount);
    this->relationFubiRecognizers_TemplateRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_TemplateRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_TemplateRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_TemplateRecognizer);
    this->relationTemplateRecognizer_TrainingData = (gcnew ::System::Data::DataRelation(L"TemplateRecognizer_TrainingData", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTrainingData->TemplateRecognizer_IdColumn}, false));
    this->relationTemplateRecognizer_TrainingData->Nested = true;
    this->Relations->Add(this->relationTemplateRecognizer_TrainingData);
    this->relationTemplateRecognizer_IgnoreAxes = (gcnew ::System::Data::DataRelation(L"TemplateRecognizer_IgnoreAxes", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableTemplateRecognizer->TemplateRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableIgnoreAxes->TemplateRecognizer_IdColumn}, false));
    this->relationTemplateRecognizer_IgnoreAxes->Nested = true;
    this->Relations->Add(this->relationTemplateRecognizer_IgnoreAxes);
    this->relationFubiRecognizers_CombinationRecognizer = (gcnew ::System::Data::DataRelation(L"FubiRecognizers_CombinationRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableFubiRecognizers->FubiRecognizers_IdColumn}, gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableCombinationRecognizer->FubiRecognizers_IdColumn}, 
        false));
    this->relationFubiRecognizers_CombinationRecognizer->Nested = true;
    this->Relations->Add(this->relationFubiRecognizers_CombinationRecognizer);
    this->relationCombinationRecognizer_State = (gcnew ::System::Data::DataRelation(L"CombinationRecognizer_State", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableCombinationRecognizer->CombinationRecognizer_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->CombinationRecognizer_IdColumn}, false));
    this->relationCombinationRecognizer_State->Nested = true;
    this->Relations->Add(this->relationCombinationRecognizer_State);
    this->relationAlternativeRecognizers_Recognizer = (gcnew ::System::Data::DataRelation(L"AlternativeRecognizers_Recognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAlternativeRecognizers->AlternativeRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRecognizer->AlternativeRecognizers_IdColumn}, false));
    this->relationAlternativeRecognizers_Recognizer->Nested = true;
    this->Relations->Add(this->relationAlternativeRecognizers_Recognizer);
    this->relationState_Recognizer = (gcnew ::System::Data::DataRelation(L"State_Recognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableRecognizer->State_IdColumn}, false));
    this->relationState_Recognizer->Nested = true;
    this->Relations->Add(this->relationState_Recognizer);
    this->relationAlternativeRecognizers_NotRecognizer = (gcnew ::System::Data::DataRelation(L"AlternativeRecognizers_NotRecognizer", 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAlternativeRecognizers->AlternativeRecognizers_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNotRecognizer->AlternativeRecognizers_IdColumn}, false));
    this->relationAlternativeRecognizers_NotRecognizer->Nested = true;
    this->Relations->Add(this->relationAlternativeRecognizers_NotRecognizer);
    this->relationState_NotRecognizer = (gcnew ::System::Data::DataRelation(L"State_NotRecognizer", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableNotRecognizer->State_IdColumn}, false));
    this->relationState_NotRecognizer->Nested = true;
    this->Relations->Add(this->relationState_NotRecognizer);
    this->relationState_AlternativeRecognizers = (gcnew ::System::Data::DataRelation(L"State_AlternativeRecognizers", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableState->State_IdColumn}, 
        gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->tableAlternativeRecognizers->State_IdColumn}, false));
    this->relationState_AlternativeRecognizers->Nested = true;
    this->Relations->Add(this->relationState_AlternativeRecognizers);
}

inline ::System::Boolean NewDataSet::ShouldSerializeFubiRecognizers() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeJointRelationRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeJoints() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeJoint() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeHandJoints() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMaxValues() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMinValues() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeRelation() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMiddleJoint() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeHandJoint() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMETAINFO() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeProperty() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeJointOrientationRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMaxDegrees() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMinDegrees() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeOrientation() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeLinearMovementRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeDirection() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeBasicDirection() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeSpeed() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeLength() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeAngularMovementRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMaxAngularVelocity() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeMinAngularVelocity() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeBasicAngularVelocity() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeFingerCountRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeFingerCount() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeTemplateRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeTrainingData() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeIgnoreAxes() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeCombinationRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeState() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeNotRecognizer() {
    return false;
}

inline ::System::Boolean NewDataSet::ShouldSerializeAlternativeRecognizers() {
    return false;
}

inline ::System::Void NewDataSet::SchemaChanged(::System::Object^  sender, ::System::ComponentModel::CollectionChangeEventArgs^  e) {
    if (e->Action == ::System::ComponentModel::CollectionChangeAction::Remove) {
        this->InitVars();
    }
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::GetTypedDataSetSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    ::System::Xml::Schema::XmlSchemaAny^  any = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any->Namespace = ds->Namespace;
    sequence->Items->Add(any);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::FubiRecognizersDataTable::FubiRecognizersDataTable() {
    this->TableName = L"FubiRecognizers";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::FubiRecognizersDataTable::FubiRecognizersDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::FubiRecognizersDataTable::FubiRecognizersDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::FubiRecognizersDataTable::globalMinConfidenceColumn::get() {
    return this->columnglobalMinConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::FubiRecognizersDataTable::globalUseFilteredDataColumn::get() {
    return this->columnglobalUseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::FubiRecognizersDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::FubiRecognizersDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::FubiRecognizersDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::AddFubiRecognizersRow(NewDataSet::FubiRecognizersRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::FubiRecognizersDataTable::AddFubiRecognizersRow(System::Single globalMinConfidence, 
            System::Boolean globalUseFilteredData) {
    NewDataSet::FubiRecognizersRow^  rowFubiRecognizersRow = (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {globalMinConfidence, globalUseFilteredData, 
        nullptr};
    rowFubiRecognizersRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowFubiRecognizersRow);
    return rowFubiRecognizersRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::FubiRecognizersDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::FubiRecognizersDataTable::Clone() {
    NewDataSet::FubiRecognizersDataTable^  cln = (cli::safe_cast<NewDataSet::FubiRecognizersDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::FubiRecognizersDataTable::CreateInstance() {
    return (gcnew NewDataSet::FubiRecognizersDataTable());
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::InitVars() {
    this->columnglobalMinConfidence = __super::Columns[L"globalMinConfidence"];
    this->columnglobalUseFilteredData = __super::Columns[L"globalUseFilteredData"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::InitClass() {
    this->columnglobalMinConfidence = (gcnew ::System::Data::DataColumn(L"globalMinConfidence", ::System::Single::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnglobalMinConfidence);
    this->columnglobalUseFilteredData = (gcnew ::System::Data::DataColumn(L"globalUseFilteredData", ::System::Boolean::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnglobalUseFilteredData);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnFubiRecognizers_Id}, 
            true)));
    this->columnglobalMinConfidence->Namespace = L"";
    this->columnglobalUseFilteredData->Namespace = L"";
    this->columnglobalUseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnFubiRecognizers_Id->AutoIncrement = true;
    this->columnFubiRecognizers_Id->AllowDBNull = false;
    this->columnFubiRecognizers_Id->Unique = true;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::FubiRecognizersDataTable::NewFubiRecognizersRow() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::FubiRecognizersDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::FubiRecognizersRow(builder));
}

inline ::System::Type^  NewDataSet::FubiRecognizersDataTable::GetRowType() {
    return NewDataSet::FubiRecognizersRow::typeid;
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->FubiRecognizersRowChanged(this, (gcnew NewDataSet::FubiRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->FubiRecognizersRowChanging(this, (gcnew NewDataSet::FubiRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->FubiRecognizersRowDeleted(this, (gcnew NewDataSet::FubiRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->FubiRecognizersRowDeleting(this, (gcnew NewDataSet::FubiRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FubiRecognizersDataTable::RemoveFubiRecognizersRow(NewDataSet::FubiRecognizersRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FubiRecognizersDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"FubiRecognizersDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::JointRelationRecognizerDataTable::JointRelationRecognizerDataTable() {
    this->TableName = L"JointRelationRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::JointRelationRecognizerDataTable::JointRelationRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::JointRelationRecognizerDataTable::JointRelationRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::visibilityColumn::get() {
    return this->columnvisibility;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::useLocalPositionsColumn::get() {
    return this->columnuseLocalPositions;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::measuringUnitColumn::get() {
    return this->columnmeasuringUnit;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointRelationRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::JointRelationRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::JointRelationRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::AddJointRelationRecognizerRow(NewDataSet::JointRelationRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::JointRelationRecognizerDataTable::AddJointRelationRecognizerRow(
            System::String^  name, 
            System::String^  visibility, 
            System::Boolean useLocalPositions, 
            System::Single minConfidence, 
            System::Boolean useFilteredData, 
            System::String^  measuringUnit, 
            NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_JointRelationRecognizer) {
    NewDataSet::JointRelationRecognizerRow^  rowJointRelationRecognizerRow = (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(8) {name, visibility, useLocalPositions, 
        minConfidence, useFilteredData, measuringUnit, nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_JointRelationRecognizer != nullptr) {
        columnValuesArray[7] = parentFubiRecognizersRowByFubiRecognizers_JointRelationRecognizer[2];
    }
    rowJointRelationRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowJointRelationRecognizerRow);
    return rowJointRelationRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::JointRelationRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::JointRelationRecognizerDataTable::Clone() {
    NewDataSet::JointRelationRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::JointRelationRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::JointRelationRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::JointRelationRecognizerDataTable());
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnvisibility = __super::Columns[L"visibility"];
    this->columnuseLocalPositions = __super::Columns[L"useLocalPositions"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnmeasuringUnit = __super::Columns[L"measuringUnit"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnvisibility = (gcnew ::System::Data::DataColumn(L"visibility", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnvisibility);
    this->columnuseLocalPositions = (gcnew ::System::Data::DataColumn(L"useLocalPositions", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseLocalPositions);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnmeasuringUnit = (gcnew ::System::Data::DataColumn(L"measuringUnit", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmeasuringUnit);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnJointRelationRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnvisibility->Namespace = L"";
    this->columnvisibility->DefaultValue = (cli::safe_cast<System::String^  >(L"visible"));
    this->columnuseLocalPositions->Namespace = L"";
    this->columnuseLocalPositions->DefaultValue = static_cast<System::Boolean>(false);
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnmeasuringUnit->Namespace = L"";
    this->columnmeasuringUnit->DefaultValue = (cli::safe_cast<System::String^  >(L"millimeter"));
    this->columnJointRelationRecognizer_Id->AutoIncrement = true;
    this->columnJointRelationRecognizer_Id->AllowDBNull = false;
    this->columnJointRelationRecognizer_Id->Unique = true;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::JointRelationRecognizerDataTable::NewJointRelationRecognizerRow() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::JointRelationRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::JointRelationRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::JointRelationRecognizerDataTable::GetRowType() {
    return NewDataSet::JointRelationRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->JointRelationRecognizerRowChanged(this, (gcnew NewDataSet::JointRelationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->JointRelationRecognizerRowChanging(this, (gcnew NewDataSet::JointRelationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->JointRelationRecognizerRowDeleted(this, (gcnew NewDataSet::JointRelationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->JointRelationRecognizerRowDeleting(this, (gcnew NewDataSet::JointRelationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointRelationRecognizerDataTable::RemoveJointRelationRecognizerRow(NewDataSet::JointRelationRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::JointRelationRecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"JointRelationRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::JointsDataTable::JointsDataTable() {
    this->TableName = L"Joints";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::JointsDataTable::JointsDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::JointsDataTable::JointsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::JointsDataTable::mainColumn::get() {
    return this->columnmain;
}

inline ::System::Data::DataColumn^  NewDataSet::JointsDataTable::relativeColumn::get() {
    return this->columnrelative;
}

inline ::System::Data::DataColumn^  NewDataSet::JointsDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointsDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointsDataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Int32 NewDataSet::JointsDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::JointsRow^  NewDataSet::JointsDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::JointsRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::JointsDataTable::AddJointsRow(NewDataSet::JointsRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::JointsRow^  NewDataSet::JointsDataTable::AddJointsRow(System::String^  main, System::String^  relative, 
            NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_Joints, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Joints, 
            NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_Joints) {
    NewDataSet::JointsRow^  rowJointsRow = (cli::safe_cast<NewDataSet::JointsRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {main, relative, nullptr, 
        nullptr, nullptr};
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_Joints != nullptr) {
        columnValuesArray[2] = parentJointRelationRecognizerRowByJointRelationRecognizer_Joints[6];
    }
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_Joints != nullptr) {
        columnValuesArray[3] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_Joints[6];
    }
    if (parentTemplateRecognizerRowByTemplateRecognizer_Joints != nullptr) {
        columnValuesArray[4] = parentTemplateRecognizerRowByTemplateRecognizer_Joints[15];
    }
    rowJointsRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowJointsRow);
    return rowJointsRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::JointsDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::JointsDataTable::Clone() {
    NewDataSet::JointsDataTable^  cln = (cli::safe_cast<NewDataSet::JointsDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::JointsDataTable::CreateInstance() {
    return (gcnew NewDataSet::JointsDataTable());
}

inline ::System::Void NewDataSet::JointsDataTable::InitVars() {
    this->columnmain = __super::Columns[L"main"];
    this->columnrelative = __super::Columns[L"relative"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
}

inline ::System::Void NewDataSet::JointsDataTable::InitClass() {
    this->columnmain = (gcnew ::System::Data::DataColumn(L"main", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmain);
    this->columnrelative = (gcnew ::System::Data::DataColumn(L"relative", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnrelative);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnmain->AllowDBNull = false;
    this->columnmain->Namespace = L"";
    this->columnrelative->Namespace = L"";
}

inline NewDataSet::JointsRow^  NewDataSet::JointsDataTable::NewJointsRow() {
    return (cli::safe_cast<NewDataSet::JointsRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::JointsDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::JointsRow(builder));
}

inline ::System::Type^  NewDataSet::JointsDataTable::GetRowType() {
    return NewDataSet::JointsRow::typeid;
}

inline ::System::Void NewDataSet::JointsDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->JointsRowChanged(this, (gcnew NewDataSet::JointsRowChangeEvent((cli::safe_cast<NewDataSet::JointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointsDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->JointsRowChanging(this, (gcnew NewDataSet::JointsRowChangeEvent((cli::safe_cast<NewDataSet::JointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointsDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->JointsRowDeleted(this, (gcnew NewDataSet::JointsRowChangeEvent((cli::safe_cast<NewDataSet::JointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointsDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->JointsRowDeleting(this, (gcnew NewDataSet::JointsRowChangeEvent((cli::safe_cast<NewDataSet::JointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointsDataTable::RemoveJointsRow(NewDataSet::JointsRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::JointsDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"JointsDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::JointDataTable::JointDataTable() {
    this->TableName = L"Joint";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::JointDataTable::JointDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::JointDataTable::JointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::MiddleJoint_IdColumn::get() {
    return this->columnMiddleJoint_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::FingerCountRecognizer_IdColumn::get() {
    return this->columnFingerCountRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointDataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Int32 NewDataSet::JointDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::JointRow^  NewDataSet::JointDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::JointRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::JointDataTable::AddJointRow(NewDataSet::JointRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::JointRow^  NewDataSet::JointDataTable::AddJointRow(
            System::String^  name, 
            NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_Joint, 
            NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_Joint, 
            NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_Joint, 
            NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_Joint, 
            NewDataSet::FingerCountRecognizerRow^  parentFingerCountRecognizerRowByFingerCountRecognizer_Joint, 
            NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_Joint) {
    NewDataSet::JointRow^  rowJointRow = (cli::safe_cast<NewDataSet::JointRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(7) {name, nullptr, nullptr, 
        nullptr, nullptr, nullptr, nullptr};
    if (parentMiddleJointRowByMiddleJoint_Joint != nullptr) {
        columnValuesArray[1] = parentMiddleJointRowByMiddleJoint_Joint[0];
    }
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_Joint != nullptr) {
        columnValuesArray[2] = parentJointRelationRecognizerRowByJointRelationRecognizer_Joint[6];
    }
    if (parentJointOrientationRecognizerRowByJointOrientationRecognizer_Joint != nullptr) {
        columnValuesArray[3] = parentJointOrientationRecognizerRowByJointOrientationRecognizer_Joint[5];
    }
    if (parentAngularMovementRecognizerRowByAngularMovementRecognizer_Joint != nullptr) {
        columnValuesArray[4] = parentAngularMovementRecognizerRowByAngularMovementRecognizer_Joint[5];
    }
    if (parentFingerCountRecognizerRowByFingerCountRecognizer_Joint != nullptr) {
        columnValuesArray[5] = parentFingerCountRecognizerRowByFingerCountRecognizer_Joint[4];
    }
    if (parentTemplateRecognizerRowByTemplateRecognizer_Joint != nullptr) {
        columnValuesArray[6] = parentTemplateRecognizerRowByTemplateRecognizer_Joint[15];
    }
    rowJointRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowJointRow);
    return rowJointRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::JointDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::JointDataTable::Clone() {
    NewDataSet::JointDataTable^  cln = (cli::safe_cast<NewDataSet::JointDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::JointDataTable::CreateInstance() {
    return (gcnew NewDataSet::JointDataTable());
}

inline ::System::Void NewDataSet::JointDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnMiddleJoint_Id = __super::Columns[L"MiddleJoint_Id"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
    this->columnFingerCountRecognizer_Id = __super::Columns[L"FingerCountRecognizer_Id"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
}

inline ::System::Void NewDataSet::JointDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnMiddleJoint_Id = (gcnew ::System::Data::DataColumn(L"MiddleJoint_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMiddleJoint_Id);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columnFingerCountRecognizer_Id = (gcnew ::System::Data::DataColumn(L"FingerCountRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFingerCountRecognizer_Id);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
}

inline NewDataSet::JointRow^  NewDataSet::JointDataTable::NewJointRow() {
    return (cli::safe_cast<NewDataSet::JointRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::JointDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::JointRow(builder));
}

inline ::System::Type^  NewDataSet::JointDataTable::GetRowType() {
    return NewDataSet::JointRow::typeid;
}

inline ::System::Void NewDataSet::JointDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->JointRowChanged(this, (gcnew NewDataSet::JointRowChangeEvent((cli::safe_cast<NewDataSet::JointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->JointRowChanging(this, (gcnew NewDataSet::JointRowChangeEvent((cli::safe_cast<NewDataSet::JointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->JointRowDeleted(this, (gcnew NewDataSet::JointRowChangeEvent((cli::safe_cast<NewDataSet::JointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->JointRowDeleting(this, (gcnew NewDataSet::JointRowChangeEvent((cli::safe_cast<NewDataSet::JointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointDataTable::RemoveJointRow(NewDataSet::JointRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::JointDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"JointDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::HandJointsDataTable::HandJointsDataTable() {
    this->TableName = L"HandJoints";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::HandJointsDataTable::HandJointsDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::HandJointsDataTable::HandJointsDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointsDataTable::mainColumn::get() {
    return this->columnmain;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointsDataTable::relativeColumn::get() {
    return this->columnrelative;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointsDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointsDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointsDataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Int32 NewDataSet::HandJointsDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::HandJointsRow^  NewDataSet::HandJointsDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::HandJointsRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::HandJointsDataTable::AddHandJointsRow(NewDataSet::HandJointsRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::HandJointsRow^  NewDataSet::HandJointsDataTable::AddHandJointsRow(System::String^  main, System::String^  relative, 
            NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_HandJoints, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_HandJoints, 
            NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_HandJoints) {
    NewDataSet::HandJointsRow^  rowHandJointsRow = (cli::safe_cast<NewDataSet::HandJointsRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {main, relative, nullptr, 
        nullptr, nullptr};
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_HandJoints != nullptr) {
        columnValuesArray[2] = parentJointRelationRecognizerRowByJointRelationRecognizer_HandJoints[6];
    }
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_HandJoints != nullptr) {
        columnValuesArray[3] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_HandJoints[6];
    }
    if (parentTemplateRecognizerRowByTemplateRecognizer_HandJoints != nullptr) {
        columnValuesArray[4] = parentTemplateRecognizerRowByTemplateRecognizer_HandJoints[15];
    }
    rowHandJointsRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowHandJointsRow);
    return rowHandJointsRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::HandJointsDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::HandJointsDataTable::Clone() {
    NewDataSet::HandJointsDataTable^  cln = (cli::safe_cast<NewDataSet::HandJointsDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::HandJointsDataTable::CreateInstance() {
    return (gcnew NewDataSet::HandJointsDataTable());
}

inline ::System::Void NewDataSet::HandJointsDataTable::InitVars() {
    this->columnmain = __super::Columns[L"main"];
    this->columnrelative = __super::Columns[L"relative"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
}

inline ::System::Void NewDataSet::HandJointsDataTable::InitClass() {
    this->columnmain = (gcnew ::System::Data::DataColumn(L"main", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmain);
    this->columnrelative = (gcnew ::System::Data::DataColumn(L"relative", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnrelative);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnmain->AllowDBNull = false;
    this->columnmain->Namespace = L"";
    this->columnrelative->Namespace = L"";
}

inline NewDataSet::HandJointsRow^  NewDataSet::HandJointsDataTable::NewHandJointsRow() {
    return (cli::safe_cast<NewDataSet::HandJointsRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::HandJointsDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::HandJointsRow(builder));
}

inline ::System::Type^  NewDataSet::HandJointsDataTable::GetRowType() {
    return NewDataSet::HandJointsRow::typeid;
}

inline ::System::Void NewDataSet::HandJointsDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->HandJointsRowChanged(this, (gcnew NewDataSet::HandJointsRowChangeEvent((cli::safe_cast<NewDataSet::HandJointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointsDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->HandJointsRowChanging(this, (gcnew NewDataSet::HandJointsRowChangeEvent((cli::safe_cast<NewDataSet::HandJointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointsDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->HandJointsRowDeleted(this, (gcnew NewDataSet::HandJointsRowChangeEvent((cli::safe_cast<NewDataSet::HandJointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointsDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->HandJointsRowDeleting(this, (gcnew NewDataSet::HandJointsRowChangeEvent((cli::safe_cast<NewDataSet::HandJointsRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointsDataTable::RemoveHandJointsRow(NewDataSet::HandJointsRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::HandJointsDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"HandJointsDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MaxValuesDataTable::MaxValuesDataTable() {
    this->TableName = L"MaxValues";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MaxValuesDataTable::MaxValuesDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MaxValuesDataTable::MaxValuesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MaxValuesDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxValuesDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxValuesDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxValuesDataTable::distColumn::get() {
    return this->columndist;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxValuesDataTable::MiddleJoint_IdColumn::get() {
    return this->columnMiddleJoint_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxValuesDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MaxValuesDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MaxValuesRow^  NewDataSet::MaxValuesDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MaxValuesRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MaxValuesDataTable::AddMaxValuesRow(NewDataSet::MaxValuesRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MaxValuesRow^  NewDataSet::MaxValuesDataTable::AddMaxValuesRow(
            System::Single x, 
            System::Single y, 
            System::Single z, 
            System::Single dist, 
            NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_MaxValues, 
            NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_MaxValues) {
    NewDataSet::MaxValuesRow^  rowMaxValuesRow = (cli::safe_cast<NewDataSet::MaxValuesRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {x, y, z, dist, nullptr, 
        nullptr};
    if (parentMiddleJointRowByMiddleJoint_MaxValues != nullptr) {
        columnValuesArray[4] = parentMiddleJointRowByMiddleJoint_MaxValues[0];
    }
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_MaxValues != nullptr) {
        columnValuesArray[5] = parentJointRelationRecognizerRowByJointRelationRecognizer_MaxValues[6];
    }
    rowMaxValuesRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMaxValuesRow);
    return rowMaxValuesRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MaxValuesDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MaxValuesDataTable::Clone() {
    NewDataSet::MaxValuesDataTable^  cln = (cli::safe_cast<NewDataSet::MaxValuesDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MaxValuesDataTable::CreateInstance() {
    return (gcnew NewDataSet::MaxValuesDataTable());
}

inline ::System::Void NewDataSet::MaxValuesDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columndist = __super::Columns[L"dist"];
    this->columnMiddleJoint_Id = __super::Columns[L"MiddleJoint_Id"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
}

inline ::System::Void NewDataSet::MaxValuesDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columndist = (gcnew ::System::Data::DataColumn(L"dist", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columndist);
    this->columnMiddleJoint_Id = (gcnew ::System::Data::DataColumn(L"MiddleJoint_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMiddleJoint_Id);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columny->Namespace = L"";
    this->columnz->Namespace = L"";
    this->columndist->Namespace = L"";
}

inline NewDataSet::MaxValuesRow^  NewDataSet::MaxValuesDataTable::NewMaxValuesRow() {
    return (cli::safe_cast<NewDataSet::MaxValuesRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MaxValuesDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MaxValuesRow(builder));
}

inline ::System::Type^  NewDataSet::MaxValuesDataTable::GetRowType() {
    return NewDataSet::MaxValuesRow::typeid;
}

inline ::System::Void NewDataSet::MaxValuesDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MaxValuesRowChanged(this, (gcnew NewDataSet::MaxValuesRowChangeEvent((cli::safe_cast<NewDataSet::MaxValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxValuesDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MaxValuesRowChanging(this, (gcnew NewDataSet::MaxValuesRowChangeEvent((cli::safe_cast<NewDataSet::MaxValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxValuesDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MaxValuesRowDeleted(this, (gcnew NewDataSet::MaxValuesRowChangeEvent((cli::safe_cast<NewDataSet::MaxValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxValuesDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MaxValuesRowDeleting(this, (gcnew NewDataSet::MaxValuesRowChangeEvent((cli::safe_cast<NewDataSet::MaxValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxValuesDataTable::RemoveMaxValuesRow(NewDataSet::MaxValuesRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MaxValuesDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MaxValuesDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MinValuesDataTable::MinValuesDataTable() {
    this->TableName = L"MinValues";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MinValuesDataTable::MinValuesDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MinValuesDataTable::MinValuesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MinValuesDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::MinValuesDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::MinValuesDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::MinValuesDataTable::distColumn::get() {
    return this->columndist;
}

inline ::System::Data::DataColumn^  NewDataSet::MinValuesDataTable::MiddleJoint_IdColumn::get() {
    return this->columnMiddleJoint_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::MinValuesDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MinValuesDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MinValuesRow^  NewDataSet::MinValuesDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MinValuesRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MinValuesDataTable::AddMinValuesRow(NewDataSet::MinValuesRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MinValuesRow^  NewDataSet::MinValuesDataTable::AddMinValuesRow(
            System::Single x, 
            System::Single y, 
            System::Single z, 
            System::Single dist, 
            NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_MinValues, 
            NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_MinValues) {
    NewDataSet::MinValuesRow^  rowMinValuesRow = (cli::safe_cast<NewDataSet::MinValuesRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {x, y, z, dist, nullptr, 
        nullptr};
    if (parentMiddleJointRowByMiddleJoint_MinValues != nullptr) {
        columnValuesArray[4] = parentMiddleJointRowByMiddleJoint_MinValues[0];
    }
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_MinValues != nullptr) {
        columnValuesArray[5] = parentJointRelationRecognizerRowByJointRelationRecognizer_MinValues[6];
    }
    rowMinValuesRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMinValuesRow);
    return rowMinValuesRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MinValuesDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MinValuesDataTable::Clone() {
    NewDataSet::MinValuesDataTable^  cln = (cli::safe_cast<NewDataSet::MinValuesDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MinValuesDataTable::CreateInstance() {
    return (gcnew NewDataSet::MinValuesDataTable());
}

inline ::System::Void NewDataSet::MinValuesDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columndist = __super::Columns[L"dist"];
    this->columnMiddleJoint_Id = __super::Columns[L"MiddleJoint_Id"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
}

inline ::System::Void NewDataSet::MinValuesDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columndist = (gcnew ::System::Data::DataColumn(L"dist", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columndist);
    this->columnMiddleJoint_Id = (gcnew ::System::Data::DataColumn(L"MiddleJoint_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMiddleJoint_Id);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columny->Namespace = L"";
    this->columnz->Namespace = L"";
    this->columndist->Namespace = L"";
}

inline NewDataSet::MinValuesRow^  NewDataSet::MinValuesDataTable::NewMinValuesRow() {
    return (cli::safe_cast<NewDataSet::MinValuesRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MinValuesDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MinValuesRow(builder));
}

inline ::System::Type^  NewDataSet::MinValuesDataTable::GetRowType() {
    return NewDataSet::MinValuesRow::typeid;
}

inline ::System::Void NewDataSet::MinValuesDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MinValuesRowChanged(this, (gcnew NewDataSet::MinValuesRowChangeEvent((cli::safe_cast<NewDataSet::MinValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinValuesDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MinValuesRowChanging(this, (gcnew NewDataSet::MinValuesRowChangeEvent((cli::safe_cast<NewDataSet::MinValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinValuesDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MinValuesRowDeleted(this, (gcnew NewDataSet::MinValuesRowChangeEvent((cli::safe_cast<NewDataSet::MinValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinValuesDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MinValuesRowDeleting(this, (gcnew NewDataSet::MinValuesRowChangeEvent((cli::safe_cast<NewDataSet::MinValuesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinValuesDataTable::RemoveMinValuesRow(NewDataSet::MinValuesRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MinValuesDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MinValuesDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::RelationDataTable::RelationDataTable() {
    this->TableName = L"Relation";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::RelationDataTable::RelationDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::RelationDataTable::RelationDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::RelationDataTable::typeColumn::get() {
    return this->columntype;
}

inline ::System::Data::DataColumn^  NewDataSet::RelationDataTable::minColumn::get() {
    return this->columnmin;
}

inline ::System::Data::DataColumn^  NewDataSet::RelationDataTable::maxColumn::get() {
    return this->columnmax;
}

inline ::System::Data::DataColumn^  NewDataSet::RelationDataTable::MiddleJoint_IdColumn::get() {
    return this->columnMiddleJoint_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::RelationDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::RelationDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::RelationRow^  NewDataSet::RelationDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::RelationRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::RelationDataTable::AddRelationRow(NewDataSet::RelationRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::RelationRow^  NewDataSet::RelationDataTable::AddRelationRow(System::String^  type, System::Single min, 
            System::Single max, NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_Relation, NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_Relation) {
    NewDataSet::RelationRow^  rowRelationRow = (cli::safe_cast<NewDataSet::RelationRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {type, min, max, nullptr, 
        nullptr};
    if (parentMiddleJointRowByMiddleJoint_Relation != nullptr) {
        columnValuesArray[3] = parentMiddleJointRowByMiddleJoint_Relation[0];
    }
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_Relation != nullptr) {
        columnValuesArray[4] = parentJointRelationRecognizerRowByJointRelationRecognizer_Relation[6];
    }
    rowRelationRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowRelationRow);
    return rowRelationRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::RelationDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::RelationDataTable::Clone() {
    NewDataSet::RelationDataTable^  cln = (cli::safe_cast<NewDataSet::RelationDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::RelationDataTable::CreateInstance() {
    return (gcnew NewDataSet::RelationDataTable());
}

inline ::System::Void NewDataSet::RelationDataTable::InitVars() {
    this->columntype = __super::Columns[L"type"];
    this->columnmin = __super::Columns[L"min"];
    this->columnmax = __super::Columns[L"max"];
    this->columnMiddleJoint_Id = __super::Columns[L"MiddleJoint_Id"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
}

inline ::System::Void NewDataSet::RelationDataTable::InitClass() {
    this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columntype);
    this->columnmin = (gcnew ::System::Data::DataColumn(L"min", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmin);
    this->columnmax = (gcnew ::System::Data::DataColumn(L"max", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmax);
    this->columnMiddleJoint_Id = (gcnew ::System::Data::DataColumn(L"MiddleJoint_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMiddleJoint_Id);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columntype->AllowDBNull = false;
    this->columntype->Namespace = L"";
    this->columnmin->Namespace = L"";
    this->columnmax->Namespace = L"";
}

inline NewDataSet::RelationRow^  NewDataSet::RelationDataTable::NewRelationRow() {
    return (cli::safe_cast<NewDataSet::RelationRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::RelationDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::RelationRow(builder));
}

inline ::System::Type^  NewDataSet::RelationDataTable::GetRowType() {
    return NewDataSet::RelationRow::typeid;
}

inline ::System::Void NewDataSet::RelationDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->RelationRowChanged(this, (gcnew NewDataSet::RelationRowChangeEvent((cli::safe_cast<NewDataSet::RelationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RelationDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->RelationRowChanging(this, (gcnew NewDataSet::RelationRowChangeEvent((cli::safe_cast<NewDataSet::RelationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RelationDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->RelationRowDeleted(this, (gcnew NewDataSet::RelationRowChangeEvent((cli::safe_cast<NewDataSet::RelationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RelationDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->RelationRowDeleting(this, (gcnew NewDataSet::RelationRowChangeEvent((cli::safe_cast<NewDataSet::RelationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RelationDataTable::RemoveRelationRow(NewDataSet::RelationRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::RelationDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"RelationDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MiddleJointDataTable::MiddleJointDataTable() {
    this->TableName = L"MiddleJoint";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MiddleJointDataTable::MiddleJointDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MiddleJointDataTable::MiddleJointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MiddleJointDataTable::MiddleJoint_IdColumn::get() {
    return this->columnMiddleJoint_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::MiddleJointDataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MiddleJointDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::MiddleJointDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MiddleJointDataTable::AddMiddleJointRow(NewDataSet::MiddleJointRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MiddleJointRow^  NewDataSet::MiddleJointDataTable::AddMiddleJointRow(NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_MiddleJoint) {
    NewDataSet::MiddleJointRow^  rowMiddleJointRow = (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_MiddleJoint != nullptr) {
        columnValuesArray[1] = parentJointRelationRecognizerRowByJointRelationRecognizer_MiddleJoint[6];
    }
    rowMiddleJointRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMiddleJointRow);
    return rowMiddleJointRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MiddleJointDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MiddleJointDataTable::Clone() {
    NewDataSet::MiddleJointDataTable^  cln = (cli::safe_cast<NewDataSet::MiddleJointDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MiddleJointDataTable::CreateInstance() {
    return (gcnew NewDataSet::MiddleJointDataTable());
}

inline ::System::Void NewDataSet::MiddleJointDataTable::InitVars() {
    this->columnMiddleJoint_Id = __super::Columns[L"MiddleJoint_Id"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
}

inline ::System::Void NewDataSet::MiddleJointDataTable::InitClass() {
    this->columnMiddleJoint_Id = (gcnew ::System::Data::DataColumn(L"MiddleJoint_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMiddleJoint_Id);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnMiddleJoint_Id}, 
            true)));
    this->columnMiddleJoint_Id->AutoIncrement = true;
    this->columnMiddleJoint_Id->AllowDBNull = false;
    this->columnMiddleJoint_Id->Unique = true;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::MiddleJointDataTable::NewMiddleJointRow() {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MiddleJointDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MiddleJointRow(builder));
}

inline ::System::Type^  NewDataSet::MiddleJointDataTable::GetRowType() {
    return NewDataSet::MiddleJointRow::typeid;
}

inline ::System::Void NewDataSet::MiddleJointDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MiddleJointRowChanged(this, (gcnew NewDataSet::MiddleJointRowChangeEvent((cli::safe_cast<NewDataSet::MiddleJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MiddleJointDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MiddleJointRowChanging(this, (gcnew NewDataSet::MiddleJointRowChangeEvent((cli::safe_cast<NewDataSet::MiddleJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MiddleJointDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MiddleJointRowDeleted(this, (gcnew NewDataSet::MiddleJointRowChangeEvent((cli::safe_cast<NewDataSet::MiddleJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MiddleJointDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MiddleJointRowDeleting(this, (gcnew NewDataSet::MiddleJointRowChangeEvent((cli::safe_cast<NewDataSet::MiddleJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MiddleJointDataTable::RemoveMiddleJointRow(NewDataSet::MiddleJointRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MiddleJointDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MiddleJointDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::HandJointDataTable::HandJointDataTable() {
    this->TableName = L"HandJoint";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::HandJointDataTable::HandJointDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::HandJointDataTable::HandJointDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointDataTable::MiddleJoint_IdColumn::get() {
    return this->columnMiddleJoint_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointDataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::HandJointDataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::HandJointDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::HandJointRow^  NewDataSet::HandJointDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::HandJointRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::HandJointDataTable::AddHandJointRow(NewDataSet::HandJointRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::HandJointRow^  NewDataSet::HandJointDataTable::AddHandJointRow(System::String^  name, NewDataSet::MiddleJointRow^  parentMiddleJointRowByMiddleJoint_HandJoint, 
            NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_HandJoint, NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_HandJoint) {
    NewDataSet::HandJointRow^  rowHandJointRow = (cli::safe_cast<NewDataSet::HandJointRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, nullptr, nullptr, 
        nullptr};
    if (parentMiddleJointRowByMiddleJoint_HandJoint != nullptr) {
        columnValuesArray[1] = parentMiddleJointRowByMiddleJoint_HandJoint[0];
    }
    if (parentJointOrientationRecognizerRowByJointOrientationRecognizer_HandJoint != nullptr) {
        columnValuesArray[2] = parentJointOrientationRecognizerRowByJointOrientationRecognizer_HandJoint[5];
    }
    if (parentAngularMovementRecognizerRowByAngularMovementRecognizer_HandJoint != nullptr) {
        columnValuesArray[3] = parentAngularMovementRecognizerRowByAngularMovementRecognizer_HandJoint[5];
    }
    rowHandJointRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowHandJointRow);
    return rowHandJointRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::HandJointDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::HandJointDataTable::Clone() {
    NewDataSet::HandJointDataTable^  cln = (cli::safe_cast<NewDataSet::HandJointDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::HandJointDataTable::CreateInstance() {
    return (gcnew NewDataSet::HandJointDataTable());
}

inline ::System::Void NewDataSet::HandJointDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnMiddleJoint_Id = __super::Columns[L"MiddleJoint_Id"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::HandJointDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnMiddleJoint_Id = (gcnew ::System::Data::DataColumn(L"MiddleJoint_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMiddleJoint_Id);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
}

inline NewDataSet::HandJointRow^  NewDataSet::HandJointDataTable::NewHandJointRow() {
    return (cli::safe_cast<NewDataSet::HandJointRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::HandJointDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::HandJointRow(builder));
}

inline ::System::Type^  NewDataSet::HandJointDataTable::GetRowType() {
    return NewDataSet::HandJointRow::typeid;
}

inline ::System::Void NewDataSet::HandJointDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->HandJointRowChanged(this, (gcnew NewDataSet::HandJointRowChangeEvent((cli::safe_cast<NewDataSet::HandJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->HandJointRowChanging(this, (gcnew NewDataSet::HandJointRowChangeEvent((cli::safe_cast<NewDataSet::HandJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->HandJointRowDeleted(this, (gcnew NewDataSet::HandJointRowChangeEvent((cli::safe_cast<NewDataSet::HandJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->HandJointRowDeleting(this, (gcnew NewDataSet::HandJointRowChangeEvent((cli::safe_cast<NewDataSet::HandJointRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::HandJointDataTable::RemoveHandJointRow(NewDataSet::HandJointRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::HandJointDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"HandJointDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::METAINFODataTable::METAINFODataTable() {
    this->TableName = L"METAINFO";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::METAINFODataTable::METAINFODataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::METAINFODataTable::METAINFODataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::METAINFO_IdColumn::get() {
    return this->columnMETAINFO_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::JointRelationRecognizer_IdColumn::get() {
    return this->columnJointRelationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::FingerCountRecognizer_IdColumn::get() {
    return this->columnFingerCountRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::State_IdColumn::get() {
    return this->columnState_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::METAINFODataTable::CombinationRecognizer_IdColumn::get() {
    return this->columnCombinationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::METAINFODataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::METAINFORow^  NewDataSet::METAINFODataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::METAINFORow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::METAINFODataTable::AddMETAINFORow(NewDataSet::METAINFORow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::METAINFORow^  NewDataSet::METAINFODataTable::AddMETAINFORow(
            NewDataSet::JointRelationRecognizerRow^  parentJointRelationRecognizerRowByJointRelationRecognizer_METAINFO, 
            NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_METAINFO, 
            NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_METAINFO, 
            NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_METAINFO, 
            NewDataSet::FingerCountRecognizerRow^  parentFingerCountRecognizerRowByFingerCountRecognizer_METAINFO, 
            NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_METAINFO, 
            NewDataSet::StateRow^  parentStateRowByState_METAINFO, 
            NewDataSet::CombinationRecognizerRow^  parentCombinationRecognizerRowByCombinationRecognizer_METAINFO) {
    NewDataSet::METAINFORow^  rowMETAINFORow = (cli::safe_cast<NewDataSet::METAINFORow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(9) {nullptr, nullptr, nullptr, 
        nullptr, nullptr, nullptr, nullptr, nullptr, nullptr};
    if (parentJointRelationRecognizerRowByJointRelationRecognizer_METAINFO != nullptr) {
        columnValuesArray[1] = parentJointRelationRecognizerRowByJointRelationRecognizer_METAINFO[6];
    }
    if (parentJointOrientationRecognizerRowByJointOrientationRecognizer_METAINFO != nullptr) {
        columnValuesArray[2] = parentJointOrientationRecognizerRowByJointOrientationRecognizer_METAINFO[5];
    }
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_METAINFO != nullptr) {
        columnValuesArray[3] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_METAINFO[6];
    }
    if (parentAngularMovementRecognizerRowByAngularMovementRecognizer_METAINFO != nullptr) {
        columnValuesArray[4] = parentAngularMovementRecognizerRowByAngularMovementRecognizer_METAINFO[5];
    }
    if (parentFingerCountRecognizerRowByFingerCountRecognizer_METAINFO != nullptr) {
        columnValuesArray[5] = parentFingerCountRecognizerRowByFingerCountRecognizer_METAINFO[4];
    }
    if (parentTemplateRecognizerRowByTemplateRecognizer_METAINFO != nullptr) {
        columnValuesArray[6] = parentTemplateRecognizerRowByTemplateRecognizer_METAINFO[15];
    }
    if (parentStateRowByState_METAINFO != nullptr) {
        columnValuesArray[7] = parentStateRowByState_METAINFO[6];
    }
    if (parentCombinationRecognizerRowByCombinationRecognizer_METAINFO != nullptr) {
        columnValuesArray[8] = parentCombinationRecognizerRowByCombinationRecognizer_METAINFO[2];
    }
    rowMETAINFORow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMETAINFORow);
    return rowMETAINFORow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::METAINFODataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::METAINFODataTable::Clone() {
    NewDataSet::METAINFODataTable^  cln = (cli::safe_cast<NewDataSet::METAINFODataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::METAINFODataTable::CreateInstance() {
    return (gcnew NewDataSet::METAINFODataTable());
}

inline ::System::Void NewDataSet::METAINFODataTable::InitVars() {
    this->columnMETAINFO_Id = __super::Columns[L"METAINFO_Id"];
    this->columnJointRelationRecognizer_Id = __super::Columns[L"JointRelationRecognizer_Id"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
    this->columnFingerCountRecognizer_Id = __super::Columns[L"FingerCountRecognizer_Id"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
    this->columnState_Id = __super::Columns[L"State_Id"];
    this->columnCombinationRecognizer_Id = __super::Columns[L"CombinationRecognizer_Id"];
}

inline ::System::Void NewDataSet::METAINFODataTable::InitClass() {
    this->columnMETAINFO_Id = (gcnew ::System::Data::DataColumn(L"METAINFO_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMETAINFO_Id);
    this->columnJointRelationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointRelationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointRelationRecognizer_Id);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columnFingerCountRecognizer_Id = (gcnew ::System::Data::DataColumn(L"FingerCountRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFingerCountRecognizer_Id);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnState_Id = (gcnew ::System::Data::DataColumn(L"State_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnState_Id);
    this->columnCombinationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"CombinationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnCombinationRecognizer_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnMETAINFO_Id}, 
            true)));
    this->columnMETAINFO_Id->AutoIncrement = true;
    this->columnMETAINFO_Id->AllowDBNull = false;
    this->columnMETAINFO_Id->Unique = true;
}

inline NewDataSet::METAINFORow^  NewDataSet::METAINFODataTable::NewMETAINFORow() {
    return (cli::safe_cast<NewDataSet::METAINFORow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::METAINFODataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::METAINFORow(builder));
}

inline ::System::Type^  NewDataSet::METAINFODataTable::GetRowType() {
    return NewDataSet::METAINFORow::typeid;
}

inline ::System::Void NewDataSet::METAINFODataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->METAINFORowChanged(this, (gcnew NewDataSet::METAINFORowChangeEvent((cli::safe_cast<NewDataSet::METAINFORow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::METAINFODataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->METAINFORowChanging(this, (gcnew NewDataSet::METAINFORowChangeEvent((cli::safe_cast<NewDataSet::METAINFORow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::METAINFODataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->METAINFORowDeleted(this, (gcnew NewDataSet::METAINFORowChangeEvent((cli::safe_cast<NewDataSet::METAINFORow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::METAINFODataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->METAINFORowDeleting(this, (gcnew NewDataSet::METAINFORowChangeEvent((cli::safe_cast<NewDataSet::METAINFORow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::METAINFODataTable::RemoveMETAINFORow(NewDataSet::METAINFORow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::METAINFODataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"METAINFODataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::PropertyDataTable::PropertyDataTable() {
    this->TableName = L"Property";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::PropertyDataTable::PropertyDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::PropertyDataTable::PropertyDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::_valueColumn::get() {
    return this->column_value;
}

inline ::System::Data::DataColumn^  NewDataSet::PropertyDataTable::METAINFO_IdColumn::get() {
    return this->columnMETAINFO_Id;
}

inline ::System::Int32 NewDataSet::PropertyDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::PropertyRow^  NewDataSet::PropertyDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::PropertyRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::PropertyDataTable::AddPropertyRow(NewDataSet::PropertyRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::PropertyRow^  NewDataSet::PropertyDataTable::AddPropertyRow(System::String^  name, System::String^  _value, 
            NewDataSet::METAINFORow^  parentMETAINFORowByMETAINFO_Property) {
    NewDataSet::PropertyRow^  rowPropertyRow = (cli::safe_cast<NewDataSet::PropertyRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {name, _value, nullptr};
    if (parentMETAINFORowByMETAINFO_Property != nullptr) {
        columnValuesArray[2] = parentMETAINFORowByMETAINFO_Property[0];
    }
    rowPropertyRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowPropertyRow);
    return rowPropertyRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::PropertyDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::PropertyDataTable::Clone() {
    NewDataSet::PropertyDataTable^  cln = (cli::safe_cast<NewDataSet::PropertyDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::PropertyDataTable::CreateInstance() {
    return (gcnew NewDataSet::PropertyDataTable());
}

inline ::System::Void NewDataSet::PropertyDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->column_value = __super::Columns[L"value"];
    this->columnMETAINFO_Id = __super::Columns[L"METAINFO_Id"];
}

inline ::System::Void NewDataSet::PropertyDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->column_value = (gcnew ::System::Data::DataColumn(L"value", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->column_value);
    this->columnMETAINFO_Id = (gcnew ::System::Data::DataColumn(L"METAINFO_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnMETAINFO_Id);
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->column_value->AllowDBNull = false;
    this->column_value->Namespace = L"";
}

inline NewDataSet::PropertyRow^  NewDataSet::PropertyDataTable::NewPropertyRow() {
    return (cli::safe_cast<NewDataSet::PropertyRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::PropertyDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::PropertyRow(builder));
}

inline ::System::Type^  NewDataSet::PropertyDataTable::GetRowType() {
    return NewDataSet::PropertyRow::typeid;
}

inline ::System::Void NewDataSet::PropertyDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->PropertyRowChanged(this, (gcnew NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NewDataSet::PropertyRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::PropertyDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->PropertyRowChanging(this, (gcnew NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NewDataSet::PropertyRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::PropertyDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->PropertyRowDeleted(this, (gcnew NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NewDataSet::PropertyRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::PropertyDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->PropertyRowDeleting(this, (gcnew NewDataSet::PropertyRowChangeEvent((cli::safe_cast<NewDataSet::PropertyRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::PropertyDataTable::RemovePropertyRow(NewDataSet::PropertyRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::PropertyDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"PropertyDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::JointOrientationRecognizerDataTable::JointOrientationRecognizerDataTable() {
    this->TableName = L"JointOrientationRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::JointOrientationRecognizerDataTable::JointOrientationRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::JointOrientationRecognizerDataTable::JointOrientationRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::visibilityColumn::get() {
    return this->columnvisibility;
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::useLocalOrientationsColumn::get() {
    return this->columnuseLocalOrientations;
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::JointOrientationRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::JointOrientationRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::JointOrientationRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::AddJointOrientationRecognizerRow(NewDataSet::JointOrientationRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::JointOrientationRecognizerDataTable::AddJointOrientationRecognizerRow(
            System::String^  name, 
            System::String^  visibility, 
            System::Boolean useLocalOrientations, 
            System::Single minConfidence, 
            System::Boolean useFilteredData, 
            NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_JointOrientationRecognizer) {
    NewDataSet::JointOrientationRecognizerRow^  rowJointOrientationRecognizerRow = (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(7) {name, visibility, useLocalOrientations, 
        minConfidence, useFilteredData, nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_JointOrientationRecognizer != nullptr) {
        columnValuesArray[6] = parentFubiRecognizersRowByFubiRecognizers_JointOrientationRecognizer[2];
    }
    rowJointOrientationRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowJointOrientationRecognizerRow);
    return rowJointOrientationRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::JointOrientationRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::JointOrientationRecognizerDataTable::Clone() {
    NewDataSet::JointOrientationRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::JointOrientationRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::JointOrientationRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::JointOrientationRecognizerDataTable());
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnvisibility = __super::Columns[L"visibility"];
    this->columnuseLocalOrientations = __super::Columns[L"useLocalOrientations"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnvisibility = (gcnew ::System::Data::DataColumn(L"visibility", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnvisibility);
    this->columnuseLocalOrientations = (gcnew ::System::Data::DataColumn(L"useLocalOrientations", ::System::Boolean::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseLocalOrientations);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnJointOrientationRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnvisibility->Namespace = L"";
    this->columnvisibility->DefaultValue = (cli::safe_cast<System::String^  >(L"visible"));
    this->columnuseLocalOrientations->Namespace = L"";
    this->columnuseLocalOrientations->DefaultValue = static_cast<System::Boolean>(true);
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnJointOrientationRecognizer_Id->AutoIncrement = true;
    this->columnJointOrientationRecognizer_Id->AllowDBNull = false;
    this->columnJointOrientationRecognizer_Id->Unique = true;
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::JointOrientationRecognizerDataTable::NewJointOrientationRecognizerRow() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::JointOrientationRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::JointOrientationRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::JointOrientationRecognizerDataTable::GetRowType() {
    return NewDataSet::JointOrientationRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->JointOrientationRecognizerRowChanged(this, (gcnew NewDataSet::JointOrientationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->JointOrientationRecognizerRowChanging(this, (gcnew NewDataSet::JointOrientationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->JointOrientationRecognizerRowDeleted(this, (gcnew NewDataSet::JointOrientationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->JointOrientationRecognizerRowDeleting(this, (gcnew NewDataSet::JointOrientationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::JointOrientationRecognizerDataTable::RemoveJointOrientationRecognizerRow(NewDataSet::JointOrientationRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::JointOrientationRecognizerDataTable::GetTypedTableSchema(
            ::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"JointOrientationRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MaxDegreesDataTable::MaxDegreesDataTable() {
    this->TableName = L"MaxDegrees";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MaxDegreesDataTable::MaxDegreesDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MaxDegreesDataTable::MaxDegreesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MaxDegreesDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxDegreesDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxDegreesDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxDegreesDataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MaxDegreesDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MaxDegreesRow^  NewDataSet::MaxDegreesDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MaxDegreesRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::AddMaxDegreesRow(NewDataSet::MaxDegreesRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MaxDegreesRow^  NewDataSet::MaxDegreesDataTable::AddMaxDegreesRow(System::Single x, System::Single y, 
            System::Single z, NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_MaxDegrees) {
    NewDataSet::MaxDegreesRow^  rowMaxDegreesRow = (cli::safe_cast<NewDataSet::MaxDegreesRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {x, y, z, nullptr};
    if (parentJointOrientationRecognizerRowByJointOrientationRecognizer_MaxDegrees != nullptr) {
        columnValuesArray[3] = parentJointOrientationRecognizerRowByJointOrientationRecognizer_MaxDegrees[5];
    }
    rowMaxDegreesRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMaxDegreesRow);
    return rowMaxDegreesRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MaxDegreesDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MaxDegreesDataTable::Clone() {
    NewDataSet::MaxDegreesDataTable^  cln = (cli::safe_cast<NewDataSet::MaxDegreesDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MaxDegreesDataTable::CreateInstance() {
    return (gcnew NewDataSet::MaxDegreesDataTable());
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columny->Namespace = L"";
    this->columnz->Namespace = L"";
}

inline NewDataSet::MaxDegreesRow^  NewDataSet::MaxDegreesDataTable::NewMaxDegreesRow() {
    return (cli::safe_cast<NewDataSet::MaxDegreesRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MaxDegreesDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MaxDegreesRow(builder));
}

inline ::System::Type^  NewDataSet::MaxDegreesDataTable::GetRowType() {
    return NewDataSet::MaxDegreesRow::typeid;
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MaxDegreesRowChanged(this, (gcnew NewDataSet::MaxDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MaxDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MaxDegreesRowChanging(this, (gcnew NewDataSet::MaxDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MaxDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MaxDegreesRowDeleted(this, (gcnew NewDataSet::MaxDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MaxDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MaxDegreesRowDeleting(this, (gcnew NewDataSet::MaxDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MaxDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxDegreesDataTable::RemoveMaxDegreesRow(NewDataSet::MaxDegreesRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MaxDegreesDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MaxDegreesDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MinDegreesDataTable::MinDegreesDataTable() {
    this->TableName = L"MinDegrees";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MinDegreesDataTable::MinDegreesDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MinDegreesDataTable::MinDegreesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MinDegreesDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::MinDegreesDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::MinDegreesDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::MinDegreesDataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MinDegreesDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MinDegreesRow^  NewDataSet::MinDegreesDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MinDegreesRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MinDegreesDataTable::AddMinDegreesRow(NewDataSet::MinDegreesRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MinDegreesRow^  NewDataSet::MinDegreesDataTable::AddMinDegreesRow(System::Single x, System::Single y, 
            System::Single z, NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_MinDegrees) {
    NewDataSet::MinDegreesRow^  rowMinDegreesRow = (cli::safe_cast<NewDataSet::MinDegreesRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {x, y, z, nullptr};
    if (parentJointOrientationRecognizerRowByJointOrientationRecognizer_MinDegrees != nullptr) {
        columnValuesArray[3] = parentJointOrientationRecognizerRowByJointOrientationRecognizer_MinDegrees[5];
    }
    rowMinDegreesRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMinDegreesRow);
    return rowMinDegreesRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MinDegreesDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MinDegreesDataTable::Clone() {
    NewDataSet::MinDegreesDataTable^  cln = (cli::safe_cast<NewDataSet::MinDegreesDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MinDegreesDataTable::CreateInstance() {
    return (gcnew NewDataSet::MinDegreesDataTable());
}

inline ::System::Void NewDataSet::MinDegreesDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
}

inline ::System::Void NewDataSet::MinDegreesDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columny->Namespace = L"";
    this->columnz->Namespace = L"";
}

inline NewDataSet::MinDegreesRow^  NewDataSet::MinDegreesDataTable::NewMinDegreesRow() {
    return (cli::safe_cast<NewDataSet::MinDegreesRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MinDegreesDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MinDegreesRow(builder));
}

inline ::System::Type^  NewDataSet::MinDegreesDataTable::GetRowType() {
    return NewDataSet::MinDegreesRow::typeid;
}

inline ::System::Void NewDataSet::MinDegreesDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MinDegreesRowChanged(this, (gcnew NewDataSet::MinDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MinDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinDegreesDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MinDegreesRowChanging(this, (gcnew NewDataSet::MinDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MinDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinDegreesDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MinDegreesRowDeleted(this, (gcnew NewDataSet::MinDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MinDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinDegreesDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MinDegreesRowDeleting(this, (gcnew NewDataSet::MinDegreesRowChangeEvent((cli::safe_cast<NewDataSet::MinDegreesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinDegreesDataTable::RemoveMinDegreesRow(NewDataSet::MinDegreesRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MinDegreesDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MinDegreesDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::OrientationDataTable::OrientationDataTable() {
    this->TableName = L"Orientation";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::OrientationDataTable::OrientationDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::OrientationDataTable::OrientationDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::OrientationDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::OrientationDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::OrientationDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::OrientationDataTable::maxAngleDifferenceColumn::get() {
    return this->columnmaxAngleDifference;
}

inline ::System::Data::DataColumn^  NewDataSet::OrientationDataTable::JointOrientationRecognizer_IdColumn::get() {
    return this->columnJointOrientationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::OrientationDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::OrientationRow^  NewDataSet::OrientationDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::OrientationRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::OrientationDataTable::AddOrientationRow(NewDataSet::OrientationRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::OrientationRow^  NewDataSet::OrientationDataTable::AddOrientationRow(System::Single x, System::Single y, 
            System::Single z, System::Single maxAngleDifference, NewDataSet::JointOrientationRecognizerRow^  parentJointOrientationRecognizerRowByJointOrientationRecognizer_Orientation) {
    NewDataSet::OrientationRow^  rowOrientationRow = (cli::safe_cast<NewDataSet::OrientationRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {x, y, z, maxAngleDifference, 
        nullptr};
    if (parentJointOrientationRecognizerRowByJointOrientationRecognizer_Orientation != nullptr) {
        columnValuesArray[4] = parentJointOrientationRecognizerRowByJointOrientationRecognizer_Orientation[5];
    }
    rowOrientationRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowOrientationRow);
    return rowOrientationRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::OrientationDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::OrientationDataTable::Clone() {
    NewDataSet::OrientationDataTable^  cln = (cli::safe_cast<NewDataSet::OrientationDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::OrientationDataTable::CreateInstance() {
    return (gcnew NewDataSet::OrientationDataTable());
}

inline ::System::Void NewDataSet::OrientationDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnmaxAngleDifference = __super::Columns[L"maxAngleDifference"];
    this->columnJointOrientationRecognizer_Id = __super::Columns[L"JointOrientationRecognizer_Id"];
}

inline ::System::Void NewDataSet::OrientationDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnmaxAngleDifference = (gcnew ::System::Data::DataColumn(L"maxAngleDifference", ::System::Single::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxAngleDifference);
    this->columnJointOrientationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"JointOrientationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnJointOrientationRecognizer_Id);
    this->columnx->AllowDBNull = false;
    this->columnx->Namespace = L"";
    this->columny->AllowDBNull = false;
    this->columny->Namespace = L"";
    this->columnz->AllowDBNull = false;
    this->columnz->Namespace = L"";
    this->columnmaxAngleDifference->Namespace = L"";
    this->columnmaxAngleDifference->DefaultValue = static_cast<System::Single>(45);
}

inline NewDataSet::OrientationRow^  NewDataSet::OrientationDataTable::NewOrientationRow() {
    return (cli::safe_cast<NewDataSet::OrientationRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::OrientationDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::OrientationRow(builder));
}

inline ::System::Type^  NewDataSet::OrientationDataTable::GetRowType() {
    return NewDataSet::OrientationRow::typeid;
}

inline ::System::Void NewDataSet::OrientationDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->OrientationRowChanged(this, (gcnew NewDataSet::OrientationRowChangeEvent((cli::safe_cast<NewDataSet::OrientationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::OrientationDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->OrientationRowChanging(this, (gcnew NewDataSet::OrientationRowChangeEvent((cli::safe_cast<NewDataSet::OrientationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::OrientationDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->OrientationRowDeleted(this, (gcnew NewDataSet::OrientationRowChangeEvent((cli::safe_cast<NewDataSet::OrientationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::OrientationDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->OrientationRowDeleting(this, (gcnew NewDataSet::OrientationRowChangeEvent((cli::safe_cast<NewDataSet::OrientationRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::OrientationDataTable::RemoveOrientationRow(NewDataSet::OrientationRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::OrientationDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"OrientationDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::LinearMovementRecognizerDataTable::LinearMovementRecognizerDataTable() {
    this->TableName = L"LinearMovementRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::LinearMovementRecognizerDataTable::LinearMovementRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::LinearMovementRecognizerDataTable::LinearMovementRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::visibilityColumn::get() {
    return this->columnvisibility;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::useLocalPositionsColumn::get() {
    return this->columnuseLocalPositions;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::useOnlyCorrectDirectionComponentColumn::get() {
    return this->columnuseOnlyCorrectDirectionComponent;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::LinearMovementRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::LinearMovementRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::LinearMovementRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::AddLinearMovementRecognizerRow(NewDataSet::LinearMovementRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::LinearMovementRecognizerDataTable::AddLinearMovementRecognizerRow(
            System::String^  name, 
            System::String^  visibility, 
            System::Boolean useLocalPositions, 
            System::Single minConfidence, 
            System::Boolean useFilteredData, 
            System::Boolean useOnlyCorrectDirectionComponent, 
            NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_LinearMovementRecognizer) {
    NewDataSet::LinearMovementRecognizerRow^  rowLinearMovementRecognizerRow = (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(8) {name, visibility, useLocalPositions, 
        minConfidence, useFilteredData, useOnlyCorrectDirectionComponent, nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_LinearMovementRecognizer != nullptr) {
        columnValuesArray[7] = parentFubiRecognizersRowByFubiRecognizers_LinearMovementRecognizer[2];
    }
    rowLinearMovementRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowLinearMovementRecognizerRow);
    return rowLinearMovementRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::LinearMovementRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::LinearMovementRecognizerDataTable::Clone() {
    NewDataSet::LinearMovementRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::LinearMovementRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::LinearMovementRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::LinearMovementRecognizerDataTable());
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnvisibility = __super::Columns[L"visibility"];
    this->columnuseLocalPositions = __super::Columns[L"useLocalPositions"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnuseOnlyCorrectDirectionComponent = __super::Columns[L"useOnlyCorrectDirectionComponent"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnvisibility = (gcnew ::System::Data::DataColumn(L"visibility", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnvisibility);
    this->columnuseLocalPositions = (gcnew ::System::Data::DataColumn(L"useLocalPositions", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseLocalPositions);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnuseOnlyCorrectDirectionComponent = (gcnew ::System::Data::DataColumn(L"useOnlyCorrectDirectionComponent", ::System::Boolean::typeid, 
        nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseOnlyCorrectDirectionComponent);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnLinearMovementRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnvisibility->Namespace = L"";
    this->columnvisibility->DefaultValue = (cli::safe_cast<System::String^  >(L"visible"));
    this->columnuseLocalPositions->Namespace = L"";
    this->columnuseLocalPositions->DefaultValue = static_cast<System::Boolean>(false);
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnuseOnlyCorrectDirectionComponent->Namespace = L"";
    this->columnuseOnlyCorrectDirectionComponent->DefaultValue = static_cast<System::Boolean>(true);
    this->columnLinearMovementRecognizer_Id->AutoIncrement = true;
    this->columnLinearMovementRecognizer_Id->AllowDBNull = false;
    this->columnLinearMovementRecognizer_Id->Unique = true;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::LinearMovementRecognizerDataTable::NewLinearMovementRecognizerRow() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::LinearMovementRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::LinearMovementRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::LinearMovementRecognizerDataTable::GetRowType() {
    return NewDataSet::LinearMovementRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->LinearMovementRecognizerRowChanged(this, (gcnew NewDataSet::LinearMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->LinearMovementRecognizerRowChanging(this, (gcnew NewDataSet::LinearMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->LinearMovementRecognizerRowDeleted(this, (gcnew NewDataSet::LinearMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->LinearMovementRecognizerRowDeleting(this, (gcnew NewDataSet::LinearMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LinearMovementRecognizerDataTable::RemoveLinearMovementRecognizerRow(NewDataSet::LinearMovementRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::LinearMovementRecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"LinearMovementRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::DirectionDataTable::DirectionDataTable() {
    this->TableName = L"Direction";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::DirectionDataTable::DirectionDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::DirectionDataTable::DirectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::DirectionDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::DirectionDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::DirectionDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::DirectionDataTable::maxAngleDifferenceColumn::get() {
    return this->columnmaxAngleDifference;
}

inline ::System::Data::DataColumn^  NewDataSet::DirectionDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::DirectionDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::DirectionRow^  NewDataSet::DirectionDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::DirectionRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::DirectionDataTable::AddDirectionRow(NewDataSet::DirectionRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::DirectionRow^  NewDataSet::DirectionDataTable::AddDirectionRow(System::Single x, System::Single y, System::Single z, 
            System::Single maxAngleDifference, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Direction) {
    NewDataSet::DirectionRow^  rowDirectionRow = (cli::safe_cast<NewDataSet::DirectionRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {x, y, z, maxAngleDifference, 
        nullptr};
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_Direction != nullptr) {
        columnValuesArray[4] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_Direction[6];
    }
    rowDirectionRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowDirectionRow);
    return rowDirectionRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::DirectionDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::DirectionDataTable::Clone() {
    NewDataSet::DirectionDataTable^  cln = (cli::safe_cast<NewDataSet::DirectionDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::DirectionDataTable::CreateInstance() {
    return (gcnew NewDataSet::DirectionDataTable());
}

inline ::System::Void NewDataSet::DirectionDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnmaxAngleDifference = __super::Columns[L"maxAngleDifference"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::DirectionDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnmaxAngleDifference = (gcnew ::System::Data::DataColumn(L"maxAngleDifference", ::System::Single::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxAngleDifference);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnx->AllowDBNull = false;
    this->columnx->Namespace = L"";
    this->columny->AllowDBNull = false;
    this->columny->Namespace = L"";
    this->columnz->AllowDBNull = false;
    this->columnz->Namespace = L"";
    this->columnmaxAngleDifference->Namespace = L"";
    this->columnmaxAngleDifference->DefaultValue = static_cast<System::Single>(45);
}

inline NewDataSet::DirectionRow^  NewDataSet::DirectionDataTable::NewDirectionRow() {
    return (cli::safe_cast<NewDataSet::DirectionRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::DirectionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::DirectionRow(builder));
}

inline ::System::Type^  NewDataSet::DirectionDataTable::GetRowType() {
    return NewDataSet::DirectionRow::typeid;
}

inline ::System::Void NewDataSet::DirectionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->DirectionRowChanged(this, (gcnew NewDataSet::DirectionRowChangeEvent((cli::safe_cast<NewDataSet::DirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::DirectionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->DirectionRowChanging(this, (gcnew NewDataSet::DirectionRowChangeEvent((cli::safe_cast<NewDataSet::DirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::DirectionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->DirectionRowDeleted(this, (gcnew NewDataSet::DirectionRowChangeEvent((cli::safe_cast<NewDataSet::DirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::DirectionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->DirectionRowDeleting(this, (gcnew NewDataSet::DirectionRowChangeEvent((cli::safe_cast<NewDataSet::DirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::DirectionDataTable::RemoveDirectionRow(NewDataSet::DirectionRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::DirectionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"DirectionDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::BasicDirectionDataTable::BasicDirectionDataTable() {
    this->TableName = L"BasicDirection";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::BasicDirectionDataTable::BasicDirectionDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::BasicDirectionDataTable::BasicDirectionDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::BasicDirectionDataTable::typeColumn::get() {
    return this->columntype;
}

inline ::System::Data::DataColumn^  NewDataSet::BasicDirectionDataTable::maxAngleDifferenceColumn::get() {
    return this->columnmaxAngleDifference;
}

inline ::System::Data::DataColumn^  NewDataSet::BasicDirectionDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::BasicDirectionDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::BasicDirectionRow^  NewDataSet::BasicDirectionDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::BasicDirectionRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::AddBasicDirectionRow(NewDataSet::BasicDirectionRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::BasicDirectionRow^  NewDataSet::BasicDirectionDataTable::AddBasicDirectionRow(System::String^  type, System::Single maxAngleDifference, 
            NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_BasicDirection) {
    NewDataSet::BasicDirectionRow^  rowBasicDirectionRow = (cli::safe_cast<NewDataSet::BasicDirectionRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {type, maxAngleDifference, 
        nullptr};
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_BasicDirection != nullptr) {
        columnValuesArray[2] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_BasicDirection[6];
    }
    rowBasicDirectionRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowBasicDirectionRow);
    return rowBasicDirectionRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::BasicDirectionDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::BasicDirectionDataTable::Clone() {
    NewDataSet::BasicDirectionDataTable^  cln = (cli::safe_cast<NewDataSet::BasicDirectionDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::BasicDirectionDataTable::CreateInstance() {
    return (gcnew NewDataSet::BasicDirectionDataTable());
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::InitVars() {
    this->columntype = __super::Columns[L"type"];
    this->columnmaxAngleDifference = __super::Columns[L"maxAngleDifference"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::InitClass() {
    this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columntype);
    this->columnmaxAngleDifference = (gcnew ::System::Data::DataColumn(L"maxAngleDifference", ::System::Single::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxAngleDifference);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columntype->AllowDBNull = false;
    this->columntype->Namespace = L"";
    this->columnmaxAngleDifference->Namespace = L"";
    this->columnmaxAngleDifference->DefaultValue = static_cast<System::Single>(45);
}

inline NewDataSet::BasicDirectionRow^  NewDataSet::BasicDirectionDataTable::NewBasicDirectionRow() {
    return (cli::safe_cast<NewDataSet::BasicDirectionRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::BasicDirectionDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::BasicDirectionRow(builder));
}

inline ::System::Type^  NewDataSet::BasicDirectionDataTable::GetRowType() {
    return NewDataSet::BasicDirectionRow::typeid;
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->BasicDirectionRowChanged(this, (gcnew NewDataSet::BasicDirectionRowChangeEvent((cli::safe_cast<NewDataSet::BasicDirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->BasicDirectionRowChanging(this, (gcnew NewDataSet::BasicDirectionRowChangeEvent((cli::safe_cast<NewDataSet::BasicDirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->BasicDirectionRowDeleted(this, (gcnew NewDataSet::BasicDirectionRowChangeEvent((cli::safe_cast<NewDataSet::BasicDirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->BasicDirectionRowDeleting(this, (gcnew NewDataSet::BasicDirectionRowChangeEvent((cli::safe_cast<NewDataSet::BasicDirectionRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicDirectionDataTable::RemoveBasicDirectionRow(NewDataSet::BasicDirectionRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::BasicDirectionDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"BasicDirectionDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::SpeedDataTable::SpeedDataTable() {
    this->TableName = L"Speed";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::SpeedDataTable::SpeedDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::SpeedDataTable::SpeedDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::SpeedDataTable::minColumn::get() {
    return this->columnmin;
}

inline ::System::Data::DataColumn^  NewDataSet::SpeedDataTable::maxColumn::get() {
    return this->columnmax;
}

inline ::System::Data::DataColumn^  NewDataSet::SpeedDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::SpeedDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::SpeedRow^  NewDataSet::SpeedDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::SpeedRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::SpeedDataTable::AddSpeedRow(NewDataSet::SpeedRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::SpeedRow^  NewDataSet::SpeedDataTable::AddSpeedRow(System::Single min, System::Single max, NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Speed) {
    NewDataSet::SpeedRow^  rowSpeedRow = (cli::safe_cast<NewDataSet::SpeedRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(3) {min, max, nullptr};
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_Speed != nullptr) {
        columnValuesArray[2] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_Speed[6];
    }
    rowSpeedRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowSpeedRow);
    return rowSpeedRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::SpeedDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::SpeedDataTable::Clone() {
    NewDataSet::SpeedDataTable^  cln = (cli::safe_cast<NewDataSet::SpeedDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::SpeedDataTable::CreateInstance() {
    return (gcnew NewDataSet::SpeedDataTable());
}

inline ::System::Void NewDataSet::SpeedDataTable::InitVars() {
    this->columnmin = __super::Columns[L"min"];
    this->columnmax = __super::Columns[L"max"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::SpeedDataTable::InitClass() {
    this->columnmin = (gcnew ::System::Data::DataColumn(L"min", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmin);
    this->columnmax = (gcnew ::System::Data::DataColumn(L"max", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmax);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnmin->Namespace = L"";
    this->columnmax->Namespace = L"";
}

inline NewDataSet::SpeedRow^  NewDataSet::SpeedDataTable::NewSpeedRow() {
    return (cli::safe_cast<NewDataSet::SpeedRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::SpeedDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::SpeedRow(builder));
}

inline ::System::Type^  NewDataSet::SpeedDataTable::GetRowType() {
    return NewDataSet::SpeedRow::typeid;
}

inline ::System::Void NewDataSet::SpeedDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->SpeedRowChanged(this, (gcnew NewDataSet::SpeedRowChangeEvent((cli::safe_cast<NewDataSet::SpeedRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::SpeedDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->SpeedRowChanging(this, (gcnew NewDataSet::SpeedRowChangeEvent((cli::safe_cast<NewDataSet::SpeedRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::SpeedDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->SpeedRowDeleted(this, (gcnew NewDataSet::SpeedRowChangeEvent((cli::safe_cast<NewDataSet::SpeedRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::SpeedDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->SpeedRowDeleting(this, (gcnew NewDataSet::SpeedRowChangeEvent((cli::safe_cast<NewDataSet::SpeedRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::SpeedDataTable::RemoveSpeedRow(NewDataSet::SpeedRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::SpeedDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"SpeedDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::LengthDataTable::LengthDataTable() {
    this->TableName = L"Length";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::LengthDataTable::LengthDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::LengthDataTable::LengthDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::LengthDataTable::minColumn::get() {
    return this->columnmin;
}

inline ::System::Data::DataColumn^  NewDataSet::LengthDataTable::maxColumn::get() {
    return this->columnmax;
}

inline ::System::Data::DataColumn^  NewDataSet::LengthDataTable::measuringUnitColumn::get() {
    return this->columnmeasuringUnit;
}

inline ::System::Data::DataColumn^  NewDataSet::LengthDataTable::LinearMovementRecognizer_IdColumn::get() {
    return this->columnLinearMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::LengthDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::LengthRow^  NewDataSet::LengthDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::LengthRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::LengthDataTable::AddLengthRow(NewDataSet::LengthRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::LengthRow^  NewDataSet::LengthDataTable::AddLengthRow(System::Single min, System::Single max, System::String^  measuringUnit, 
            NewDataSet::LinearMovementRecognizerRow^  parentLinearMovementRecognizerRowByLinearMovementRecognizer_Length) {
    NewDataSet::LengthRow^  rowLengthRow = (cli::safe_cast<NewDataSet::LengthRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {min, max, measuringUnit, 
        nullptr};
    if (parentLinearMovementRecognizerRowByLinearMovementRecognizer_Length != nullptr) {
        columnValuesArray[3] = parentLinearMovementRecognizerRowByLinearMovementRecognizer_Length[6];
    }
    rowLengthRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowLengthRow);
    return rowLengthRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::LengthDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::LengthDataTable::Clone() {
    NewDataSet::LengthDataTable^  cln = (cli::safe_cast<NewDataSet::LengthDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::LengthDataTable::CreateInstance() {
    return (gcnew NewDataSet::LengthDataTable());
}

inline ::System::Void NewDataSet::LengthDataTable::InitVars() {
    this->columnmin = __super::Columns[L"min"];
    this->columnmax = __super::Columns[L"max"];
    this->columnmeasuringUnit = __super::Columns[L"measuringUnit"];
    this->columnLinearMovementRecognizer_Id = __super::Columns[L"LinearMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::LengthDataTable::InitClass() {
    this->columnmin = (gcnew ::System::Data::DataColumn(L"min", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmin);
    this->columnmax = (gcnew ::System::Data::DataColumn(L"max", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmax);
    this->columnmeasuringUnit = (gcnew ::System::Data::DataColumn(L"measuringUnit", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmeasuringUnit);
    this->columnLinearMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"LinearMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnLinearMovementRecognizer_Id);
    this->columnmin->Namespace = L"";
    this->columnmax->Namespace = L"";
    this->columnmeasuringUnit->Namespace = L"";
    this->columnmeasuringUnit->DefaultValue = (cli::safe_cast<System::String^  >(L"millimeter"));
}

inline NewDataSet::LengthRow^  NewDataSet::LengthDataTable::NewLengthRow() {
    return (cli::safe_cast<NewDataSet::LengthRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::LengthDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::LengthRow(builder));
}

inline ::System::Type^  NewDataSet::LengthDataTable::GetRowType() {
    return NewDataSet::LengthRow::typeid;
}

inline ::System::Void NewDataSet::LengthDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->LengthRowChanged(this, (gcnew NewDataSet::LengthRowChangeEvent((cli::safe_cast<NewDataSet::LengthRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LengthDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->LengthRowChanging(this, (gcnew NewDataSet::LengthRowChangeEvent((cli::safe_cast<NewDataSet::LengthRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LengthDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->LengthRowDeleted(this, (gcnew NewDataSet::LengthRowChangeEvent((cli::safe_cast<NewDataSet::LengthRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LengthDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->LengthRowDeleting(this, (gcnew NewDataSet::LengthRowChangeEvent((cli::safe_cast<NewDataSet::LengthRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::LengthDataTable::RemoveLengthRow(NewDataSet::LengthRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::LengthDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"LengthDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::AngularMovementRecognizerDataTable::AngularMovementRecognizerDataTable() {
    this->TableName = L"AngularMovementRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::AngularMovementRecognizerDataTable::AngularMovementRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::AngularMovementRecognizerDataTable::AngularMovementRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::visibilityColumn::get() {
    return this->columnvisibility;
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::useLocalOrientationsColumn::get() {
    return this->columnuseLocalOrientations;
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::AngularMovementRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::AngularMovementRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::AngularMovementRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::AddAngularMovementRecognizerRow(NewDataSet::AngularMovementRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::AngularMovementRecognizerDataTable::AddAngularMovementRecognizerRow(
            System::String^  name, 
            System::String^  visibility, 
            System::String^  minConfidence, 
            System::Boolean useLocalOrientations, 
            System::Boolean useFilteredData, 
            NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_AngularMovementRecognizer) {
    NewDataSet::AngularMovementRecognizerRow^  rowAngularMovementRecognizerRow = (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(7) {name, visibility, minConfidence, 
        useLocalOrientations, useFilteredData, nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_AngularMovementRecognizer != nullptr) {
        columnValuesArray[6] = parentFubiRecognizersRowByFubiRecognizers_AngularMovementRecognizer[2];
    }
    rowAngularMovementRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowAngularMovementRecognizerRow);
    return rowAngularMovementRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::AngularMovementRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::AngularMovementRecognizerDataTable::Clone() {
    NewDataSet::AngularMovementRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::AngularMovementRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::AngularMovementRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::AngularMovementRecognizerDataTable());
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnvisibility = __super::Columns[L"visibility"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseLocalOrientations = __super::Columns[L"useLocalOrientations"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnvisibility = (gcnew ::System::Data::DataColumn(L"visibility", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnvisibility);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseLocalOrientations = (gcnew ::System::Data::DataColumn(L"useLocalOrientations", ::System::Boolean::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseLocalOrientations);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnAngularMovementRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnvisibility->Namespace = L"";
    this->columnvisibility->DefaultValue = (cli::safe_cast<System::String^  >(L"visible"));
    this->columnminConfidence->Namespace = L"";
    this->columnuseLocalOrientations->Namespace = L"";
    this->columnuseLocalOrientations->DefaultValue = static_cast<System::Boolean>(true);
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnAngularMovementRecognizer_Id->AutoIncrement = true;
    this->columnAngularMovementRecognizer_Id->AllowDBNull = false;
    this->columnAngularMovementRecognizer_Id->Unique = true;
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::AngularMovementRecognizerDataTable::NewAngularMovementRecognizerRow() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::AngularMovementRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::AngularMovementRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::AngularMovementRecognizerDataTable::GetRowType() {
    return NewDataSet::AngularMovementRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->AngularMovementRecognizerRowChanged(this, (gcnew NewDataSet::AngularMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->AngularMovementRecognizerRowChanging(this, (gcnew NewDataSet::AngularMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->AngularMovementRecognizerRowDeleted(this, (gcnew NewDataSet::AngularMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->AngularMovementRecognizerRowDeleting(this, (gcnew NewDataSet::AngularMovementRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AngularMovementRecognizerDataTable::RemoveAngularMovementRecognizerRow(NewDataSet::AngularMovementRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AngularMovementRecognizerDataTable::GetTypedTableSchema(
            ::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"AngularMovementRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MaxAngularVelocityDataTable::MaxAngularVelocityDataTable() {
    this->TableName = L"MaxAngularVelocity";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MaxAngularVelocityDataTable::MaxAngularVelocityDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MaxAngularVelocityDataTable::MaxAngularVelocityDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MaxAngularVelocityDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxAngularVelocityDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxAngularVelocityDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::MaxAngularVelocityDataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MaxAngularVelocityDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MaxAngularVelocityRow^  NewDataSet::MaxAngularVelocityDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::AddMaxAngularVelocityRow(NewDataSet::MaxAngularVelocityRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MaxAngularVelocityRow^  NewDataSet::MaxAngularVelocityDataTable::AddMaxAngularVelocityRow(System::Single x, 
            System::Single y, System::Single z, NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_MaxAngularVelocity) {
    NewDataSet::MaxAngularVelocityRow^  rowMaxAngularVelocityRow = (cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {x, y, z, nullptr};
    if (parentAngularMovementRecognizerRowByAngularMovementRecognizer_MaxAngularVelocity != nullptr) {
        columnValuesArray[3] = parentAngularMovementRecognizerRowByAngularMovementRecognizer_MaxAngularVelocity[5];
    }
    rowMaxAngularVelocityRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMaxAngularVelocityRow);
    return rowMaxAngularVelocityRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MaxAngularVelocityDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MaxAngularVelocityDataTable::Clone() {
    NewDataSet::MaxAngularVelocityDataTable^  cln = (cli::safe_cast<NewDataSet::MaxAngularVelocityDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MaxAngularVelocityDataTable::CreateInstance() {
    return (gcnew NewDataSet::MaxAngularVelocityDataTable());
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columny->Namespace = L"";
    this->columnz->Namespace = L"";
}

inline NewDataSet::MaxAngularVelocityRow^  NewDataSet::MaxAngularVelocityDataTable::NewMaxAngularVelocityRow() {
    return (cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MaxAngularVelocityDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MaxAngularVelocityRow(builder));
}

inline ::System::Type^  NewDataSet::MaxAngularVelocityDataTable::GetRowType() {
    return NewDataSet::MaxAngularVelocityRow::typeid;
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MaxAngularVelocityRowChanged(this, (gcnew NewDataSet::MaxAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MaxAngularVelocityRowChanging(this, (gcnew NewDataSet::MaxAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MaxAngularVelocityRowDeleted(this, (gcnew NewDataSet::MaxAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MaxAngularVelocityRowDeleting(this, (gcnew NewDataSet::MaxAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MaxAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MaxAngularVelocityDataTable::RemoveMaxAngularVelocityRow(NewDataSet::MaxAngularVelocityRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MaxAngularVelocityDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MaxAngularVelocityDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::MinAngularVelocityDataTable::MinAngularVelocityDataTable() {
    this->TableName = L"MinAngularVelocity";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::MinAngularVelocityDataTable::MinAngularVelocityDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::MinAngularVelocityDataTable::MinAngularVelocityDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::MinAngularVelocityDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::MinAngularVelocityDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::MinAngularVelocityDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::MinAngularVelocityDataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::MinAngularVelocityDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::MinAngularVelocityRow^  NewDataSet::MinAngularVelocityDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::AddMinAngularVelocityRow(NewDataSet::MinAngularVelocityRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::MinAngularVelocityRow^  NewDataSet::MinAngularVelocityDataTable::AddMinAngularVelocityRow(System::Single x, 
            System::Single y, System::Single z, NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_MinAngularVelocity) {
    NewDataSet::MinAngularVelocityRow^  rowMinAngularVelocityRow = (cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {x, y, z, nullptr};
    if (parentAngularMovementRecognizerRowByAngularMovementRecognizer_MinAngularVelocity != nullptr) {
        columnValuesArray[3] = parentAngularMovementRecognizerRowByAngularMovementRecognizer_MinAngularVelocity[5];
    }
    rowMinAngularVelocityRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowMinAngularVelocityRow);
    return rowMinAngularVelocityRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::MinAngularVelocityDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::MinAngularVelocityDataTable::Clone() {
    NewDataSet::MinAngularVelocityDataTable^  cln = (cli::safe_cast<NewDataSet::MinAngularVelocityDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::MinAngularVelocityDataTable::CreateInstance() {
    return (gcnew NewDataSet::MinAngularVelocityDataTable());
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columny->Namespace = L"";
    this->columnz->Namespace = L"";
}

inline NewDataSet::MinAngularVelocityRow^  NewDataSet::MinAngularVelocityDataTable::NewMinAngularVelocityRow() {
    return (cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::MinAngularVelocityDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::MinAngularVelocityRow(builder));
}

inline ::System::Type^  NewDataSet::MinAngularVelocityDataTable::GetRowType() {
    return NewDataSet::MinAngularVelocityRow::typeid;
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->MinAngularVelocityRowChanged(this, (gcnew NewDataSet::MinAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->MinAngularVelocityRowChanging(this, (gcnew NewDataSet::MinAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->MinAngularVelocityRowDeleted(this, (gcnew NewDataSet::MinAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->MinAngularVelocityRowDeleting(this, (gcnew NewDataSet::MinAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::MinAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::MinAngularVelocityDataTable::RemoveMinAngularVelocityRow(NewDataSet::MinAngularVelocityRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::MinAngularVelocityDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"MinAngularVelocityDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::BasicAngularVelocityDataTable::BasicAngularVelocityDataTable() {
    this->TableName = L"BasicAngularVelocity";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::BasicAngularVelocityDataTable::BasicAngularVelocityDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::BasicAngularVelocityDataTable::BasicAngularVelocityDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::BasicAngularVelocityDataTable::typeColumn::get() {
    return this->columntype;
}

inline ::System::Data::DataColumn^  NewDataSet::BasicAngularVelocityDataTable::minColumn::get() {
    return this->columnmin;
}

inline ::System::Data::DataColumn^  NewDataSet::BasicAngularVelocityDataTable::maxColumn::get() {
    return this->columnmax;
}

inline ::System::Data::DataColumn^  NewDataSet::BasicAngularVelocityDataTable::AngularMovementRecognizer_IdColumn::get() {
    return this->columnAngularMovementRecognizer_Id;
}

inline ::System::Int32 NewDataSet::BasicAngularVelocityDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::BasicAngularVelocityRow^  NewDataSet::BasicAngularVelocityDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::AddBasicAngularVelocityRow(NewDataSet::BasicAngularVelocityRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::BasicAngularVelocityRow^  NewDataSet::BasicAngularVelocityDataTable::AddBasicAngularVelocityRow(System::String^  type, 
            System::Single min, System::Single max, NewDataSet::AngularMovementRecognizerRow^  parentAngularMovementRecognizerRowByAngularMovementRecognizer_BasicAngularVelocity) {
    NewDataSet::BasicAngularVelocityRow^  rowBasicAngularVelocityRow = (cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {type, min, max, nullptr};
    if (parentAngularMovementRecognizerRowByAngularMovementRecognizer_BasicAngularVelocity != nullptr) {
        columnValuesArray[3] = parentAngularMovementRecognizerRowByAngularMovementRecognizer_BasicAngularVelocity[5];
    }
    rowBasicAngularVelocityRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowBasicAngularVelocityRow);
    return rowBasicAngularVelocityRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::BasicAngularVelocityDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::BasicAngularVelocityDataTable::Clone() {
    NewDataSet::BasicAngularVelocityDataTable^  cln = (cli::safe_cast<NewDataSet::BasicAngularVelocityDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::BasicAngularVelocityDataTable::CreateInstance() {
    return (gcnew NewDataSet::BasicAngularVelocityDataTable());
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::InitVars() {
    this->columntype = __super::Columns[L"type"];
    this->columnmin = __super::Columns[L"min"];
    this->columnmax = __super::Columns[L"max"];
    this->columnAngularMovementRecognizer_Id = __super::Columns[L"AngularMovementRecognizer_Id"];
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::InitClass() {
    this->columntype = (gcnew ::System::Data::DataColumn(L"type", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columntype);
    this->columnmin = (gcnew ::System::Data::DataColumn(L"min", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmin);
    this->columnmax = (gcnew ::System::Data::DataColumn(L"max", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmax);
    this->columnAngularMovementRecognizer_Id = (gcnew ::System::Data::DataColumn(L"AngularMovementRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAngularMovementRecognizer_Id);
    this->columntype->AllowDBNull = false;
    this->columntype->Namespace = L"";
    this->columnmin->Namespace = L"";
    this->columnmax->Namespace = L"";
}

inline NewDataSet::BasicAngularVelocityRow^  NewDataSet::BasicAngularVelocityDataTable::NewBasicAngularVelocityRow() {
    return (cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::BasicAngularVelocityDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::BasicAngularVelocityRow(builder));
}

inline ::System::Type^  NewDataSet::BasicAngularVelocityDataTable::GetRowType() {
    return NewDataSet::BasicAngularVelocityRow::typeid;
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->BasicAngularVelocityRowChanged(this, (gcnew NewDataSet::BasicAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->BasicAngularVelocityRowChanging(this, (gcnew NewDataSet::BasicAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->BasicAngularVelocityRowDeleted(this, (gcnew NewDataSet::BasicAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->BasicAngularVelocityRowDeleting(this, (gcnew NewDataSet::BasicAngularVelocityRowChangeEvent((cli::safe_cast<NewDataSet::BasicAngularVelocityRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::BasicAngularVelocityDataTable::RemoveBasicAngularVelocityRow(NewDataSet::BasicAngularVelocityRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::BasicAngularVelocityDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"BasicAngularVelocityDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::FingerCountRecognizerDataTable::FingerCountRecognizerDataTable() {
    this->TableName = L"FingerCountRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::FingerCountRecognizerDataTable::FingerCountRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::FingerCountRecognizerDataTable::FingerCountRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountRecognizerDataTable::visibilityColumn::get() {
    return this->columnvisibility;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountRecognizerDataTable::FingerCountRecognizer_IdColumn::get() {
    return this->columnFingerCountRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::FingerCountRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::FingerCountRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::AddFingerCountRecognizerRow(NewDataSet::FingerCountRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::FingerCountRecognizerDataTable::AddFingerCountRecognizerRow(System::String^  name, 
            System::String^  visibility, System::Single minConfidence, System::Boolean useFilteredData, NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_FingerCountRecognizer) {
    NewDataSet::FingerCountRecognizerRow^  rowFingerCountRecognizerRow = (cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {name, visibility, minConfidence, 
        useFilteredData, nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_FingerCountRecognizer != nullptr) {
        columnValuesArray[5] = parentFubiRecognizersRowByFubiRecognizers_FingerCountRecognizer[2];
    }
    rowFingerCountRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowFingerCountRecognizerRow);
    return rowFingerCountRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::FingerCountRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::FingerCountRecognizerDataTable::Clone() {
    NewDataSet::FingerCountRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::FingerCountRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::FingerCountRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::FingerCountRecognizerDataTable());
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnvisibility = __super::Columns[L"visibility"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnFingerCountRecognizer_Id = __super::Columns[L"FingerCountRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnvisibility = (gcnew ::System::Data::DataColumn(L"visibility", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnvisibility);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnFingerCountRecognizer_Id = (gcnew ::System::Data::DataColumn(L"FingerCountRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFingerCountRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnFingerCountRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnvisibility->Namespace = L"";
    this->columnvisibility->DefaultValue = (cli::safe_cast<System::String^  >(L"visible"));
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnFingerCountRecognizer_Id->AutoIncrement = true;
    this->columnFingerCountRecognizer_Id->AllowDBNull = false;
    this->columnFingerCountRecognizer_Id->Unique = true;
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::FingerCountRecognizerDataTable::NewFingerCountRecognizerRow() {
    return (cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::FingerCountRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::FingerCountRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::FingerCountRecognizerDataTable::GetRowType() {
    return NewDataSet::FingerCountRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->FingerCountRecognizerRowChanged(this, (gcnew NewDataSet::FingerCountRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->FingerCountRecognizerRowChanging(this, (gcnew NewDataSet::FingerCountRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->FingerCountRecognizerRowDeleted(this, (gcnew NewDataSet::FingerCountRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->FingerCountRecognizerRowDeleting(this, (gcnew NewDataSet::FingerCountRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountRecognizerDataTable::RemoveFingerCountRecognizerRow(NewDataSet::FingerCountRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FingerCountRecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"FingerCountRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::FingerCountDataTable::FingerCountDataTable() {
    this->TableName = L"FingerCount";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::FingerCountDataTable::FingerCountDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::FingerCountDataTable::FingerCountDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountDataTable::minColumn::get() {
    return this->columnmin;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountDataTable::maxColumn::get() {
    return this->columnmax;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountDataTable::useMedianCalculationColumn::get() {
    return this->columnuseMedianCalculation;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountDataTable::medianWindowSizeColumn::get() {
    return this->columnmedianWindowSize;
}

inline ::System::Data::DataColumn^  NewDataSet::FingerCountDataTable::FingerCountRecognizer_IdColumn::get() {
    return this->columnFingerCountRecognizer_Id;
}

inline ::System::Int32 NewDataSet::FingerCountDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::FingerCountRow^  NewDataSet::FingerCountDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::FingerCountRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::FingerCountDataTable::AddFingerCountRow(NewDataSet::FingerCountRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::FingerCountRow^  NewDataSet::FingerCountDataTable::AddFingerCountRow(System::Int64 min, System::Int64 max, 
            System::Boolean useMedianCalculation, System::UInt32 medianWindowSize, NewDataSet::FingerCountRecognizerRow^  parentFingerCountRecognizerRowByFingerCountRecognizer_FingerCount) {
    NewDataSet::FingerCountRow^  rowFingerCountRow = (cli::safe_cast<NewDataSet::FingerCountRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(5) {min, max, useMedianCalculation, 
        medianWindowSize, nullptr};
    if (parentFingerCountRecognizerRowByFingerCountRecognizer_FingerCount != nullptr) {
        columnValuesArray[4] = parentFingerCountRecognizerRowByFingerCountRecognizer_FingerCount[4];
    }
    rowFingerCountRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowFingerCountRow);
    return rowFingerCountRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::FingerCountDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::FingerCountDataTable::Clone() {
    NewDataSet::FingerCountDataTable^  cln = (cli::safe_cast<NewDataSet::FingerCountDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::FingerCountDataTable::CreateInstance() {
    return (gcnew NewDataSet::FingerCountDataTable());
}

inline ::System::Void NewDataSet::FingerCountDataTable::InitVars() {
    this->columnmin = __super::Columns[L"min"];
    this->columnmax = __super::Columns[L"max"];
    this->columnuseMedianCalculation = __super::Columns[L"useMedianCalculation"];
    this->columnmedianWindowSize = __super::Columns[L"medianWindowSize"];
    this->columnFingerCountRecognizer_Id = __super::Columns[L"FingerCountRecognizer_Id"];
}

inline ::System::Void NewDataSet::FingerCountDataTable::InitClass() {
    this->columnmin = (gcnew ::System::Data::DataColumn(L"min", ::System::Int64::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmin);
    this->columnmax = (gcnew ::System::Data::DataColumn(L"max", ::System::Int64::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmax);
    this->columnuseMedianCalculation = (gcnew ::System::Data::DataColumn(L"useMedianCalculation", ::System::Boolean::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseMedianCalculation);
    this->columnmedianWindowSize = (gcnew ::System::Data::DataColumn(L"medianWindowSize", ::System::UInt32::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmedianWindowSize);
    this->columnFingerCountRecognizer_Id = (gcnew ::System::Data::DataColumn(L"FingerCountRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFingerCountRecognizer_Id);
    this->columnmin->Namespace = L"";
    this->columnmin->DefaultValue = static_cast<System::Int64>(0);
    this->columnmax->Namespace = L"";
    this->columnmax->DefaultValue = static_cast<System::Int64>(5);
    this->columnuseMedianCalculation->Namespace = L"";
    this->columnuseMedianCalculation->DefaultValue = static_cast<System::Boolean>(false);
    this->columnmedianWindowSize->Namespace = L"";
    this->columnmedianWindowSize->DefaultValue = static_cast<System::UInt32>(10);
}

inline NewDataSet::FingerCountRow^  NewDataSet::FingerCountDataTable::NewFingerCountRow() {
    return (cli::safe_cast<NewDataSet::FingerCountRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::FingerCountDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::FingerCountRow(builder));
}

inline ::System::Type^  NewDataSet::FingerCountDataTable::GetRowType() {
    return NewDataSet::FingerCountRow::typeid;
}

inline ::System::Void NewDataSet::FingerCountDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->FingerCountRowChanged(this, (gcnew NewDataSet::FingerCountRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->FingerCountRowChanging(this, (gcnew NewDataSet::FingerCountRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->FingerCountRowDeleted(this, (gcnew NewDataSet::FingerCountRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->FingerCountRowDeleting(this, (gcnew NewDataSet::FingerCountRowChangeEvent((cli::safe_cast<NewDataSet::FingerCountRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::FingerCountDataTable::RemoveFingerCountRow(NewDataSet::FingerCountRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::FingerCountDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"FingerCountDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::TemplateRecognizerDataTable::TemplateRecognizerDataTable() {
    this->TableName = L"TemplateRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::TemplateRecognizerDataTable::TemplateRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::TemplateRecognizerDataTable::TemplateRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::visibilityColumn::get() {
    return this->columnvisibility;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::useLocalTransformationsColumn::get() {
    return this->columnuseLocalTransformations;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::measuringUnitColumn::get() {
    return this->columnmeasuringUnit;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::useOrientationsColumn::get() {
    return this->columnuseOrientations;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::useDTWColumn::get() {
    return this->columnuseDTW;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::applyResamplingColumn::get() {
    return this->columnapplyResampling;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::stochasticModelColumn::get() {
    return this->columnstochasticModel;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::numGMRStatesColumn::get() {
    return this->columnnumGMRStates;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::maxDistanceColumn::get() {
    return this->columnmaxDistance;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::distanceMeasureColumn::get() {
    return this->columndistanceMeasure;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::maxRotationColumn::get() {
    return this->columnmaxRotation;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::aspectInvariantColumn::get() {
    return this->columnaspectInvariant;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::TemplateRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::TemplateRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::TemplateRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::AddTemplateRecognizerRow(NewDataSet::TemplateRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::TemplateRecognizerDataTable::AddTemplateRecognizerRow(
            System::String^  name, 
            System::String^  visibility, 
            System::Single minConfidence, 
            System::Boolean useFilteredData, 
            System::Boolean useLocalTransformations, 
            System::String^  measuringUnit, 
            System::Boolean useOrientations, 
            System::Boolean useDTW, 
            System::Boolean applyResampling, 
            System::String^  stochasticModel, 
            System::UInt32 numGMRStates, 
            System::Single maxDistance, 
            System::String^  distanceMeasure, 
            System::Single maxRotation, 
            System::Boolean aspectInvariant, 
            NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_TemplateRecognizer) {
    NewDataSet::TemplateRecognizerRow^  rowTemplateRecognizerRow = (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(17) {name, visibility, minConfidence, 
        useFilteredData, useLocalTransformations, measuringUnit, useOrientations, useDTW, applyResampling, stochasticModel, numGMRStates, 
        maxDistance, distanceMeasure, maxRotation, aspectInvariant, nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_TemplateRecognizer != nullptr) {
        columnValuesArray[16] = parentFubiRecognizersRowByFubiRecognizers_TemplateRecognizer[2];
    }
    rowTemplateRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowTemplateRecognizerRow);
    return rowTemplateRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::TemplateRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::TemplateRecognizerDataTable::Clone() {
    NewDataSet::TemplateRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::TemplateRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::TemplateRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::TemplateRecognizerDataTable());
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnvisibility = __super::Columns[L"visibility"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnuseLocalTransformations = __super::Columns[L"useLocalTransformations"];
    this->columnmeasuringUnit = __super::Columns[L"measuringUnit"];
    this->columnuseOrientations = __super::Columns[L"useOrientations"];
    this->columnuseDTW = __super::Columns[L"useDTW"];
    this->columnapplyResampling = __super::Columns[L"applyResampling"];
    this->columnstochasticModel = __super::Columns[L"stochasticModel"];
    this->columnnumGMRStates = __super::Columns[L"numGMRStates"];
    this->columnmaxDistance = __super::Columns[L"maxDistance"];
    this->columndistanceMeasure = __super::Columns[L"distanceMeasure"];
    this->columnmaxRotation = __super::Columns[L"maxRotation"];
    this->columnaspectInvariant = __super::Columns[L"aspectInvariant"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnvisibility = (gcnew ::System::Data::DataColumn(L"visibility", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnvisibility);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnuseLocalTransformations = (gcnew ::System::Data::DataColumn(L"useLocalTransformations", ::System::Boolean::typeid, 
        nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseLocalTransformations);
    this->columnmeasuringUnit = (gcnew ::System::Data::DataColumn(L"measuringUnit", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmeasuringUnit);
    this->columnuseOrientations = (gcnew ::System::Data::DataColumn(L"useOrientations", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseOrientations);
    this->columnuseDTW = (gcnew ::System::Data::DataColumn(L"useDTW", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseDTW);
    this->columnapplyResampling = (gcnew ::System::Data::DataColumn(L"applyResampling", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnapplyResampling);
    this->columnstochasticModel = (gcnew ::System::Data::DataColumn(L"stochasticModel", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnstochasticModel);
    this->columnnumGMRStates = (gcnew ::System::Data::DataColumn(L"numGMRStates", ::System::UInt32::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnnumGMRStates);
    this->columnmaxDistance = (gcnew ::System::Data::DataColumn(L"maxDistance", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxDistance);
    this->columndistanceMeasure = (gcnew ::System::Data::DataColumn(L"distanceMeasure", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columndistanceMeasure);
    this->columnmaxRotation = (gcnew ::System::Data::DataColumn(L"maxRotation", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxRotation);
    this->columnaspectInvariant = (gcnew ::System::Data::DataColumn(L"aspectInvariant", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnaspectInvariant);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnTemplateRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnvisibility->Namespace = L"";
    this->columnvisibility->DefaultValue = (cli::safe_cast<System::String^  >(L"visible"));
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnuseLocalTransformations->Namespace = L"";
    this->columnuseLocalTransformations->DefaultValue = static_cast<System::Boolean>(false);
    this->columnmeasuringUnit->Namespace = L"";
    this->columnmeasuringUnit->DefaultValue = (cli::safe_cast<System::String^  >(L"millimeter"));
    this->columnuseOrientations->Namespace = L"";
    this->columnuseOrientations->DefaultValue = static_cast<System::Boolean>(false);
    this->columnuseDTW->Namespace = L"";
    this->columnuseDTW->DefaultValue = static_cast<System::Boolean>(true);
    this->columnapplyResampling->Namespace = L"";
    this->columnapplyResampling->DefaultValue = static_cast<System::Boolean>(false);
    this->columnstochasticModel->Namespace = L"";
    this->columnstochasticModel->DefaultValue = (cli::safe_cast<System::String^  >(L"GMR"));
    this->columnnumGMRStates->Namespace = L"";
    this->columnnumGMRStates->DefaultValue = static_cast<System::UInt32>(5);
    this->columnmaxDistance->AllowDBNull = false;
    this->columnmaxDistance->Namespace = L"";
    this->columndistanceMeasure->Namespace = L"";
    this->columndistanceMeasure->DefaultValue = (cli::safe_cast<System::String^  >(L"euclidean"));
    this->columnmaxRotation->Namespace = L"";
    this->columnmaxRotation->DefaultValue = static_cast<System::Single>(45);
    this->columnaspectInvariant->Namespace = L"";
    this->columnaspectInvariant->DefaultValue = static_cast<System::Boolean>(false);
    this->columnTemplateRecognizer_Id->AutoIncrement = true;
    this->columnTemplateRecognizer_Id->AllowDBNull = false;
    this->columnTemplateRecognizer_Id->Unique = true;
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::TemplateRecognizerDataTable::NewTemplateRecognizerRow() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::TemplateRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::TemplateRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::TemplateRecognizerDataTable::GetRowType() {
    return NewDataSet::TemplateRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->TemplateRecognizerRowChanged(this, (gcnew NewDataSet::TemplateRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->TemplateRecognizerRowChanging(this, (gcnew NewDataSet::TemplateRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->TemplateRecognizerRowDeleted(this, (gcnew NewDataSet::TemplateRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->TemplateRecognizerRowDeleting(this, (gcnew NewDataSet::TemplateRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TemplateRecognizerDataTable::RemoveTemplateRecognizerRow(NewDataSet::TemplateRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::TemplateRecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"TemplateRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::TrainingDataDataTable::TrainingDataDataTable() {
    this->TableName = L"TrainingData";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::TrainingDataDataTable::TrainingDataDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::TrainingDataDataTable::TrainingDataDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::TrainingDataDataTable::fileColumn::get() {
    return this->columnfile;
}

inline ::System::Data::DataColumn^  NewDataSet::TrainingDataDataTable::startColumn::get() {
    return this->columnstart;
}

inline ::System::Data::DataColumn^  NewDataSet::TrainingDataDataTable::endColumn::get() {
    return this->columnend;
}

inline ::System::Data::DataColumn^  NewDataSet::TrainingDataDataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Int32 NewDataSet::TrainingDataDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::TrainingDataRow^  NewDataSet::TrainingDataDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::TrainingDataRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::TrainingDataDataTable::AddTrainingDataRow(NewDataSet::TrainingDataRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::TrainingDataRow^  NewDataSet::TrainingDataDataTable::AddTrainingDataRow(System::String^  file, System::Int32 start, 
            System::Int32 end, NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_TrainingData) {
    NewDataSet::TrainingDataRow^  rowTrainingDataRow = (cli::safe_cast<NewDataSet::TrainingDataRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {file, start, end, nullptr};
    if (parentTemplateRecognizerRowByTemplateRecognizer_TrainingData != nullptr) {
        columnValuesArray[3] = parentTemplateRecognizerRowByTemplateRecognizer_TrainingData[15];
    }
    rowTrainingDataRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowTrainingDataRow);
    return rowTrainingDataRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::TrainingDataDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::TrainingDataDataTable::Clone() {
    NewDataSet::TrainingDataDataTable^  cln = (cli::safe_cast<NewDataSet::TrainingDataDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::TrainingDataDataTable::CreateInstance() {
    return (gcnew NewDataSet::TrainingDataDataTable());
}

inline ::System::Void NewDataSet::TrainingDataDataTable::InitVars() {
    this->columnfile = __super::Columns[L"file"];
    this->columnstart = __super::Columns[L"start"];
    this->columnend = __super::Columns[L"end"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
}

inline ::System::Void NewDataSet::TrainingDataDataTable::InitClass() {
    this->columnfile = (gcnew ::System::Data::DataColumn(L"file", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnfile);
    this->columnstart = (gcnew ::System::Data::DataColumn(L"start", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnstart);
    this->columnend = (gcnew ::System::Data::DataColumn(L"end", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnend);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnfile->Namespace = L"";
    this->columnstart->Namespace = L"";
    this->columnstart->DefaultValue = static_cast<System::Int32>(0);
    this->columnend->Namespace = L"";
    this->columnend->DefaultValue = static_cast<System::Int32>(-1);
}

inline NewDataSet::TrainingDataRow^  NewDataSet::TrainingDataDataTable::NewTrainingDataRow() {
    return (cli::safe_cast<NewDataSet::TrainingDataRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::TrainingDataDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::TrainingDataRow(builder));
}

inline ::System::Type^  NewDataSet::TrainingDataDataTable::GetRowType() {
    return NewDataSet::TrainingDataRow::typeid;
}

inline ::System::Void NewDataSet::TrainingDataDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->TrainingDataRowChanged(this, (gcnew NewDataSet::TrainingDataRowChangeEvent((cli::safe_cast<NewDataSet::TrainingDataRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TrainingDataDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->TrainingDataRowChanging(this, (gcnew NewDataSet::TrainingDataRowChangeEvent((cli::safe_cast<NewDataSet::TrainingDataRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TrainingDataDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->TrainingDataRowDeleted(this, (gcnew NewDataSet::TrainingDataRowChangeEvent((cli::safe_cast<NewDataSet::TrainingDataRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TrainingDataDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->TrainingDataRowDeleting(this, (gcnew NewDataSet::TrainingDataRowChangeEvent((cli::safe_cast<NewDataSet::TrainingDataRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::TrainingDataDataTable::RemoveTrainingDataRow(NewDataSet::TrainingDataRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::TrainingDataDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"TrainingDataDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::IgnoreAxesDataTable::IgnoreAxesDataTable() {
    this->TableName = L"IgnoreAxes";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::IgnoreAxesDataTable::IgnoreAxesDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::IgnoreAxesDataTable::IgnoreAxesDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::IgnoreAxesDataTable::xColumn::get() {
    return this->columnx;
}

inline ::System::Data::DataColumn^  NewDataSet::IgnoreAxesDataTable::yColumn::get() {
    return this->columny;
}

inline ::System::Data::DataColumn^  NewDataSet::IgnoreAxesDataTable::zColumn::get() {
    return this->columnz;
}

inline ::System::Data::DataColumn^  NewDataSet::IgnoreAxesDataTable::TemplateRecognizer_IdColumn::get() {
    return this->columnTemplateRecognizer_Id;
}

inline ::System::Int32 NewDataSet::IgnoreAxesDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::IgnoreAxesRow^  NewDataSet::IgnoreAxesDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::AddIgnoreAxesRow(NewDataSet::IgnoreAxesRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::IgnoreAxesRow^  NewDataSet::IgnoreAxesDataTable::AddIgnoreAxesRow(System::Boolean x, System::Boolean y, 
            System::Boolean z, NewDataSet::TemplateRecognizerRow^  parentTemplateRecognizerRowByTemplateRecognizer_IgnoreAxes) {
    NewDataSet::IgnoreAxesRow^  rowIgnoreAxesRow = (cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {x, y, z, nullptr};
    if (parentTemplateRecognizerRowByTemplateRecognizer_IgnoreAxes != nullptr) {
        columnValuesArray[3] = parentTemplateRecognizerRowByTemplateRecognizer_IgnoreAxes[15];
    }
    rowIgnoreAxesRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowIgnoreAxesRow);
    return rowIgnoreAxesRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::IgnoreAxesDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::IgnoreAxesDataTable::Clone() {
    NewDataSet::IgnoreAxesDataTable^  cln = (cli::safe_cast<NewDataSet::IgnoreAxesDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::IgnoreAxesDataTable::CreateInstance() {
    return (gcnew NewDataSet::IgnoreAxesDataTable());
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::InitVars() {
    this->columnx = __super::Columns[L"x"];
    this->columny = __super::Columns[L"y"];
    this->columnz = __super::Columns[L"z"];
    this->columnTemplateRecognizer_Id = __super::Columns[L"TemplateRecognizer_Id"];
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::InitClass() {
    this->columnx = (gcnew ::System::Data::DataColumn(L"x", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnx);
    this->columny = (gcnew ::System::Data::DataColumn(L"y", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columny);
    this->columnz = (gcnew ::System::Data::DataColumn(L"z", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnz);
    this->columnTemplateRecognizer_Id = (gcnew ::System::Data::DataColumn(L"TemplateRecognizer_Id", ::System::Int32::typeid, nullptr, 
        ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnTemplateRecognizer_Id);
    this->columnx->Namespace = L"";
    this->columnx->DefaultValue = static_cast<System::Boolean>(false);
    this->columny->Namespace = L"";
    this->columny->DefaultValue = static_cast<System::Boolean>(false);
    this->columnz->Namespace = L"";
    this->columnz->DefaultValue = static_cast<System::Boolean>(false);
}

inline NewDataSet::IgnoreAxesRow^  NewDataSet::IgnoreAxesDataTable::NewIgnoreAxesRow() {
    return (cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::IgnoreAxesDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::IgnoreAxesRow(builder));
}

inline ::System::Type^  NewDataSet::IgnoreAxesDataTable::GetRowType() {
    return NewDataSet::IgnoreAxesRow::typeid;
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->IgnoreAxesRowChanged(this, (gcnew NewDataSet::IgnoreAxesRowChangeEvent((cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->IgnoreAxesRowChanging(this, (gcnew NewDataSet::IgnoreAxesRowChangeEvent((cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->IgnoreAxesRowDeleted(this, (gcnew NewDataSet::IgnoreAxesRowChangeEvent((cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->IgnoreAxesRowDeleting(this, (gcnew NewDataSet::IgnoreAxesRowChangeEvent((cli::safe_cast<NewDataSet::IgnoreAxesRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::IgnoreAxesDataTable::RemoveIgnoreAxesRow(NewDataSet::IgnoreAxesRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::IgnoreAxesDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"IgnoreAxesDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::CombinationRecognizerDataTable::CombinationRecognizerDataTable() {
    this->TableName = L"CombinationRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::CombinationRecognizerDataTable::CombinationRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::CombinationRecognizerDataTable::CombinationRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::CombinationRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::CombinationRecognizerDataTable::waitUntilLastStateRecognizersStopColumn::get() {
    return this->columnwaitUntilLastStateRecognizersStop;
}

inline ::System::Data::DataColumn^  NewDataSet::CombinationRecognizerDataTable::CombinationRecognizer_IdColumn::get() {
    return this->columnCombinationRecognizer_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::CombinationRecognizerDataTable::FubiRecognizers_IdColumn::get() {
    return this->columnFubiRecognizers_Id;
}

inline ::System::Int32 NewDataSet::CombinationRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::CombinationRecognizerRow^  NewDataSet::CombinationRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::AddCombinationRecognizerRow(NewDataSet::CombinationRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::CombinationRecognizerRow^  NewDataSet::CombinationRecognizerDataTable::AddCombinationRecognizerRow(System::String^  name, 
            System::Boolean waitUntilLastStateRecognizersStop, NewDataSet::FubiRecognizersRow^  parentFubiRecognizersRowByFubiRecognizers_CombinationRecognizer) {
    NewDataSet::CombinationRecognizerRow^  rowCombinationRecognizerRow = (cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(4) {name, waitUntilLastStateRecognizersStop, 
        nullptr, nullptr};
    if (parentFubiRecognizersRowByFubiRecognizers_CombinationRecognizer != nullptr) {
        columnValuesArray[3] = parentFubiRecognizersRowByFubiRecognizers_CombinationRecognizer[2];
    }
    rowCombinationRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowCombinationRecognizerRow);
    return rowCombinationRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::CombinationRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::CombinationRecognizerDataTable::Clone() {
    NewDataSet::CombinationRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::CombinationRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::CombinationRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::CombinationRecognizerDataTable());
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnwaitUntilLastStateRecognizersStop = __super::Columns[L"waitUntilLastStateRecognizersStop"];
    this->columnCombinationRecognizer_Id = __super::Columns[L"CombinationRecognizer_Id"];
    this->columnFubiRecognizers_Id = __super::Columns[L"FubiRecognizers_Id"];
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnwaitUntilLastStateRecognizersStop = (gcnew ::System::Data::DataColumn(L"waitUntilLastStateRecognizersStop", ::System::Boolean::typeid, 
        nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnwaitUntilLastStateRecognizersStop);
    this->columnCombinationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"CombinationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnCombinationRecognizer_Id);
    this->columnFubiRecognizers_Id = (gcnew ::System::Data::DataColumn(L"FubiRecognizers_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnFubiRecognizers_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnCombinationRecognizer_Id}, 
            true)));
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnwaitUntilLastStateRecognizersStop->Namespace = L"";
    this->columnwaitUntilLastStateRecognizersStop->DefaultValue = static_cast<System::Boolean>(false);
    this->columnCombinationRecognizer_Id->AutoIncrement = true;
    this->columnCombinationRecognizer_Id->AllowDBNull = false;
    this->columnCombinationRecognizer_Id->Unique = true;
}

inline NewDataSet::CombinationRecognizerRow^  NewDataSet::CombinationRecognizerDataTable::NewCombinationRecognizerRow() {
    return (cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::CombinationRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::CombinationRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::CombinationRecognizerDataTable::GetRowType() {
    return NewDataSet::CombinationRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->CombinationRecognizerRowChanged(this, (gcnew NewDataSet::CombinationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->CombinationRecognizerRowChanging(this, (gcnew NewDataSet::CombinationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->CombinationRecognizerRowDeleted(this, (gcnew NewDataSet::CombinationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->CombinationRecognizerRowDeleting(this, (gcnew NewDataSet::CombinationRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::CombinationRecognizerDataTable::RemoveCombinationRecognizerRow(NewDataSet::CombinationRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::CombinationRecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"CombinationRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::StateDataTable::StateDataTable() {
    this->TableName = L"State";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::StateDataTable::StateDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::StateDataTable::StateDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::minDurationColumn::get() {
    return this->columnminDuration;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::maxDurationColumn::get() {
    return this->columnmaxDuration;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::timeForTransitionColumn::get() {
    return this->columntimeForTransition;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::maxInterruptionTimeColumn::get() {
    return this->columnmaxInterruptionTime;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::noInterruptionBeforeMinDurationColumn::get() {
    return this->columnnoInterruptionBeforeMinDuration;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::onFailColumn::get() {
    return this->columnonFail;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::State_IdColumn::get() {
    return this->columnState_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::StateDataTable::CombinationRecognizer_IdColumn::get() {
    return this->columnCombinationRecognizer_Id;
}

inline ::System::Int32 NewDataSet::StateDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::StateRow^  NewDataSet::StateDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::StateRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::StateDataTable::AddStateRow(NewDataSet::StateRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::StateRow^  NewDataSet::StateDataTable::AddStateRow(
            System::Single minDuration, 
            System::Single maxDuration, 
            System::Single timeForTransition, 
            System::Single maxInterruptionTime, 
            System::Boolean noInterruptionBeforeMinDuration, 
            System::String^  onFail, 
            NewDataSet::CombinationRecognizerRow^  parentCombinationRecognizerRowByCombinationRecognizer_State) {
    NewDataSet::StateRow^  rowStateRow = (cli::safe_cast<NewDataSet::StateRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(8) {minDuration, maxDuration, 
        timeForTransition, maxInterruptionTime, noInterruptionBeforeMinDuration, onFail, nullptr, nullptr};
    if (parentCombinationRecognizerRowByCombinationRecognizer_State != nullptr) {
        columnValuesArray[7] = parentCombinationRecognizerRowByCombinationRecognizer_State[2];
    }
    rowStateRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowStateRow);
    return rowStateRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::StateDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::StateDataTable::Clone() {
    NewDataSet::StateDataTable^  cln = (cli::safe_cast<NewDataSet::StateDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::StateDataTable::CreateInstance() {
    return (gcnew NewDataSet::StateDataTable());
}

inline ::System::Void NewDataSet::StateDataTable::InitVars() {
    this->columnminDuration = __super::Columns[L"minDuration"];
    this->columnmaxDuration = __super::Columns[L"maxDuration"];
    this->columntimeForTransition = __super::Columns[L"timeForTransition"];
    this->columnmaxInterruptionTime = __super::Columns[L"maxInterruptionTime"];
    this->columnnoInterruptionBeforeMinDuration = __super::Columns[L"noInterruptionBeforeMinDuration"];
    this->columnonFail = __super::Columns[L"onFail"];
    this->columnState_Id = __super::Columns[L"State_Id"];
    this->columnCombinationRecognizer_Id = __super::Columns[L"CombinationRecognizer_Id"];
}

inline ::System::Void NewDataSet::StateDataTable::InitClass() {
    this->columnminDuration = (gcnew ::System::Data::DataColumn(L"minDuration", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminDuration);
    this->columnmaxDuration = (gcnew ::System::Data::DataColumn(L"maxDuration", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxDuration);
    this->columntimeForTransition = (gcnew ::System::Data::DataColumn(L"timeForTransition", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columntimeForTransition);
    this->columnmaxInterruptionTime = (gcnew ::System::Data::DataColumn(L"maxInterruptionTime", ::System::Single::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnmaxInterruptionTime);
    this->columnnoInterruptionBeforeMinDuration = (gcnew ::System::Data::DataColumn(L"noInterruptionBeforeMinDuration", ::System::Boolean::typeid, 
        nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnnoInterruptionBeforeMinDuration);
    this->columnonFail = (gcnew ::System::Data::DataColumn(L"onFail", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnonFail);
    this->columnState_Id = (gcnew ::System::Data::DataColumn(L"State_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnState_Id);
    this->columnCombinationRecognizer_Id = (gcnew ::System::Data::DataColumn(L"CombinationRecognizer_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnCombinationRecognizer_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnState_Id}, 
            true)));
    this->columnminDuration->Namespace = L"";
    this->columnminDuration->DefaultValue = static_cast<System::Single>(0);
    this->columnmaxDuration->Namespace = L"";
    this->columnmaxDuration->DefaultValue = static_cast<System::Single>(-1);
    this->columntimeForTransition->Namespace = L"";
    this->columntimeForTransition->DefaultValue = static_cast<System::Single>(1);
    this->columnmaxInterruptionTime->Namespace = L"";
    this->columnnoInterruptionBeforeMinDuration->Namespace = L"";
    this->columnnoInterruptionBeforeMinDuration->DefaultValue = static_cast<System::Boolean>(false);
    this->columnonFail->Namespace = L"";
    this->columnonFail->DefaultValue = (cli::safe_cast<System::String^  >(L"restart"));
    this->columnState_Id->AutoIncrement = true;
    this->columnState_Id->AllowDBNull = false;
    this->columnState_Id->Unique = true;
}

inline NewDataSet::StateRow^  NewDataSet::StateDataTable::NewStateRow() {
    return (cli::safe_cast<NewDataSet::StateRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::StateDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::StateRow(builder));
}

inline ::System::Type^  NewDataSet::StateDataTable::GetRowType() {
    return NewDataSet::StateRow::typeid;
}

inline ::System::Void NewDataSet::StateDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->StateRowChanged(this, (gcnew NewDataSet::StateRowChangeEvent((cli::safe_cast<NewDataSet::StateRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::StateDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->StateRowChanging(this, (gcnew NewDataSet::StateRowChangeEvent((cli::safe_cast<NewDataSet::StateRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::StateDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->StateRowDeleted(this, (gcnew NewDataSet::StateRowChangeEvent((cli::safe_cast<NewDataSet::StateRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::StateDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->StateRowDeleting(this, (gcnew NewDataSet::StateRowChangeEvent((cli::safe_cast<NewDataSet::StateRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::StateDataTable::RemoveStateRow(NewDataSet::StateRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::StateDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"StateDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::RecognizerDataTable::RecognizerDataTable() {
    this->TableName = L"Recognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::RecognizerDataTable::RecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::RecognizerDataTable::RecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::RecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::RecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::RecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::RecognizerDataTable::ignoreOnTrackingErrorColumn::get() {
    return this->columnignoreOnTrackingError;
}

inline ::System::Data::DataColumn^  NewDataSet::RecognizerDataTable::AlternativeRecognizers_IdColumn::get() {
    return this->columnAlternativeRecognizers_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::RecognizerDataTable::State_IdColumn::get() {
    return this->columnState_Id;
}

inline ::System::Int32 NewDataSet::RecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::RecognizerRow^  NewDataSet::RecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::RecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::RecognizerDataTable::AddRecognizerRow(NewDataSet::RecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::RecognizerRow^  NewDataSet::RecognizerDataTable::AddRecognizerRow(
            System::String^  name, 
            System::Single minConfidence, 
            System::Boolean useFilteredData, 
            System::Boolean ignoreOnTrackingError, 
            NewDataSet::AlternativeRecognizersRow^  parentAlternativeRecognizersRowByAlternativeRecognizers_Recognizer, 
            NewDataSet::StateRow^  parentStateRowByState_Recognizer) {
    NewDataSet::RecognizerRow^  rowRecognizerRow = (cli::safe_cast<NewDataSet::RecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {name, minConfidence, useFilteredData, 
        ignoreOnTrackingError, nullptr, nullptr};
    if (parentAlternativeRecognizersRowByAlternativeRecognizers_Recognizer != nullptr) {
        columnValuesArray[4] = parentAlternativeRecognizersRowByAlternativeRecognizers_Recognizer[0];
    }
    if (parentStateRowByState_Recognizer != nullptr) {
        columnValuesArray[5] = parentStateRowByState_Recognizer[6];
    }
    rowRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowRecognizerRow);
    return rowRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::RecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::RecognizerDataTable::Clone() {
    NewDataSet::RecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::RecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::RecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::RecognizerDataTable());
}

inline ::System::Void NewDataSet::RecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnignoreOnTrackingError = __super::Columns[L"ignoreOnTrackingError"];
    this->columnAlternativeRecognizers_Id = __super::Columns[L"AlternativeRecognizers_Id"];
    this->columnState_Id = __super::Columns[L"State_Id"];
}

inline ::System::Void NewDataSet::RecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnignoreOnTrackingError = (gcnew ::System::Data::DataColumn(L"ignoreOnTrackingError", ::System::Boolean::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnignoreOnTrackingError);
    this->columnAlternativeRecognizers_Id = (gcnew ::System::Data::DataColumn(L"AlternativeRecognizers_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAlternativeRecognizers_Id);
    this->columnState_Id = (gcnew ::System::Data::DataColumn(L"State_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnState_Id);
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnignoreOnTrackingError->Namespace = L"";
    this->columnignoreOnTrackingError->DefaultValue = static_cast<System::Boolean>(false);
}

inline NewDataSet::RecognizerRow^  NewDataSet::RecognizerDataTable::NewRecognizerRow() {
    return (cli::safe_cast<NewDataSet::RecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::RecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::RecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::RecognizerDataTable::GetRowType() {
    return NewDataSet::RecognizerRow::typeid;
}

inline ::System::Void NewDataSet::RecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->RecognizerRowChanged(this, (gcnew NewDataSet::RecognizerRowChangeEvent((cli::safe_cast<NewDataSet::RecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->RecognizerRowChanging(this, (gcnew NewDataSet::RecognizerRowChangeEvent((cli::safe_cast<NewDataSet::RecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->RecognizerRowDeleted(this, (gcnew NewDataSet::RecognizerRowChangeEvent((cli::safe_cast<NewDataSet::RecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->RecognizerRowDeleting(this, (gcnew NewDataSet::RecognizerRowChangeEvent((cli::safe_cast<NewDataSet::RecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::RecognizerDataTable::RemoveRecognizerRow(NewDataSet::RecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::RecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"RecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::NotRecognizerDataTable::NotRecognizerDataTable() {
    this->TableName = L"NotRecognizer";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::NotRecognizerDataTable::NotRecognizerDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::NotRecognizerDataTable::NotRecognizerDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::NotRecognizerDataTable::nameColumn::get() {
    return this->columnname;
}

inline ::System::Data::DataColumn^  NewDataSet::NotRecognizerDataTable::minConfidenceColumn::get() {
    return this->columnminConfidence;
}

inline ::System::Data::DataColumn^  NewDataSet::NotRecognizerDataTable::useFilteredDataColumn::get() {
    return this->columnuseFilteredData;
}

inline ::System::Data::DataColumn^  NewDataSet::NotRecognizerDataTable::ignoreOnTrackingErrorColumn::get() {
    return this->columnignoreOnTrackingError;
}

inline ::System::Data::DataColumn^  NewDataSet::NotRecognizerDataTable::AlternativeRecognizers_IdColumn::get() {
    return this->columnAlternativeRecognizers_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::NotRecognizerDataTable::State_IdColumn::get() {
    return this->columnState_Id;
}

inline ::System::Int32 NewDataSet::NotRecognizerDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::NotRecognizerRow^  NewDataSet::NotRecognizerDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::NotRecognizerRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::AddNotRecognizerRow(NewDataSet::NotRecognizerRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::NotRecognizerRow^  NewDataSet::NotRecognizerDataTable::AddNotRecognizerRow(
            System::String^  name, 
            System::Single minConfidence, 
            System::Boolean useFilteredData, 
            System::Boolean ignoreOnTrackingError, 
            NewDataSet::AlternativeRecognizersRow^  parentAlternativeRecognizersRowByAlternativeRecognizers_NotRecognizer, 
            NewDataSet::StateRow^  parentStateRowByState_NotRecognizer) {
    NewDataSet::NotRecognizerRow^  rowNotRecognizerRow = (cli::safe_cast<NewDataSet::NotRecognizerRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(6) {name, minConfidence, useFilteredData, 
        ignoreOnTrackingError, nullptr, nullptr};
    if (parentAlternativeRecognizersRowByAlternativeRecognizers_NotRecognizer != nullptr) {
        columnValuesArray[4] = parentAlternativeRecognizersRowByAlternativeRecognizers_NotRecognizer[0];
    }
    if (parentStateRowByState_NotRecognizer != nullptr) {
        columnValuesArray[5] = parentStateRowByState_NotRecognizer[6];
    }
    rowNotRecognizerRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowNotRecognizerRow);
    return rowNotRecognizerRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::NotRecognizerDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::NotRecognizerDataTable::Clone() {
    NewDataSet::NotRecognizerDataTable^  cln = (cli::safe_cast<NewDataSet::NotRecognizerDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::NotRecognizerDataTable::CreateInstance() {
    return (gcnew NewDataSet::NotRecognizerDataTable());
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::InitVars() {
    this->columnname = __super::Columns[L"name"];
    this->columnminConfidence = __super::Columns[L"minConfidence"];
    this->columnuseFilteredData = __super::Columns[L"useFilteredData"];
    this->columnignoreOnTrackingError = __super::Columns[L"ignoreOnTrackingError"];
    this->columnAlternativeRecognizers_Id = __super::Columns[L"AlternativeRecognizers_Id"];
    this->columnState_Id = __super::Columns[L"State_Id"];
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::InitClass() {
    this->columnname = (gcnew ::System::Data::DataColumn(L"name", ::System::String::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnname);
    this->columnminConfidence = (gcnew ::System::Data::DataColumn(L"minConfidence", ::System::Single::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnminConfidence);
    this->columnuseFilteredData = (gcnew ::System::Data::DataColumn(L"useFilteredData", ::System::Boolean::typeid, nullptr, ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnuseFilteredData);
    this->columnignoreOnTrackingError = (gcnew ::System::Data::DataColumn(L"ignoreOnTrackingError", ::System::Boolean::typeid, nullptr, 
        ::System::Data::MappingType::Attribute));
    __super::Columns->Add(this->columnignoreOnTrackingError);
    this->columnAlternativeRecognizers_Id = (gcnew ::System::Data::DataColumn(L"AlternativeRecognizers_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAlternativeRecognizers_Id);
    this->columnState_Id = (gcnew ::System::Data::DataColumn(L"State_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnState_Id);
    this->columnname->AllowDBNull = false;
    this->columnname->Namespace = L"";
    this->columnminConfidence->Namespace = L"";
    this->columnuseFilteredData->Namespace = L"";
    this->columnuseFilteredData->DefaultValue = static_cast<System::Boolean>(false);
    this->columnignoreOnTrackingError->Namespace = L"";
    this->columnignoreOnTrackingError->DefaultValue = static_cast<System::Boolean>(false);
}

inline NewDataSet::NotRecognizerRow^  NewDataSet::NotRecognizerDataTable::NewNotRecognizerRow() {
    return (cli::safe_cast<NewDataSet::NotRecognizerRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::NotRecognizerDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::NotRecognizerRow(builder));
}

inline ::System::Type^  NewDataSet::NotRecognizerDataTable::GetRowType() {
    return NewDataSet::NotRecognizerRow::typeid;
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->NotRecognizerRowChanged(this, (gcnew NewDataSet::NotRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::NotRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->NotRecognizerRowChanging(this, (gcnew NewDataSet::NotRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::NotRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->NotRecognizerRowDeleted(this, (gcnew NewDataSet::NotRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::NotRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->NotRecognizerRowDeleting(this, (gcnew NewDataSet::NotRecognizerRowChangeEvent((cli::safe_cast<NewDataSet::NotRecognizerRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::NotRecognizerDataTable::RemoveNotRecognizerRow(NewDataSet::NotRecognizerRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::NotRecognizerDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"NotRecognizerDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::AlternativeRecognizersDataTable::AlternativeRecognizersDataTable() {
    this->TableName = L"AlternativeRecognizers";
    this->BeginInit();
    this->InitClass();
    this->EndInit();
}

inline NewDataSet::AlternativeRecognizersDataTable::AlternativeRecognizersDataTable(::System::Data::DataTable^  table) {
    this->TableName = table->TableName;
    if (table->CaseSensitive != table->DataSet->CaseSensitive) {
        this->CaseSensitive = table->CaseSensitive;
    }
    if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
        this->Locale = table->Locale;
    }
    if (table->Namespace != table->DataSet->Namespace) {
        this->Namespace = table->Namespace;
    }
    this->Prefix = table->Prefix;
    this->MinimumCapacity = table->MinimumCapacity;
}

inline NewDataSet::AlternativeRecognizersDataTable::AlternativeRecognizersDataTable(::System::Runtime::Serialization::SerializationInfo^  info, 
            ::System::Runtime::Serialization::StreamingContext context) : 
        ::System::Data::DataTable(info, context) {
    this->InitVars();
}

inline ::System::Data::DataColumn^  NewDataSet::AlternativeRecognizersDataTable::AlternativeRecognizers_IdColumn::get() {
    return this->columnAlternativeRecognizers_Id;
}

inline ::System::Data::DataColumn^  NewDataSet::AlternativeRecognizersDataTable::State_IdColumn::get() {
    return this->columnState_Id;
}

inline ::System::Int32 NewDataSet::AlternativeRecognizersDataTable::Count::get() {
    return this->Rows->Count;
}

inline NewDataSet::AlternativeRecognizersRow^  NewDataSet::AlternativeRecognizersDataTable::default::get(::System::Int32 index) {
    return (cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(this->Rows[index]));
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::AddAlternativeRecognizersRow(NewDataSet::AlternativeRecognizersRow^  row) {
    this->Rows->Add(row);
}

inline NewDataSet::AlternativeRecognizersRow^  NewDataSet::AlternativeRecognizersDataTable::AddAlternativeRecognizersRow(
            NewDataSet::StateRow^  parentStateRowByState_AlternativeRecognizers) {
    NewDataSet::AlternativeRecognizersRow^  rowAlternativeRecognizersRow = (cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(this->NewRow()));
    cli::array< ::System::Object^  >^  columnValuesArray = gcnew cli::array< ::System::Object^  >(2) {nullptr, nullptr};
    if (parentStateRowByState_AlternativeRecognizers != nullptr) {
        columnValuesArray[1] = parentStateRowByState_AlternativeRecognizers[6];
    }
    rowAlternativeRecognizersRow->ItemArray = columnValuesArray;
    this->Rows->Add(rowAlternativeRecognizersRow);
    return rowAlternativeRecognizersRow;
}

inline ::System::Collections::IEnumerator^  NewDataSet::AlternativeRecognizersDataTable::GetEnumerator() {
    return this->Rows->GetEnumerator();
}

inline ::System::Data::DataTable^  NewDataSet::AlternativeRecognizersDataTable::Clone() {
    NewDataSet::AlternativeRecognizersDataTable^  cln = (cli::safe_cast<NewDataSet::AlternativeRecognizersDataTable^  >(__super::Clone()));
    cln->InitVars();
    return cln;
}

inline ::System::Data::DataTable^  NewDataSet::AlternativeRecognizersDataTable::CreateInstance() {
    return (gcnew NewDataSet::AlternativeRecognizersDataTable());
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::InitVars() {
    this->columnAlternativeRecognizers_Id = __super::Columns[L"AlternativeRecognizers_Id"];
    this->columnState_Id = __super::Columns[L"State_Id"];
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::InitClass() {
    this->columnAlternativeRecognizers_Id = (gcnew ::System::Data::DataColumn(L"AlternativeRecognizers_Id", ::System::Int32::typeid, 
        nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnAlternativeRecognizers_Id);
    this->columnState_Id = (gcnew ::System::Data::DataColumn(L"State_Id", ::System::Int32::typeid, nullptr, ::System::Data::MappingType::Hidden));
    __super::Columns->Add(this->columnState_Id);
    this->Constraints->Add((gcnew ::System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< ::System::Data::DataColumn^  >(1) {this->columnAlternativeRecognizers_Id}, 
            true)));
    this->columnAlternativeRecognizers_Id->AutoIncrement = true;
    this->columnAlternativeRecognizers_Id->AllowDBNull = false;
    this->columnAlternativeRecognizers_Id->Unique = true;
}

inline NewDataSet::AlternativeRecognizersRow^  NewDataSet::AlternativeRecognizersDataTable::NewAlternativeRecognizersRow() {
    return (cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(this->NewRow()));
}

inline ::System::Data::DataRow^  NewDataSet::AlternativeRecognizersDataTable::NewRowFromBuilder(::System::Data::DataRowBuilder^  builder) {
    return (gcnew NewDataSet::AlternativeRecognizersRow(builder));
}

inline ::System::Type^  NewDataSet::AlternativeRecognizersDataTable::GetRowType() {
    return NewDataSet::AlternativeRecognizersRow::typeid;
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::OnRowChanged(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanged(e);
    {
        this->AlternativeRecognizersRowChanged(this, (gcnew NewDataSet::AlternativeRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::OnRowChanging(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowChanging(e);
    {
        this->AlternativeRecognizersRowChanging(this, (gcnew NewDataSet::AlternativeRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::OnRowDeleted(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleted(e);
    {
        this->AlternativeRecognizersRowDeleted(this, (gcnew NewDataSet::AlternativeRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::OnRowDeleting(::System::Data::DataRowChangeEventArgs^  e) {
    __super::OnRowDeleting(e);
    {
        this->AlternativeRecognizersRowDeleting(this, (gcnew NewDataSet::AlternativeRecognizersRowChangeEvent((cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(e->Row)), 
                e->Action)));
    }
}

inline ::System::Void NewDataSet::AlternativeRecognizersDataTable::RemoveAlternativeRecognizersRow(NewDataSet::AlternativeRecognizersRow^  row) {
    this->Rows->Remove(row);
}

inline ::System::Xml::Schema::XmlSchemaComplexType^  NewDataSet::AlternativeRecognizersDataTable::GetTypedTableSchema(::System::Xml::Schema::XmlSchemaSet^  xs) {
    ::System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew ::System::Xml::Schema::XmlSchemaComplexType());
    ::System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew ::System::Xml::Schema::XmlSchemaSequence());
    NewDataSet^  ds = (gcnew NewDataSet());
    ::System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
    any1->MinOccurs = ::System::Decimal(0);
    any1->MaxOccurs = ::System::Decimal::MaxValue;
    any1->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any1);
    ::System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew ::System::Xml::Schema::XmlSchemaAny());
    any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
    any2->MinOccurs = ::System::Decimal(1);
    any2->ProcessContents = ::System::Xml::Schema::XmlSchemaContentProcessing::Lax;
    sequence->Items->Add(any2);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute1->Name = L"namespace";
    attribute1->FixedValue = ds->Namespace;
    type->Attributes->Add(attribute1);
    ::System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew ::System::Xml::Schema::XmlSchemaAttribute());
    attribute2->Name = L"tableTypeName";
    attribute2->FixedValue = L"AlternativeRecognizersDataTable";
    type->Attributes->Add(attribute2);
    type->Particle = sequence;
    ::System::Xml::Schema::XmlSchema^  dsSchema = ds->GetSchemaSerializable();
    if (xs->Contains(dsSchema->TargetNamespace)) {
        ::System::IO::MemoryStream^  s1 = (gcnew ::System::IO::MemoryStream());
        ::System::IO::MemoryStream^  s2 = (gcnew ::System::IO::MemoryStream());
        try {
            ::System::Xml::Schema::XmlSchema^  schema = nullptr;
            dsSchema->Write(s1);
            for (            ::System::Collections::IEnumerator^  schemas = xs->Schemas(dsSchema->TargetNamespace)->GetEnumerator(); schemas->MoveNext();             ) {
                schema = (cli::safe_cast<::System::Xml::Schema::XmlSchema^  >(schemas->Current));
                s2->SetLength(0);
                schema->Write(s2);
                if (s1->Length == s2->Length) {
                    s1->Position = 0;
                    s2->Position = 0;
                    for (                    ; ((s1->Position != s1->Length) 
                                && (s1->ReadByte() == s2->ReadByte()));                     ) {
                        ;
                    }
                    if (s1->Position == s1->Length) {
                        return type;
                    }
                }
            }
        }
        finally {
            if (s1 != nullptr) {
                s1->Close();
            }
            if (s2 != nullptr) {
                s2->Close();
            }
        }
    }
    xs->Add(dsSchema);
    return type;
}


inline NewDataSet::FubiRecognizersRow::FubiRecognizersRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableFubiRecognizers = (cli::safe_cast<NewDataSet::FubiRecognizersDataTable^  >(this->Table));
}

inline System::Single NewDataSet::FubiRecognizersRow::globalMinConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableFubiRecognizers->globalMinConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'globalMinConfidence\' in table \'FubiRecognizers\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::FubiRecognizersRow::globalMinConfidence::set(System::Single value) {
    this[this->tableFubiRecognizers->globalMinConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::FubiRecognizersRow::globalUseFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableFubiRecognizers->globalUseFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'globalUseFilteredData\' in table \'FubiRecognizers\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::FubiRecognizersRow::globalUseFilteredData::set(System::Boolean value) {
    this[this->tableFubiRecognizers->globalUseFilteredDataColumn] = value;
}

inline System::Int32 NewDataSet::FubiRecognizersRow::FubiRecognizers_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableFubiRecognizers->FubiRecognizers_IdColumn]));
}
inline System::Void NewDataSet::FubiRecognizersRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableFubiRecognizers->FubiRecognizers_IdColumn] = value;
}

inline ::System::Boolean NewDataSet::FubiRecognizersRow::IsglobalMinConfidenceNull() {
    return this->IsNull(this->tableFubiRecognizers->globalMinConfidenceColumn);
}

inline ::System::Void NewDataSet::FubiRecognizersRow::SetglobalMinConfidenceNull() {
    this[this->tableFubiRecognizers->globalMinConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FubiRecognizersRow::IsglobalUseFilteredDataNull() {
    return this->IsNull(this->tableFubiRecognizers->globalUseFilteredDataColumn);
}

inline ::System::Void NewDataSet::FubiRecognizersRow::SetglobalUseFilteredDataNull() {
    this[this->tableFubiRecognizers->globalUseFilteredDataColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointRelationRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetJointRelationRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_JointRelationRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRelationRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRelationRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_JointRelationRecognizer"])));
    }
}

inline cli::array< NewDataSet::JointOrientationRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetJointOrientationRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_JointOrientationRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointOrientationRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointOrientationRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_JointOrientationRecognizer"])));
    }
}

inline cli::array< NewDataSet::LinearMovementRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetLinearMovementRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_LinearMovementRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::LinearMovementRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::LinearMovementRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_LinearMovementRecognizer"])));
    }
}

inline cli::array< NewDataSet::AngularMovementRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetAngularMovementRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_AngularMovementRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::AngularMovementRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::AngularMovementRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_AngularMovementRecognizer"])));
    }
}

inline cli::array< NewDataSet::FingerCountRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetFingerCountRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_FingerCountRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::FingerCountRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::FingerCountRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_FingerCountRecognizer"])));
    }
}

inline cli::array< NewDataSet::TemplateRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetTemplateRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_TemplateRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::TemplateRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::TemplateRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_TemplateRecognizer"])));
    }
}

inline cli::array< NewDataSet::CombinationRecognizerRow^  >^  NewDataSet::FubiRecognizersRow::GetCombinationRecognizerRows() {
    if (this->Table->ChildRelations[L"FubiRecognizers_CombinationRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::CombinationRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::CombinationRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FubiRecognizers_CombinationRecognizer"])));
    }
}


inline NewDataSet::JointRelationRecognizerRow::JointRelationRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableJointRelationRecognizer = (cli::safe_cast<NewDataSet::JointRelationRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::JointRelationRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableJointRelationRecognizer->nameColumn]));
}
inline System::Void NewDataSet::JointRelationRecognizerRow::name::set(System::String^  value) {
    this[this->tableJointRelationRecognizer->nameColumn] = value;
}

inline System::String^  NewDataSet::JointRelationRecognizerRow::visibility::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableJointRelationRecognizer->visibilityColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'visibility\' in table \'JointRelationRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRelationRecognizerRow::visibility::set(System::String^  value) {
    this[this->tableJointRelationRecognizer->visibilityColumn] = value;
}

inline System::Boolean NewDataSet::JointRelationRecognizerRow::useLocalPositions::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableJointRelationRecognizer->useLocalPositionsColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useLocalPositions\' in table \'JointRelationRecognizer\' is DB" 
L"Null.", 
            e));
    }
}
inline System::Void NewDataSet::JointRelationRecognizerRow::useLocalPositions::set(System::Boolean value) {
    this[this->tableJointRelationRecognizer->useLocalPositionsColumn] = value;
}

inline System::Single NewDataSet::JointRelationRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableJointRelationRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'JointRelationRecognizer\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::JointRelationRecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableJointRelationRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::JointRelationRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableJointRelationRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'JointRelationRecognizer\' is DBNu" 
L"ll.", 
            e));
    }
}
inline System::Void NewDataSet::JointRelationRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableJointRelationRecognizer->useFilteredDataColumn] = value;
}

inline System::String^  NewDataSet::JointRelationRecognizerRow::measuringUnit::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableJointRelationRecognizer->measuringUnitColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'measuringUnit\' in table \'JointRelationRecognizer\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::JointRelationRecognizerRow::measuringUnit::set(System::String^  value) {
    this[this->tableJointRelationRecognizer->measuringUnitColumn] = value;
}

inline System::Int32 NewDataSet::JointRelationRecognizerRow::JointRelationRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn]));
}
inline System::Void NewDataSet::JointRelationRecognizerRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableJointRelationRecognizer->JointRelationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointRelationRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJointRelationRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'JointRelationRecognizer\' is D" 
L"BNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRelationRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableJointRelationRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::JointRelationRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_JointRelationRecognizer"])));
}
inline System::Void NewDataSet::JointRelationRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_JointRelationRecognizer"]);
}

inline ::System::Boolean NewDataSet::JointRelationRecognizerRow::IsvisibilityNull() {
    return this->IsNull(this->tableJointRelationRecognizer->visibilityColumn);
}

inline ::System::Void NewDataSet::JointRelationRecognizerRow::SetvisibilityNull() {
    this[this->tableJointRelationRecognizer->visibilityColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRelationRecognizerRow::IsuseLocalPositionsNull() {
    return this->IsNull(this->tableJointRelationRecognizer->useLocalPositionsColumn);
}

inline ::System::Void NewDataSet::JointRelationRecognizerRow::SetuseLocalPositionsNull() {
    this[this->tableJointRelationRecognizer->useLocalPositionsColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRelationRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableJointRelationRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::JointRelationRecognizerRow::SetminConfidenceNull() {
    this[this->tableJointRelationRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRelationRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableJointRelationRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::JointRelationRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableJointRelationRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRelationRecognizerRow::IsmeasuringUnitNull() {
    return this->IsNull(this->tableJointRelationRecognizer->measuringUnitColumn);
}

inline ::System::Void NewDataSet::JointRelationRecognizerRow::SetmeasuringUnitNull() {
    this[this->tableJointRelationRecognizer->measuringUnitColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRelationRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableJointRelationRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::JointRelationRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableJointRelationRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointsRow^  >^  NewDataSet::JointRelationRecognizerRow::GetJointsRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_Joints"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointsRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_Joints"])));
    }
}

inline cli::array< NewDataSet::JointRow^  >^  NewDataSet::JointRelationRecognizerRow::GetJointRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_Joint"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_Joint"])));
    }
}

inline cli::array< NewDataSet::HandJointsRow^  >^  NewDataSet::JointRelationRecognizerRow::GetHandJointsRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_HandJoints"] == nullptr) {
        return gcnew cli::array< NewDataSet::HandJointsRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::HandJointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_HandJoints"])));
    }
}

inline cli::array< NewDataSet::MaxValuesRow^  >^  NewDataSet::JointRelationRecognizerRow::GetMaxValuesRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_MaxValues"] == nullptr) {
        return gcnew cli::array< NewDataSet::MaxValuesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MaxValuesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_MaxValues"])));
    }
}

inline cli::array< NewDataSet::MinValuesRow^  >^  NewDataSet::JointRelationRecognizerRow::GetMinValuesRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_MinValues"] == nullptr) {
        return gcnew cli::array< NewDataSet::MinValuesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MinValuesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_MinValues"])));
    }
}

inline cli::array< NewDataSet::RelationRow^  >^  NewDataSet::JointRelationRecognizerRow::GetRelationRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_Relation"] == nullptr) {
        return gcnew cli::array< NewDataSet::RelationRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::RelationRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_Relation"])));
    }
}

inline cli::array< NewDataSet::MiddleJointRow^  >^  NewDataSet::JointRelationRecognizerRow::GetMiddleJointRows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_MiddleJoint"] == nullptr) {
        return gcnew cli::array< NewDataSet::MiddleJointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MiddleJointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_MiddleJoint"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::JointRelationRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"JointRelationRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointRelationRecognizer_METAINFO"])));
    }
}


inline NewDataSet::JointsRow::JointsRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableJoints = (cli::safe_cast<NewDataSet::JointsDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::JointsRow::main::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableJoints->mainColumn]));
}
inline System::Void NewDataSet::JointsRow::main::set(System::String^  value) {
    this[this->tableJoints->mainColumn] = value;
}

inline System::String^  NewDataSet::JointsRow::relative::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableJoints->relativeColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'relative\' in table \'Joints\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::JointsRow::relative::set(System::String^  value) {
    this[this->tableJoints->relativeColumn] = value;
}

inline System::Int32 NewDataSet::JointsRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoints->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'Joints\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointsRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoints->JointRelationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointsRow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoints->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'Joints\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointsRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoints->LinearMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointsRow::TemplateRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoints->TemplateRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TemplateRecognizer_Id\' in table \'Joints\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointsRow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoints->TemplateRecognizer_IdColumn] = value;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::JointsRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_Joints"])));
}
inline System::Void NewDataSet::JointsRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_Joints"]);
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::JointsRow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_Joints"])));
}
inline System::Void NewDataSet::JointsRow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_Joints"]);
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::JointsRow::TemplateRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TemplateRecognizer_Joints"])));
}
inline System::Void NewDataSet::JointsRow::TemplateRecognizerRow::set(NewDataSet::TemplateRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"TemplateRecognizer_Joints"]);
}

inline ::System::Boolean NewDataSet::JointsRow::IsrelativeNull() {
    return this->IsNull(this->tableJoints->relativeColumn);
}

inline ::System::Void NewDataSet::JointsRow::SetrelativeNull() {
    this[this->tableJoints->relativeColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointsRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableJoints->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointsRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableJoints->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointsRow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableJoints->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointsRow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableJoints->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointsRow::IsTemplateRecognizer_IdNull() {
    return this->IsNull(this->tableJoints->TemplateRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointsRow::SetTemplateRecognizer_IdNull() {
    this[this->tableJoints->TemplateRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::JointRow::JointRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableJoint = (cli::safe_cast<NewDataSet::JointDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::JointRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableJoint->nameColumn]));
}
inline System::Void NewDataSet::JointRow::name::set(System::String^  value) {
    this[this->tableJoint->nameColumn] = value;
}

inline System::Int32 NewDataSet::JointRow::MiddleJoint_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoint->MiddleJoint_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'MiddleJoint_Id\' in table \'Joint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRow::MiddleJoint_Id::set(System::Int32 value) {
    this[this->tableJoint->MiddleJoint_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoint->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'Joint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoint->JointRelationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointRow::JointOrientationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoint->JointOrientationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointOrientationRecognizer_Id\' in table \'Joint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoint->JointOrientationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointRow::AngularMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoint->AngularMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AngularMovementRecognizer_Id\' in table \'Joint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoint->AngularMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointRow::FingerCountRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoint->FingerCountRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FingerCountRecognizer_Id\' in table \'Joint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRow::FingerCountRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoint->FingerCountRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointRow::TemplateRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJoint->TemplateRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TemplateRecognizer_Id\' in table \'Joint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointRow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableJoint->TemplateRecognizer_IdColumn] = value;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::JointRow::MiddleJointRow::get() {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->GetParentRow(this->Table->ParentRelations[L"MiddleJoint_Joint"])));
}
inline System::Void NewDataSet::JointRow::MiddleJointRow::set(NewDataSet::MiddleJointRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"MiddleJoint_Joint"]);
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::JointRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_Joint"])));
}
inline System::Void NewDataSet::JointRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_Joint"]);
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::JointRow::JointOrientationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointOrientationRecognizer_Joint"])));
}
inline System::Void NewDataSet::JointRow::JointOrientationRecognizerRow::set(NewDataSet::JointOrientationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointOrientationRecognizer_Joint"]);
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::JointRow::AngularMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AngularMovementRecognizer_Joint"])));
}
inline System::Void NewDataSet::JointRow::AngularMovementRecognizerRow::set(NewDataSet::AngularMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AngularMovementRecognizer_Joint"]);
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::JointRow::FingerCountRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FingerCountRecognizer_Joint"])));
}
inline System::Void NewDataSet::JointRow::FingerCountRecognizerRow::set(NewDataSet::FingerCountRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FingerCountRecognizer_Joint"]);
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::JointRow::TemplateRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TemplateRecognizer_Joint"])));
}
inline System::Void NewDataSet::JointRow::TemplateRecognizerRow::set(NewDataSet::TemplateRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"TemplateRecognizer_Joint"]);
}

inline ::System::Boolean NewDataSet::JointRow::IsMiddleJoint_IdNull() {
    return this->IsNull(this->tableJoint->MiddleJoint_IdColumn);
}

inline ::System::Void NewDataSet::JointRow::SetMiddleJoint_IdNull() {
    this[this->tableJoint->MiddleJoint_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableJoint->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableJoint->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRow::IsJointOrientationRecognizer_IdNull() {
    return this->IsNull(this->tableJoint->JointOrientationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointRow::SetJointOrientationRecognizer_IdNull() {
    this[this->tableJoint->JointOrientationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRow::IsAngularMovementRecognizer_IdNull() {
    return this->IsNull(this->tableJoint->AngularMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointRow::SetAngularMovementRecognizer_IdNull() {
    this[this->tableJoint->AngularMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRow::IsFingerCountRecognizer_IdNull() {
    return this->IsNull(this->tableJoint->FingerCountRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointRow::SetFingerCountRecognizer_IdNull() {
    this[this->tableJoint->FingerCountRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointRow::IsTemplateRecognizer_IdNull() {
    return this->IsNull(this->tableJoint->TemplateRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::JointRow::SetTemplateRecognizer_IdNull() {
    this[this->tableJoint->TemplateRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::HandJointsRow::HandJointsRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableHandJoints = (cli::safe_cast<NewDataSet::HandJointsDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::HandJointsRow::main::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableHandJoints->mainColumn]));
}
inline System::Void NewDataSet::HandJointsRow::main::set(System::String^  value) {
    this[this->tableHandJoints->mainColumn] = value;
}

inline System::String^  NewDataSet::HandJointsRow::relative::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableHandJoints->relativeColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'relative\' in table \'HandJoints\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::HandJointsRow::relative::set(System::String^  value) {
    this[this->tableHandJoints->relativeColumn] = value;
}

inline System::Int32 NewDataSet::HandJointsRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableHandJoints->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'HandJoints\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::HandJointsRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableHandJoints->JointRelationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::HandJointsRow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableHandJoints->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'HandJoints\' is DBNul" 
L"l.", 
            e));
    }
}
inline System::Void NewDataSet::HandJointsRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableHandJoints->LinearMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::HandJointsRow::TemplateRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableHandJoints->TemplateRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TemplateRecognizer_Id\' in table \'HandJoints\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::HandJointsRow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableHandJoints->TemplateRecognizer_IdColumn] = value;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::HandJointsRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_HandJoints"])));
}
inline System::Void NewDataSet::HandJointsRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_HandJoints"]);
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::HandJointsRow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_HandJoints"])));
}
inline System::Void NewDataSet::HandJointsRow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_HandJoints"]);
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::HandJointsRow::TemplateRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TemplateRecognizer_HandJoints"])));
}
inline System::Void NewDataSet::HandJointsRow::TemplateRecognizerRow::set(NewDataSet::TemplateRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"TemplateRecognizer_HandJoints"]);
}

inline ::System::Boolean NewDataSet::HandJointsRow::IsrelativeNull() {
    return this->IsNull(this->tableHandJoints->relativeColumn);
}

inline ::System::Void NewDataSet::HandJointsRow::SetrelativeNull() {
    this[this->tableHandJoints->relativeColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::HandJointsRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableHandJoints->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::HandJointsRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableHandJoints->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::HandJointsRow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableHandJoints->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::HandJointsRow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableHandJoints->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::HandJointsRow::IsTemplateRecognizer_IdNull() {
    return this->IsNull(this->tableHandJoints->TemplateRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::HandJointsRow::SetTemplateRecognizer_IdNull() {
    this[this->tableHandJoints->TemplateRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::MaxValuesRow::MaxValuesRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMaxValues = (cli::safe_cast<NewDataSet::MaxValuesDataTable^  >(this->Table));
}

inline System::Single NewDataSet::MaxValuesRow::x::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxValues->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'MaxValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxValuesRow::x::set(System::Single value) {
    this[this->tableMaxValues->xColumn] = value;
}

inline System::Single NewDataSet::MaxValuesRow::y::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxValues->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'MaxValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxValuesRow::y::set(System::Single value) {
    this[this->tableMaxValues->yColumn] = value;
}

inline System::Single NewDataSet::MaxValuesRow::z::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxValues->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'MaxValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxValuesRow::z::set(System::Single value) {
    this[this->tableMaxValues->zColumn] = value;
}

inline System::Single NewDataSet::MaxValuesRow::dist::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxValues->distColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'dist\' in table \'MaxValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxValuesRow::dist::set(System::Single value) {
    this[this->tableMaxValues->distColumn] = value;
}

inline System::Int32 NewDataSet::MaxValuesRow::MiddleJoint_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMaxValues->MiddleJoint_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'MiddleJoint_Id\' in table \'MaxValues\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MaxValuesRow::MiddleJoint_Id::set(System::Int32 value) {
    this[this->tableMaxValues->MiddleJoint_IdColumn] = value;
}

inline System::Int32 NewDataSet::MaxValuesRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMaxValues->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'MaxValues\' is DBNull." 
L"", 
            e));
    }
}
inline System::Void NewDataSet::MaxValuesRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMaxValues->JointRelationRecognizer_IdColumn] = value;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::MaxValuesRow::MiddleJointRow::get() {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->GetParentRow(this->Table->ParentRelations[L"MiddleJoint_MaxValues"])));
}
inline System::Void NewDataSet::MaxValuesRow::MiddleJointRow::set(NewDataSet::MiddleJointRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"MiddleJoint_MaxValues"]);
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::MaxValuesRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_MaxValues"])));
}
inline System::Void NewDataSet::MaxValuesRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_MaxValues"]);
}

inline ::System::Boolean NewDataSet::MaxValuesRow::IsxNull() {
    return this->IsNull(this->tableMaxValues->xColumn);
}

inline ::System::Void NewDataSet::MaxValuesRow::SetxNull() {
    this[this->tableMaxValues->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxValuesRow::IsyNull() {
    return this->IsNull(this->tableMaxValues->yColumn);
}

inline ::System::Void NewDataSet::MaxValuesRow::SetyNull() {
    this[this->tableMaxValues->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxValuesRow::IszNull() {
    return this->IsNull(this->tableMaxValues->zColumn);
}

inline ::System::Void NewDataSet::MaxValuesRow::SetzNull() {
    this[this->tableMaxValues->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxValuesRow::IsdistNull() {
    return this->IsNull(this->tableMaxValues->distColumn);
}

inline ::System::Void NewDataSet::MaxValuesRow::SetdistNull() {
    this[this->tableMaxValues->distColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxValuesRow::IsMiddleJoint_IdNull() {
    return this->IsNull(this->tableMaxValues->MiddleJoint_IdColumn);
}

inline ::System::Void NewDataSet::MaxValuesRow::SetMiddleJoint_IdNull() {
    this[this->tableMaxValues->MiddleJoint_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxValuesRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableMaxValues->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MaxValuesRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableMaxValues->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::MinValuesRow::MinValuesRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMinValues = (cli::safe_cast<NewDataSet::MinValuesDataTable^  >(this->Table));
}

inline System::Single NewDataSet::MinValuesRow::x::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinValues->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'MinValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinValuesRow::x::set(System::Single value) {
    this[this->tableMinValues->xColumn] = value;
}

inline System::Single NewDataSet::MinValuesRow::y::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinValues->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'MinValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinValuesRow::y::set(System::Single value) {
    this[this->tableMinValues->yColumn] = value;
}

inline System::Single NewDataSet::MinValuesRow::z::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinValues->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'MinValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinValuesRow::z::set(System::Single value) {
    this[this->tableMinValues->zColumn] = value;
}

inline System::Single NewDataSet::MinValuesRow::dist::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinValues->distColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'dist\' in table \'MinValues\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinValuesRow::dist::set(System::Single value) {
    this[this->tableMinValues->distColumn] = value;
}

inline System::Int32 NewDataSet::MinValuesRow::MiddleJoint_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMinValues->MiddleJoint_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'MiddleJoint_Id\' in table \'MinValues\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MinValuesRow::MiddleJoint_Id::set(System::Int32 value) {
    this[this->tableMinValues->MiddleJoint_IdColumn] = value;
}

inline System::Int32 NewDataSet::MinValuesRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMinValues->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'MinValues\' is DBNull." 
L"", 
            e));
    }
}
inline System::Void NewDataSet::MinValuesRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMinValues->JointRelationRecognizer_IdColumn] = value;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::MinValuesRow::MiddleJointRow::get() {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->GetParentRow(this->Table->ParentRelations[L"MiddleJoint_MinValues"])));
}
inline System::Void NewDataSet::MinValuesRow::MiddleJointRow::set(NewDataSet::MiddleJointRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"MiddleJoint_MinValues"]);
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::MinValuesRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_MinValues"])));
}
inline System::Void NewDataSet::MinValuesRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_MinValues"]);
}

inline ::System::Boolean NewDataSet::MinValuesRow::IsxNull() {
    return this->IsNull(this->tableMinValues->xColumn);
}

inline ::System::Void NewDataSet::MinValuesRow::SetxNull() {
    this[this->tableMinValues->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinValuesRow::IsyNull() {
    return this->IsNull(this->tableMinValues->yColumn);
}

inline ::System::Void NewDataSet::MinValuesRow::SetyNull() {
    this[this->tableMinValues->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinValuesRow::IszNull() {
    return this->IsNull(this->tableMinValues->zColumn);
}

inline ::System::Void NewDataSet::MinValuesRow::SetzNull() {
    this[this->tableMinValues->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinValuesRow::IsdistNull() {
    return this->IsNull(this->tableMinValues->distColumn);
}

inline ::System::Void NewDataSet::MinValuesRow::SetdistNull() {
    this[this->tableMinValues->distColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinValuesRow::IsMiddleJoint_IdNull() {
    return this->IsNull(this->tableMinValues->MiddleJoint_IdColumn);
}

inline ::System::Void NewDataSet::MinValuesRow::SetMiddleJoint_IdNull() {
    this[this->tableMinValues->MiddleJoint_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinValuesRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableMinValues->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MinValuesRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableMinValues->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::RelationRow::RelationRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableRelation = (cli::safe_cast<NewDataSet::RelationDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::RelationRow::type::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableRelation->typeColumn]));
}
inline System::Void NewDataSet::RelationRow::type::set(System::String^  value) {
    this[this->tableRelation->typeColumn] = value;
}

inline System::Single NewDataSet::RelationRow::min::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableRelation->minColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'min\' in table \'Relation\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::RelationRow::min::set(System::Single value) {
    this[this->tableRelation->minColumn] = value;
}

inline System::Single NewDataSet::RelationRow::max::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableRelation->maxColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'max\' in table \'Relation\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::RelationRow::max::set(System::Single value) {
    this[this->tableRelation->maxColumn] = value;
}

inline System::Int32 NewDataSet::RelationRow::MiddleJoint_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableRelation->MiddleJoint_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'MiddleJoint_Id\' in table \'Relation\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::RelationRow::MiddleJoint_Id::set(System::Int32 value) {
    this[this->tableRelation->MiddleJoint_IdColumn] = value;
}

inline System::Int32 NewDataSet::RelationRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableRelation->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'Relation\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::RelationRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableRelation->JointRelationRecognizer_IdColumn] = value;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::RelationRow::MiddleJointRow::get() {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->GetParentRow(this->Table->ParentRelations[L"MiddleJoint_Relation"])));
}
inline System::Void NewDataSet::RelationRow::MiddleJointRow::set(NewDataSet::MiddleJointRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"MiddleJoint_Relation"]);
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::RelationRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_Relation"])));
}
inline System::Void NewDataSet::RelationRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_Relation"]);
}

inline ::System::Boolean NewDataSet::RelationRow::IsminNull() {
    return this->IsNull(this->tableRelation->minColumn);
}

inline ::System::Void NewDataSet::RelationRow::SetminNull() {
    this[this->tableRelation->minColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RelationRow::IsmaxNull() {
    return this->IsNull(this->tableRelation->maxColumn);
}

inline ::System::Void NewDataSet::RelationRow::SetmaxNull() {
    this[this->tableRelation->maxColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RelationRow::IsMiddleJoint_IdNull() {
    return this->IsNull(this->tableRelation->MiddleJoint_IdColumn);
}

inline ::System::Void NewDataSet::RelationRow::SetMiddleJoint_IdNull() {
    this[this->tableRelation->MiddleJoint_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RelationRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableRelation->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::RelationRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableRelation->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::MiddleJointRow::MiddleJointRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMiddleJoint = (cli::safe_cast<NewDataSet::MiddleJointDataTable^  >(this->Table));
}

inline System::Int32 NewDataSet::MiddleJointRow::MiddleJoint_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableMiddleJoint->MiddleJoint_IdColumn]));
}
inline System::Void NewDataSet::MiddleJointRow::MiddleJoint_Id::set(System::Int32 value) {
    this[this->tableMiddleJoint->MiddleJoint_IdColumn] = value;
}

inline System::Int32 NewDataSet::MiddleJointRow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMiddleJoint->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'MiddleJoint\' is DBNul" 
L"l.", 
            e));
    }
}
inline System::Void NewDataSet::MiddleJointRow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMiddleJoint->JointRelationRecognizer_IdColumn] = value;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::MiddleJointRow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_MiddleJoint"])));
}
inline System::Void NewDataSet::MiddleJointRow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_MiddleJoint"]);
}

inline ::System::Boolean NewDataSet::MiddleJointRow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableMiddleJoint->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MiddleJointRow::SetJointRelationRecognizer_IdNull() {
    this[this->tableMiddleJoint->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointRow^  >^  NewDataSet::MiddleJointRow::GetJointRows() {
    if (this->Table->ChildRelations[L"MiddleJoint_Joint"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"MiddleJoint_Joint"])));
    }
}

inline cli::array< NewDataSet::HandJointRow^  >^  NewDataSet::MiddleJointRow::GetHandJointRows() {
    if (this->Table->ChildRelations[L"MiddleJoint_HandJoint"] == nullptr) {
        return gcnew cli::array< NewDataSet::HandJointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::HandJointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"MiddleJoint_HandJoint"])));
    }
}

inline cli::array< NewDataSet::MaxValuesRow^  >^  NewDataSet::MiddleJointRow::GetMaxValuesRows() {
    if (this->Table->ChildRelations[L"MiddleJoint_MaxValues"] == nullptr) {
        return gcnew cli::array< NewDataSet::MaxValuesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MaxValuesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"MiddleJoint_MaxValues"])));
    }
}

inline cli::array< NewDataSet::MinValuesRow^  >^  NewDataSet::MiddleJointRow::GetMinValuesRows() {
    if (this->Table->ChildRelations[L"MiddleJoint_MinValues"] == nullptr) {
        return gcnew cli::array< NewDataSet::MinValuesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MinValuesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"MiddleJoint_MinValues"])));
    }
}

inline cli::array< NewDataSet::RelationRow^  >^  NewDataSet::MiddleJointRow::GetRelationRows() {
    if (this->Table->ChildRelations[L"MiddleJoint_Relation"] == nullptr) {
        return gcnew cli::array< NewDataSet::RelationRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::RelationRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"MiddleJoint_Relation"])));
    }
}


inline NewDataSet::HandJointRow::HandJointRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableHandJoint = (cli::safe_cast<NewDataSet::HandJointDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::HandJointRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableHandJoint->nameColumn]));
}
inline System::Void NewDataSet::HandJointRow::name::set(System::String^  value) {
    this[this->tableHandJoint->nameColumn] = value;
}

inline System::Int32 NewDataSet::HandJointRow::MiddleJoint_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableHandJoint->MiddleJoint_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'MiddleJoint_Id\' in table \'HandJoint\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::HandJointRow::MiddleJoint_Id::set(System::Int32 value) {
    this[this->tableHandJoint->MiddleJoint_IdColumn] = value;
}

inline System::Int32 NewDataSet::HandJointRow::JointOrientationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableHandJoint->JointOrientationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointOrientationRecognizer_Id\' in table \'HandJoint\' is DBNu" 
L"ll.", 
            e));
    }
}
inline System::Void NewDataSet::HandJointRow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableHandJoint->JointOrientationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::HandJointRow::AngularMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableHandJoint->AngularMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AngularMovementRecognizer_Id\' in table \'HandJoint\' is DBNul" 
L"l.", 
            e));
    }
}
inline System::Void NewDataSet::HandJointRow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableHandJoint->AngularMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::HandJointRow::MiddleJointRow::get() {
    return (cli::safe_cast<NewDataSet::MiddleJointRow^  >(this->GetParentRow(this->Table->ParentRelations[L"MiddleJoint_HandJoint"])));
}
inline System::Void NewDataSet::HandJointRow::MiddleJointRow::set(NewDataSet::MiddleJointRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"MiddleJoint_HandJoint"]);
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::HandJointRow::JointOrientationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointOrientationRecognizer_HandJoint"])));
}
inline System::Void NewDataSet::HandJointRow::JointOrientationRecognizerRow::set(NewDataSet::JointOrientationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointOrientationRecognizer_HandJoint"]);
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::HandJointRow::AngularMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AngularMovementRecognizer_HandJoint"])));
}
inline System::Void NewDataSet::HandJointRow::AngularMovementRecognizerRow::set(NewDataSet::AngularMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AngularMovementRecognizer_HandJoint"]);
}

inline ::System::Boolean NewDataSet::HandJointRow::IsMiddleJoint_IdNull() {
    return this->IsNull(this->tableHandJoint->MiddleJoint_IdColumn);
}

inline ::System::Void NewDataSet::HandJointRow::SetMiddleJoint_IdNull() {
    this[this->tableHandJoint->MiddleJoint_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::HandJointRow::IsJointOrientationRecognizer_IdNull() {
    return this->IsNull(this->tableHandJoint->JointOrientationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::HandJointRow::SetJointOrientationRecognizer_IdNull() {
    this[this->tableHandJoint->JointOrientationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::HandJointRow::IsAngularMovementRecognizer_IdNull() {
    return this->IsNull(this->tableHandJoint->AngularMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::HandJointRow::SetAngularMovementRecognizer_IdNull() {
    this[this->tableHandJoint->AngularMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::METAINFORow::METAINFORow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMETAINFO = (cli::safe_cast<NewDataSet::METAINFODataTable^  >(this->Table));
}

inline System::Int32 NewDataSet::METAINFORow::METAINFO_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->METAINFO_IdColumn]));
}
inline System::Void NewDataSet::METAINFORow::METAINFO_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->METAINFO_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::JointRelationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->JointRelationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointRelationRecognizer_Id\' in table \'METAINFO\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::JointRelationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->JointRelationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::JointOrientationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->JointOrientationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointOrientationRecognizer_Id\' in table \'METAINFO\' is DBNul" 
L"l.", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->JointOrientationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'METAINFO\' is DBNull." 
L"", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->LinearMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::AngularMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->AngularMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AngularMovementRecognizer_Id\' in table \'METAINFO\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->AngularMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::FingerCountRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->FingerCountRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FingerCountRecognizer_Id\' in table \'METAINFO\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::FingerCountRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->FingerCountRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::TemplateRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->TemplateRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TemplateRecognizer_Id\' in table \'METAINFO\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->TemplateRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::State_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->State_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'State_Id\' in table \'METAINFO\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::State_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->State_IdColumn] = value;
}

inline System::Int32 NewDataSet::METAINFORow::CombinationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMETAINFO->CombinationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'CombinationRecognizer_Id\' in table \'METAINFO\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::METAINFORow::CombinationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMETAINFO->CombinationRecognizer_IdColumn] = value;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::METAINFORow::JointRelationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointRelationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointRelationRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::JointRelationRecognizerRow::set(NewDataSet::JointRelationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointRelationRecognizer_METAINFO"]);
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::METAINFORow::JointOrientationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointOrientationRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::JointOrientationRecognizerRow::set(NewDataSet::JointOrientationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointOrientationRecognizer_METAINFO"]);
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::METAINFORow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_METAINFO"]);
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::METAINFORow::AngularMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AngularMovementRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::AngularMovementRecognizerRow::set(NewDataSet::AngularMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AngularMovementRecognizer_METAINFO"]);
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::METAINFORow::FingerCountRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FingerCountRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::FingerCountRecognizerRow::set(NewDataSet::FingerCountRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FingerCountRecognizer_METAINFO"]);
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::METAINFORow::TemplateRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TemplateRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::TemplateRecognizerRow::set(NewDataSet::TemplateRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"TemplateRecognizer_METAINFO"]);
}

inline NewDataSet::StateRow^  NewDataSet::METAINFORow::StateRow::get() {
    return (cli::safe_cast<NewDataSet::StateRow^  >(this->GetParentRow(this->Table->ParentRelations[L"State_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::StateRow::set(NewDataSet::StateRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"State_METAINFO"]);
}

inline NewDataSet::CombinationRecognizerRow^  NewDataSet::METAINFORow::CombinationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"CombinationRecognizer_METAINFO"])));
}
inline System::Void NewDataSet::METAINFORow::CombinationRecognizerRow::set(NewDataSet::CombinationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"CombinationRecognizer_METAINFO"]);
}

inline ::System::Boolean NewDataSet::METAINFORow::IsJointRelationRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->JointRelationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetJointRelationRecognizer_IdNull() {
    this[this->tableMETAINFO->JointRelationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsJointOrientationRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->JointOrientationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetJointOrientationRecognizer_IdNull() {
    this[this->tableMETAINFO->JointOrientationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableMETAINFO->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsAngularMovementRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->AngularMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetAngularMovementRecognizer_IdNull() {
    this[this->tableMETAINFO->AngularMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsFingerCountRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->FingerCountRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetFingerCountRecognizer_IdNull() {
    this[this->tableMETAINFO->FingerCountRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsTemplateRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->TemplateRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetTemplateRecognizer_IdNull() {
    this[this->tableMETAINFO->TemplateRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsState_IdNull() {
    return this->IsNull(this->tableMETAINFO->State_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetState_IdNull() {
    this[this->tableMETAINFO->State_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::METAINFORow::IsCombinationRecognizer_IdNull() {
    return this->IsNull(this->tableMETAINFO->CombinationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::METAINFORow::SetCombinationRecognizer_IdNull() {
    this[this->tableMETAINFO->CombinationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::PropertyRow^  >^  NewDataSet::METAINFORow::GetPropertyRows() {
    if (this->Table->ChildRelations[L"METAINFO_Property"] == nullptr) {
        return gcnew cli::array< NewDataSet::PropertyRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::PropertyRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"METAINFO_Property"])));
    }
}


inline NewDataSet::PropertyRow::PropertyRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableProperty = (cli::safe_cast<NewDataSet::PropertyDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::PropertyRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableProperty->nameColumn]));
}
inline System::Void NewDataSet::PropertyRow::name::set(System::String^  value) {
    this[this->tableProperty->nameColumn] = value;
}

inline System::String^  NewDataSet::PropertyRow::_value::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableProperty->_valueColumn]));
}
inline System::Void NewDataSet::PropertyRow::_value::set(System::String^  value) {
    this[this->tableProperty->_valueColumn] = value;
}

inline System::Int32 NewDataSet::PropertyRow::METAINFO_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableProperty->METAINFO_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'METAINFO_Id\' in table \'Property\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::PropertyRow::METAINFO_Id::set(System::Int32 value) {
    this[this->tableProperty->METAINFO_IdColumn] = value;
}

inline NewDataSet::METAINFORow^  NewDataSet::PropertyRow::METAINFORow::get() {
    return (cli::safe_cast<NewDataSet::METAINFORow^  >(this->GetParentRow(this->Table->ParentRelations[L"METAINFO_Property"])));
}
inline System::Void NewDataSet::PropertyRow::METAINFORow::set(NewDataSet::METAINFORow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"METAINFO_Property"]);
}

inline ::System::Boolean NewDataSet::PropertyRow::IsMETAINFO_IdNull() {
    return this->IsNull(this->tableProperty->METAINFO_IdColumn);
}

inline ::System::Void NewDataSet::PropertyRow::SetMETAINFO_IdNull() {
    this[this->tableProperty->METAINFO_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::JointOrientationRecognizerRow::JointOrientationRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableJointOrientationRecognizer = (cli::safe_cast<NewDataSet::JointOrientationRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::JointOrientationRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableJointOrientationRecognizer->nameColumn]));
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::name::set(System::String^  value) {
    this[this->tableJointOrientationRecognizer->nameColumn] = value;
}

inline System::String^  NewDataSet::JointOrientationRecognizerRow::visibility::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableJointOrientationRecognizer->visibilityColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'visibility\' in table \'JointOrientationRecognizer\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::visibility::set(System::String^  value) {
    this[this->tableJointOrientationRecognizer->visibilityColumn] = value;
}

inline System::Boolean NewDataSet::JointOrientationRecognizerRow::useLocalOrientations::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableJointOrientationRecognizer->useLocalOrientationsColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useLocalOrientations\' in table \'JointOrientationRecognizer\'" 
L" is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::useLocalOrientations::set(System::Boolean value) {
    this[this->tableJointOrientationRecognizer->useLocalOrientationsColumn] = value;
}

inline System::Single NewDataSet::JointOrientationRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableJointOrientationRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'JointOrientationRecognizer\' is DBN" 
L"ull.", 
            e));
    }
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableJointOrientationRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::JointOrientationRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableJointOrientationRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'JointOrientationRecognizer\' is D" 
L"BNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableJointOrientationRecognizer->useFilteredDataColumn] = value;
}

inline System::Int32 NewDataSet::JointOrientationRecognizerRow::JointOrientationRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn]));
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableJointOrientationRecognizer->JointOrientationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::JointOrientationRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableJointOrientationRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'JointOrientationRecognizer\' i" 
L"s DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableJointOrientationRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::JointOrientationRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_JointOrientationRecognizer"])));
}
inline System::Void NewDataSet::JointOrientationRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_JointOrientationRecognizer"]);
}

inline ::System::Boolean NewDataSet::JointOrientationRecognizerRow::IsvisibilityNull() {
    return this->IsNull(this->tableJointOrientationRecognizer->visibilityColumn);
}

inline ::System::Void NewDataSet::JointOrientationRecognizerRow::SetvisibilityNull() {
    this[this->tableJointOrientationRecognizer->visibilityColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointOrientationRecognizerRow::IsuseLocalOrientationsNull() {
    return this->IsNull(this->tableJointOrientationRecognizer->useLocalOrientationsColumn);
}

inline ::System::Void NewDataSet::JointOrientationRecognizerRow::SetuseLocalOrientationsNull() {
    this[this->tableJointOrientationRecognizer->useLocalOrientationsColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointOrientationRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableJointOrientationRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::JointOrientationRecognizerRow::SetminConfidenceNull() {
    this[this->tableJointOrientationRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointOrientationRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableJointOrientationRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::JointOrientationRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableJointOrientationRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::JointOrientationRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableJointOrientationRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::JointOrientationRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableJointOrientationRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointRow^  >^  NewDataSet::JointOrientationRecognizerRow::GetJointRows() {
    if (this->Table->ChildRelations[L"JointOrientationRecognizer_Joint"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointOrientationRecognizer_Joint"])));
    }
}

inline cli::array< NewDataSet::HandJointRow^  >^  NewDataSet::JointOrientationRecognizerRow::GetHandJointRows() {
    if (this->Table->ChildRelations[L"JointOrientationRecognizer_HandJoint"] == nullptr) {
        return gcnew cli::array< NewDataSet::HandJointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::HandJointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointOrientationRecognizer_HandJoint"])));
    }
}

inline cli::array< NewDataSet::MaxDegreesRow^  >^  NewDataSet::JointOrientationRecognizerRow::GetMaxDegreesRows() {
    if (this->Table->ChildRelations[L"JointOrientationRecognizer_MaxDegrees"] == nullptr) {
        return gcnew cli::array< NewDataSet::MaxDegreesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MaxDegreesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointOrientationRecognizer_MaxDegrees"])));
    }
}

inline cli::array< NewDataSet::MinDegreesRow^  >^  NewDataSet::JointOrientationRecognizerRow::GetMinDegreesRows() {
    if (this->Table->ChildRelations[L"JointOrientationRecognizer_MinDegrees"] == nullptr) {
        return gcnew cli::array< NewDataSet::MinDegreesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MinDegreesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointOrientationRecognizer_MinDegrees"])));
    }
}

inline cli::array< NewDataSet::OrientationRow^  >^  NewDataSet::JointOrientationRecognizerRow::GetOrientationRows() {
    if (this->Table->ChildRelations[L"JointOrientationRecognizer_Orientation"] == nullptr) {
        return gcnew cli::array< NewDataSet::OrientationRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::OrientationRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointOrientationRecognizer_Orientation"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::JointOrientationRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"JointOrientationRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"JointOrientationRecognizer_METAINFO"])));
    }
}


inline NewDataSet::MaxDegreesRow::MaxDegreesRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMaxDegrees = (cli::safe_cast<NewDataSet::MaxDegreesDataTable^  >(this->Table));
}

inline System::Single NewDataSet::MaxDegreesRow::x::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxDegrees->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'MaxDegrees\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxDegreesRow::x::set(System::Single value) {
    this[this->tableMaxDegrees->xColumn] = value;
}

inline System::Single NewDataSet::MaxDegreesRow::y::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxDegrees->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'MaxDegrees\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxDegreesRow::y::set(System::Single value) {
    this[this->tableMaxDegrees->yColumn] = value;
}

inline System::Single NewDataSet::MaxDegreesRow::z::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxDegrees->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'MaxDegrees\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MaxDegreesRow::z::set(System::Single value) {
    this[this->tableMaxDegrees->zColumn] = value;
}

inline System::Int32 NewDataSet::MaxDegreesRow::JointOrientationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMaxDegrees->JointOrientationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointOrientationRecognizer_Id\' in table \'MaxDegrees\' is DBN" 
L"ull.", 
            e));
    }
}
inline System::Void NewDataSet::MaxDegreesRow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMaxDegrees->JointOrientationRecognizer_IdColumn] = value;
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::MaxDegreesRow::JointOrientationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointOrientationRecognizer_MaxDegrees"])));
}
inline System::Void NewDataSet::MaxDegreesRow::JointOrientationRecognizerRow::set(NewDataSet::JointOrientationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointOrientationRecognizer_MaxDegrees"]);
}

inline ::System::Boolean NewDataSet::MaxDegreesRow::IsxNull() {
    return this->IsNull(this->tableMaxDegrees->xColumn);
}

inline ::System::Void NewDataSet::MaxDegreesRow::SetxNull() {
    this[this->tableMaxDegrees->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxDegreesRow::IsyNull() {
    return this->IsNull(this->tableMaxDegrees->yColumn);
}

inline ::System::Void NewDataSet::MaxDegreesRow::SetyNull() {
    this[this->tableMaxDegrees->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxDegreesRow::IszNull() {
    return this->IsNull(this->tableMaxDegrees->zColumn);
}

inline ::System::Void NewDataSet::MaxDegreesRow::SetzNull() {
    this[this->tableMaxDegrees->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxDegreesRow::IsJointOrientationRecognizer_IdNull() {
    return this->IsNull(this->tableMaxDegrees->JointOrientationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MaxDegreesRow::SetJointOrientationRecognizer_IdNull() {
    this[this->tableMaxDegrees->JointOrientationRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::MinDegreesRow::MinDegreesRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMinDegrees = (cli::safe_cast<NewDataSet::MinDegreesDataTable^  >(this->Table));
}

inline System::Single NewDataSet::MinDegreesRow::x::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinDegrees->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'MinDegrees\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinDegreesRow::x::set(System::Single value) {
    this[this->tableMinDegrees->xColumn] = value;
}

inline System::Single NewDataSet::MinDegreesRow::y::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinDegrees->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'MinDegrees\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinDegreesRow::y::set(System::Single value) {
    this[this->tableMinDegrees->yColumn] = value;
}

inline System::Single NewDataSet::MinDegreesRow::z::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinDegrees->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'MinDegrees\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::MinDegreesRow::z::set(System::Single value) {
    this[this->tableMinDegrees->zColumn] = value;
}

inline System::Int32 NewDataSet::MinDegreesRow::JointOrientationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMinDegrees->JointOrientationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointOrientationRecognizer_Id\' in table \'MinDegrees\' is DBN" 
L"ull.", 
            e));
    }
}
inline System::Void NewDataSet::MinDegreesRow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableMinDegrees->JointOrientationRecognizer_IdColumn] = value;
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::MinDegreesRow::JointOrientationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointOrientationRecognizer_MinDegrees"])));
}
inline System::Void NewDataSet::MinDegreesRow::JointOrientationRecognizerRow::set(NewDataSet::JointOrientationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointOrientationRecognizer_MinDegrees"]);
}

inline ::System::Boolean NewDataSet::MinDegreesRow::IsxNull() {
    return this->IsNull(this->tableMinDegrees->xColumn);
}

inline ::System::Void NewDataSet::MinDegreesRow::SetxNull() {
    this[this->tableMinDegrees->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinDegreesRow::IsyNull() {
    return this->IsNull(this->tableMinDegrees->yColumn);
}

inline ::System::Void NewDataSet::MinDegreesRow::SetyNull() {
    this[this->tableMinDegrees->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinDegreesRow::IszNull() {
    return this->IsNull(this->tableMinDegrees->zColumn);
}

inline ::System::Void NewDataSet::MinDegreesRow::SetzNull() {
    this[this->tableMinDegrees->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinDegreesRow::IsJointOrientationRecognizer_IdNull() {
    return this->IsNull(this->tableMinDegrees->JointOrientationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MinDegreesRow::SetJointOrientationRecognizer_IdNull() {
    this[this->tableMinDegrees->JointOrientationRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::OrientationRow::OrientationRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableOrientation = (cli::safe_cast<NewDataSet::OrientationDataTable^  >(this->Table));
}

inline System::Single NewDataSet::OrientationRow::x::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableOrientation->xColumn]));
}
inline System::Void NewDataSet::OrientationRow::x::set(System::Single value) {
    this[this->tableOrientation->xColumn] = value;
}

inline System::Single NewDataSet::OrientationRow::y::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableOrientation->yColumn]));
}
inline System::Void NewDataSet::OrientationRow::y::set(System::Single value) {
    this[this->tableOrientation->yColumn] = value;
}

inline System::Single NewDataSet::OrientationRow::z::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableOrientation->zColumn]));
}
inline System::Void NewDataSet::OrientationRow::z::set(System::Single value) {
    this[this->tableOrientation->zColumn] = value;
}

inline System::Single NewDataSet::OrientationRow::maxAngleDifference::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableOrientation->maxAngleDifferenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'maxAngleDifference\' in table \'Orientation\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::OrientationRow::maxAngleDifference::set(System::Single value) {
    this[this->tableOrientation->maxAngleDifferenceColumn] = value;
}

inline System::Int32 NewDataSet::OrientationRow::JointOrientationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableOrientation->JointOrientationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'JointOrientationRecognizer_Id\' in table \'Orientation\' is DB" 
L"Null.", 
            e));
    }
}
inline System::Void NewDataSet::OrientationRow::JointOrientationRecognizer_Id::set(System::Int32 value) {
    this[this->tableOrientation->JointOrientationRecognizer_IdColumn] = value;
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::OrientationRow::JointOrientationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::JointOrientationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"JointOrientationRecognizer_Orientation"])));
}
inline System::Void NewDataSet::OrientationRow::JointOrientationRecognizerRow::set(NewDataSet::JointOrientationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"JointOrientationRecognizer_Orientation"]);
}

inline ::System::Boolean NewDataSet::OrientationRow::IsmaxAngleDifferenceNull() {
    return this->IsNull(this->tableOrientation->maxAngleDifferenceColumn);
}

inline ::System::Void NewDataSet::OrientationRow::SetmaxAngleDifferenceNull() {
    this[this->tableOrientation->maxAngleDifferenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::OrientationRow::IsJointOrientationRecognizer_IdNull() {
    return this->IsNull(this->tableOrientation->JointOrientationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::OrientationRow::SetJointOrientationRecognizer_IdNull() {
    this[this->tableOrientation->JointOrientationRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::LinearMovementRecognizerRow::LinearMovementRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableLinearMovementRecognizer = (cli::safe_cast<NewDataSet::LinearMovementRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::LinearMovementRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableLinearMovementRecognizer->nameColumn]));
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::name::set(System::String^  value) {
    this[this->tableLinearMovementRecognizer->nameColumn] = value;
}

inline System::String^  NewDataSet::LinearMovementRecognizerRow::visibility::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableLinearMovementRecognizer->visibilityColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'visibility\' in table \'LinearMovementRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::visibility::set(System::String^  value) {
    this[this->tableLinearMovementRecognizer->visibilityColumn] = value;
}

inline System::Boolean NewDataSet::LinearMovementRecognizerRow::useLocalPositions::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableLinearMovementRecognizer->useLocalPositionsColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useLocalPositions\' in table \'LinearMovementRecognizer\' is D" 
L"BNull.", 
            e));
    }
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::useLocalPositions::set(System::Boolean value) {
    this[this->tableLinearMovementRecognizer->useLocalPositionsColumn] = value;
}

inline System::Single NewDataSet::LinearMovementRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableLinearMovementRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'LinearMovementRecognizer\' is DBNul" 
L"l.", 
            e));
    }
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableLinearMovementRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::LinearMovementRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableLinearMovementRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'LinearMovementRecognizer\' is DBN" 
L"ull.", 
            e));
    }
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableLinearMovementRecognizer->useFilteredDataColumn] = value;
}

inline System::Boolean NewDataSet::LinearMovementRecognizerRow::useOnlyCorrectDirectionComponent::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableLinearMovementRecognizer->useOnlyCorrectDirectionComponentColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useOnlyCorrectDirectionComponent\' in table \'LinearMovementR" 
L"ecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::useOnlyCorrectDirectionComponent::set(System::Boolean value) {
    this[this->tableLinearMovementRecognizer->useOnlyCorrectDirectionComponentColumn] = value;
}

inline System::Int32 NewDataSet::LinearMovementRecognizerRow::LinearMovementRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn]));
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableLinearMovementRecognizer->LinearMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::LinearMovementRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableLinearMovementRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'LinearMovementRecognizer\' is " 
L"DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableLinearMovementRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::LinearMovementRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_LinearMovementRecognizer"])));
}
inline System::Void NewDataSet::LinearMovementRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_LinearMovementRecognizer"]);
}

inline ::System::Boolean NewDataSet::LinearMovementRecognizerRow::IsvisibilityNull() {
    return this->IsNull(this->tableLinearMovementRecognizer->visibilityColumn);
}

inline ::System::Void NewDataSet::LinearMovementRecognizerRow::SetvisibilityNull() {
    this[this->tableLinearMovementRecognizer->visibilityColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LinearMovementRecognizerRow::IsuseLocalPositionsNull() {
    return this->IsNull(this->tableLinearMovementRecognizer->useLocalPositionsColumn);
}

inline ::System::Void NewDataSet::LinearMovementRecognizerRow::SetuseLocalPositionsNull() {
    this[this->tableLinearMovementRecognizer->useLocalPositionsColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LinearMovementRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableLinearMovementRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::LinearMovementRecognizerRow::SetminConfidenceNull() {
    this[this->tableLinearMovementRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LinearMovementRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableLinearMovementRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::LinearMovementRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableLinearMovementRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LinearMovementRecognizerRow::IsuseOnlyCorrectDirectionComponentNull() {
    return this->IsNull(this->tableLinearMovementRecognizer->useOnlyCorrectDirectionComponentColumn);
}

inline ::System::Void NewDataSet::LinearMovementRecognizerRow::SetuseOnlyCorrectDirectionComponentNull() {
    this[this->tableLinearMovementRecognizer->useOnlyCorrectDirectionComponentColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LinearMovementRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableLinearMovementRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::LinearMovementRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableLinearMovementRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointsRow^  >^  NewDataSet::LinearMovementRecognizerRow::GetJointsRows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_Joints"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointsRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_Joints"])));
    }
}

inline cli::array< NewDataSet::HandJointsRow^  >^  NewDataSet::LinearMovementRecognizerRow::GetHandJointsRows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_HandJoints"] == nullptr) {
        return gcnew cli::array< NewDataSet::HandJointsRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::HandJointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_HandJoints"])));
    }
}

inline cli::array< NewDataSet::DirectionRow^  >^  NewDataSet::LinearMovementRecognizerRow::GetDirectionRows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_Direction"] == nullptr) {
        return gcnew cli::array< NewDataSet::DirectionRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::DirectionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_Direction"])));
    }
}

inline cli::array< NewDataSet::BasicDirectionRow^  >^  NewDataSet::LinearMovementRecognizerRow::GetBasicDirectionRows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_BasicDirection"] == nullptr) {
        return gcnew cli::array< NewDataSet::BasicDirectionRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::BasicDirectionRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_BasicDirection"])));
    }
}

inline cli::array< NewDataSet::SpeedRow^  >^  NewDataSet::LinearMovementRecognizerRow::GetSpeedRows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_Speed"] == nullptr) {
        return gcnew cli::array< NewDataSet::SpeedRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::SpeedRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_Speed"])));
    }
}

inline cli::array< NewDataSet::LengthRow^  >^  NewDataSet::LinearMovementRecognizerRow::GetLengthRows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_Length"] == nullptr) {
        return gcnew cli::array< NewDataSet::LengthRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::LengthRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_Length"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::LinearMovementRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"LinearMovementRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"LinearMovementRecognizer_METAINFO"])));
    }
}


inline NewDataSet::DirectionRow::DirectionRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableDirection = (cli::safe_cast<NewDataSet::DirectionDataTable^  >(this->Table));
}

inline System::Single NewDataSet::DirectionRow::x::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableDirection->xColumn]));
}
inline System::Void NewDataSet::DirectionRow::x::set(System::Single value) {
    this[this->tableDirection->xColumn] = value;
}

inline System::Single NewDataSet::DirectionRow::y::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableDirection->yColumn]));
}
inline System::Void NewDataSet::DirectionRow::y::set(System::Single value) {
    this[this->tableDirection->yColumn] = value;
}

inline System::Single NewDataSet::DirectionRow::z::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableDirection->zColumn]));
}
inline System::Void NewDataSet::DirectionRow::z::set(System::Single value) {
    this[this->tableDirection->zColumn] = value;
}

inline System::Single NewDataSet::DirectionRow::maxAngleDifference::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableDirection->maxAngleDifferenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'maxAngleDifference\' in table \'Direction\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::DirectionRow::maxAngleDifference::set(System::Single value) {
    this[this->tableDirection->maxAngleDifferenceColumn] = value;
}

inline System::Int32 NewDataSet::DirectionRow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableDirection->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'Direction\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::DirectionRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableDirection->LinearMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::DirectionRow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_Direction"])));
}
inline System::Void NewDataSet::DirectionRow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_Direction"]);
}

inline ::System::Boolean NewDataSet::DirectionRow::IsmaxAngleDifferenceNull() {
    return this->IsNull(this->tableDirection->maxAngleDifferenceColumn);
}

inline ::System::Void NewDataSet::DirectionRow::SetmaxAngleDifferenceNull() {
    this[this->tableDirection->maxAngleDifferenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::DirectionRow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableDirection->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::DirectionRow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableDirection->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::BasicDirectionRow::BasicDirectionRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableBasicDirection = (cli::safe_cast<NewDataSet::BasicDirectionDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::BasicDirectionRow::type::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableBasicDirection->typeColumn]));
}
inline System::Void NewDataSet::BasicDirectionRow::type::set(System::String^  value) {
    this[this->tableBasicDirection->typeColumn] = value;
}

inline System::Single NewDataSet::BasicDirectionRow::maxAngleDifference::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableBasicDirection->maxAngleDifferenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'maxAngleDifference\' in table \'BasicDirection\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::BasicDirectionRow::maxAngleDifference::set(System::Single value) {
    this[this->tableBasicDirection->maxAngleDifferenceColumn] = value;
}

inline System::Int32 NewDataSet::BasicDirectionRow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableBasicDirection->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'BasicDirection\' is D" 
L"BNull.", 
            e));
    }
}
inline System::Void NewDataSet::BasicDirectionRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableBasicDirection->LinearMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::BasicDirectionRow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_BasicDirection"])));
}
inline System::Void NewDataSet::BasicDirectionRow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_BasicDirection"]);
}

inline ::System::Boolean NewDataSet::BasicDirectionRow::IsmaxAngleDifferenceNull() {
    return this->IsNull(this->tableBasicDirection->maxAngleDifferenceColumn);
}

inline ::System::Void NewDataSet::BasicDirectionRow::SetmaxAngleDifferenceNull() {
    this[this->tableBasicDirection->maxAngleDifferenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::BasicDirectionRow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableBasicDirection->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::BasicDirectionRow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableBasicDirection->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::SpeedRow::SpeedRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableSpeed = (cli::safe_cast<NewDataSet::SpeedDataTable^  >(this->Table));
}

inline System::Single NewDataSet::SpeedRow::min::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableSpeed->minColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'min\' in table \'Speed\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::SpeedRow::min::set(System::Single value) {
    this[this->tableSpeed->minColumn] = value;
}

inline System::Single NewDataSet::SpeedRow::max::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableSpeed->maxColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'max\' in table \'Speed\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::SpeedRow::max::set(System::Single value) {
    this[this->tableSpeed->maxColumn] = value;
}

inline System::Int32 NewDataSet::SpeedRow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableSpeed->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'Speed\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::SpeedRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableSpeed->LinearMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::SpeedRow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_Speed"])));
}
inline System::Void NewDataSet::SpeedRow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_Speed"]);
}

inline ::System::Boolean NewDataSet::SpeedRow::IsminNull() {
    return this->IsNull(this->tableSpeed->minColumn);
}

inline ::System::Void NewDataSet::SpeedRow::SetminNull() {
    this[this->tableSpeed->minColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::SpeedRow::IsmaxNull() {
    return this->IsNull(this->tableSpeed->maxColumn);
}

inline ::System::Void NewDataSet::SpeedRow::SetmaxNull() {
    this[this->tableSpeed->maxColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::SpeedRow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableSpeed->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::SpeedRow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableSpeed->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::LengthRow::LengthRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableLength = (cli::safe_cast<NewDataSet::LengthDataTable^  >(this->Table));
}

inline System::Single NewDataSet::LengthRow::min::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableLength->minColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'min\' in table \'Length\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::LengthRow::min::set(System::Single value) {
    this[this->tableLength->minColumn] = value;
}

inline System::Single NewDataSet::LengthRow::max::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableLength->maxColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'max\' in table \'Length\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::LengthRow::max::set(System::Single value) {
    this[this->tableLength->maxColumn] = value;
}

inline System::String^  NewDataSet::LengthRow::measuringUnit::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableLength->measuringUnitColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'measuringUnit\' in table \'Length\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::LengthRow::measuringUnit::set(System::String^  value) {
    this[this->tableLength->measuringUnitColumn] = value;
}

inline System::Int32 NewDataSet::LengthRow::LinearMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableLength->LinearMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'LinearMovementRecognizer_Id\' in table \'Length\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::LengthRow::LinearMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableLength->LinearMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::LengthRow::LinearMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::LinearMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"LinearMovementRecognizer_Length"])));
}
inline System::Void NewDataSet::LengthRow::LinearMovementRecognizerRow::set(NewDataSet::LinearMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"LinearMovementRecognizer_Length"]);
}

inline ::System::Boolean NewDataSet::LengthRow::IsminNull() {
    return this->IsNull(this->tableLength->minColumn);
}

inline ::System::Void NewDataSet::LengthRow::SetminNull() {
    this[this->tableLength->minColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LengthRow::IsmaxNull() {
    return this->IsNull(this->tableLength->maxColumn);
}

inline ::System::Void NewDataSet::LengthRow::SetmaxNull() {
    this[this->tableLength->maxColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LengthRow::IsmeasuringUnitNull() {
    return this->IsNull(this->tableLength->measuringUnitColumn);
}

inline ::System::Void NewDataSet::LengthRow::SetmeasuringUnitNull() {
    this[this->tableLength->measuringUnitColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::LengthRow::IsLinearMovementRecognizer_IdNull() {
    return this->IsNull(this->tableLength->LinearMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::LengthRow::SetLinearMovementRecognizer_IdNull() {
    this[this->tableLength->LinearMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::AngularMovementRecognizerRow::AngularMovementRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableAngularMovementRecognizer = (cli::safe_cast<NewDataSet::AngularMovementRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::AngularMovementRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableAngularMovementRecognizer->nameColumn]));
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::name::set(System::String^  value) {
    this[this->tableAngularMovementRecognizer->nameColumn] = value;
}

inline System::String^  NewDataSet::AngularMovementRecognizerRow::visibility::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableAngularMovementRecognizer->visibilityColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'visibility\' in table \'AngularMovementRecognizer\' is DBNull." 
L"", 
            e));
    }
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::visibility::set(System::String^  value) {
    this[this->tableAngularMovementRecognizer->visibilityColumn] = value;
}

inline System::String^  NewDataSet::AngularMovementRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableAngularMovementRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'AngularMovementRecognizer\' is DBNu" 
L"ll.", 
            e));
    }
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::minConfidence::set(System::String^  value) {
    this[this->tableAngularMovementRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::AngularMovementRecognizerRow::useLocalOrientations::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableAngularMovementRecognizer->useLocalOrientationsColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useLocalOrientations\' in table \'AngularMovementRecognizer\' " 
L"is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::useLocalOrientations::set(System::Boolean value) {
    this[this->tableAngularMovementRecognizer->useLocalOrientationsColumn] = value;
}

inline System::Boolean NewDataSet::AngularMovementRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableAngularMovementRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'AngularMovementRecognizer\' is DB" 
L"Null.", 
            e));
    }
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableAngularMovementRecognizer->useFilteredDataColumn] = value;
}

inline System::Int32 NewDataSet::AngularMovementRecognizerRow::AngularMovementRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn]));
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableAngularMovementRecognizer->AngularMovementRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::AngularMovementRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableAngularMovementRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'AngularMovementRecognizer\' is" 
L" DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableAngularMovementRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::AngularMovementRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_AngularMovementRecognizer"])));
}
inline System::Void NewDataSet::AngularMovementRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_AngularMovementRecognizer"]);
}

inline ::System::Boolean NewDataSet::AngularMovementRecognizerRow::IsvisibilityNull() {
    return this->IsNull(this->tableAngularMovementRecognizer->visibilityColumn);
}

inline ::System::Void NewDataSet::AngularMovementRecognizerRow::SetvisibilityNull() {
    this[this->tableAngularMovementRecognizer->visibilityColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::AngularMovementRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableAngularMovementRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::AngularMovementRecognizerRow::SetminConfidenceNull() {
    this[this->tableAngularMovementRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::AngularMovementRecognizerRow::IsuseLocalOrientationsNull() {
    return this->IsNull(this->tableAngularMovementRecognizer->useLocalOrientationsColumn);
}

inline ::System::Void NewDataSet::AngularMovementRecognizerRow::SetuseLocalOrientationsNull() {
    this[this->tableAngularMovementRecognizer->useLocalOrientationsColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::AngularMovementRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableAngularMovementRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::AngularMovementRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableAngularMovementRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::AngularMovementRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableAngularMovementRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::AngularMovementRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableAngularMovementRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointRow^  >^  NewDataSet::AngularMovementRecognizerRow::GetJointRows() {
    if (this->Table->ChildRelations[L"AngularMovementRecognizer_Joint"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AngularMovementRecognizer_Joint"])));
    }
}

inline cli::array< NewDataSet::HandJointRow^  >^  NewDataSet::AngularMovementRecognizerRow::GetHandJointRows() {
    if (this->Table->ChildRelations[L"AngularMovementRecognizer_HandJoint"] == nullptr) {
        return gcnew cli::array< NewDataSet::HandJointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::HandJointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AngularMovementRecognizer_HandJoint"])));
    }
}

inline cli::array< NewDataSet::MaxAngularVelocityRow^  >^  NewDataSet::AngularMovementRecognizerRow::GetMaxAngularVelocityRows() {
    if (this->Table->ChildRelations[L"AngularMovementRecognizer_MaxAngularVelocity"] == nullptr) {
        return gcnew cli::array< NewDataSet::MaxAngularVelocityRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MaxAngularVelocityRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AngularMovementRecognizer_MaxAngularVelocity"])));
    }
}

inline cli::array< NewDataSet::MinAngularVelocityRow^  >^  NewDataSet::AngularMovementRecognizerRow::GetMinAngularVelocityRows() {
    if (this->Table->ChildRelations[L"AngularMovementRecognizer_MinAngularVelocity"] == nullptr) {
        return gcnew cli::array< NewDataSet::MinAngularVelocityRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::MinAngularVelocityRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AngularMovementRecognizer_MinAngularVelocity"])));
    }
}

inline cli::array< NewDataSet::BasicAngularVelocityRow^  >^  NewDataSet::AngularMovementRecognizerRow::GetBasicAngularVelocityRows() {
    if (this->Table->ChildRelations[L"AngularMovementRecognizer_BasicAngularVelocity"] == nullptr) {
        return gcnew cli::array< NewDataSet::BasicAngularVelocityRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::BasicAngularVelocityRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AngularMovementRecognizer_BasicAngularVelocity"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::AngularMovementRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"AngularMovementRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AngularMovementRecognizer_METAINFO"])));
    }
}


inline NewDataSet::MaxAngularVelocityRow::MaxAngularVelocityRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMaxAngularVelocity = (cli::safe_cast<NewDataSet::MaxAngularVelocityDataTable^  >(this->Table));
}

inline System::Single NewDataSet::MaxAngularVelocityRow::x::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxAngularVelocity->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'MaxAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MaxAngularVelocityRow::x::set(System::Single value) {
    this[this->tableMaxAngularVelocity->xColumn] = value;
}

inline System::Single NewDataSet::MaxAngularVelocityRow::y::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxAngularVelocity->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'MaxAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MaxAngularVelocityRow::y::set(System::Single value) {
    this[this->tableMaxAngularVelocity->yColumn] = value;
}

inline System::Single NewDataSet::MaxAngularVelocityRow::z::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMaxAngularVelocity->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'MaxAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MaxAngularVelocityRow::z::set(System::Single value) {
    this[this->tableMaxAngularVelocity->zColumn] = value;
}

inline System::Int32 NewDataSet::MaxAngularVelocityRow::AngularMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMaxAngularVelocity->AngularMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AngularMovementRecognizer_Id\' in table \'MaxAngularVelocity\'" 
L" is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MaxAngularVelocityRow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableMaxAngularVelocity->AngularMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::MaxAngularVelocityRow::AngularMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AngularMovementRecognizer_MaxAngularVelocity"])));
}
inline System::Void NewDataSet::MaxAngularVelocityRow::AngularMovementRecognizerRow::set(NewDataSet::AngularMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AngularMovementRecognizer_MaxAngularVelocity"]);
}

inline ::System::Boolean NewDataSet::MaxAngularVelocityRow::IsxNull() {
    return this->IsNull(this->tableMaxAngularVelocity->xColumn);
}

inline ::System::Void NewDataSet::MaxAngularVelocityRow::SetxNull() {
    this[this->tableMaxAngularVelocity->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxAngularVelocityRow::IsyNull() {
    return this->IsNull(this->tableMaxAngularVelocity->yColumn);
}

inline ::System::Void NewDataSet::MaxAngularVelocityRow::SetyNull() {
    this[this->tableMaxAngularVelocity->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxAngularVelocityRow::IszNull() {
    return this->IsNull(this->tableMaxAngularVelocity->zColumn);
}

inline ::System::Void NewDataSet::MaxAngularVelocityRow::SetzNull() {
    this[this->tableMaxAngularVelocity->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MaxAngularVelocityRow::IsAngularMovementRecognizer_IdNull() {
    return this->IsNull(this->tableMaxAngularVelocity->AngularMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MaxAngularVelocityRow::SetAngularMovementRecognizer_IdNull() {
    this[this->tableMaxAngularVelocity->AngularMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::MinAngularVelocityRow::MinAngularVelocityRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableMinAngularVelocity = (cli::safe_cast<NewDataSet::MinAngularVelocityDataTable^  >(this->Table));
}

inline System::Single NewDataSet::MinAngularVelocityRow::x::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinAngularVelocity->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'MinAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MinAngularVelocityRow::x::set(System::Single value) {
    this[this->tableMinAngularVelocity->xColumn] = value;
}

inline System::Single NewDataSet::MinAngularVelocityRow::y::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinAngularVelocity->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'MinAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MinAngularVelocityRow::y::set(System::Single value) {
    this[this->tableMinAngularVelocity->yColumn] = value;
}

inline System::Single NewDataSet::MinAngularVelocityRow::z::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableMinAngularVelocity->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'MinAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MinAngularVelocityRow::z::set(System::Single value) {
    this[this->tableMinAngularVelocity->zColumn] = value;
}

inline System::Int32 NewDataSet::MinAngularVelocityRow::AngularMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableMinAngularVelocity->AngularMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AngularMovementRecognizer_Id\' in table \'MinAngularVelocity\'" 
L" is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::MinAngularVelocityRow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableMinAngularVelocity->AngularMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::MinAngularVelocityRow::AngularMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AngularMovementRecognizer_MinAngularVelocity"])));
}
inline System::Void NewDataSet::MinAngularVelocityRow::AngularMovementRecognizerRow::set(NewDataSet::AngularMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AngularMovementRecognizer_MinAngularVelocity"]);
}

inline ::System::Boolean NewDataSet::MinAngularVelocityRow::IsxNull() {
    return this->IsNull(this->tableMinAngularVelocity->xColumn);
}

inline ::System::Void NewDataSet::MinAngularVelocityRow::SetxNull() {
    this[this->tableMinAngularVelocity->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinAngularVelocityRow::IsyNull() {
    return this->IsNull(this->tableMinAngularVelocity->yColumn);
}

inline ::System::Void NewDataSet::MinAngularVelocityRow::SetyNull() {
    this[this->tableMinAngularVelocity->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinAngularVelocityRow::IszNull() {
    return this->IsNull(this->tableMinAngularVelocity->zColumn);
}

inline ::System::Void NewDataSet::MinAngularVelocityRow::SetzNull() {
    this[this->tableMinAngularVelocity->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::MinAngularVelocityRow::IsAngularMovementRecognizer_IdNull() {
    return this->IsNull(this->tableMinAngularVelocity->AngularMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::MinAngularVelocityRow::SetAngularMovementRecognizer_IdNull() {
    this[this->tableMinAngularVelocity->AngularMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::BasicAngularVelocityRow::BasicAngularVelocityRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableBasicAngularVelocity = (cli::safe_cast<NewDataSet::BasicAngularVelocityDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::BasicAngularVelocityRow::type::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableBasicAngularVelocity->typeColumn]));
}
inline System::Void NewDataSet::BasicAngularVelocityRow::type::set(System::String^  value) {
    this[this->tableBasicAngularVelocity->typeColumn] = value;
}

inline System::Single NewDataSet::BasicAngularVelocityRow::min::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableBasicAngularVelocity->minColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'min\' in table \'BasicAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::BasicAngularVelocityRow::min::set(System::Single value) {
    this[this->tableBasicAngularVelocity->minColumn] = value;
}

inline System::Single NewDataSet::BasicAngularVelocityRow::max::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableBasicAngularVelocity->maxColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'max\' in table \'BasicAngularVelocity\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::BasicAngularVelocityRow::max::set(System::Single value) {
    this[this->tableBasicAngularVelocity->maxColumn] = value;
}

inline System::Int32 NewDataSet::BasicAngularVelocityRow::AngularMovementRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableBasicAngularVelocity->AngularMovementRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AngularMovementRecognizer_Id\' in table \'BasicAngularVelocit" 
L"y\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::BasicAngularVelocityRow::AngularMovementRecognizer_Id::set(System::Int32 value) {
    this[this->tableBasicAngularVelocity->AngularMovementRecognizer_IdColumn] = value;
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::BasicAngularVelocityRow::AngularMovementRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::AngularMovementRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AngularMovementRecognizer_BasicAngularVelocity"])));
}
inline System::Void NewDataSet::BasicAngularVelocityRow::AngularMovementRecognizerRow::set(NewDataSet::AngularMovementRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AngularMovementRecognizer_BasicAngularVelocity"]);
}

inline ::System::Boolean NewDataSet::BasicAngularVelocityRow::IsminNull() {
    return this->IsNull(this->tableBasicAngularVelocity->minColumn);
}

inline ::System::Void NewDataSet::BasicAngularVelocityRow::SetminNull() {
    this[this->tableBasicAngularVelocity->minColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::BasicAngularVelocityRow::IsmaxNull() {
    return this->IsNull(this->tableBasicAngularVelocity->maxColumn);
}

inline ::System::Void NewDataSet::BasicAngularVelocityRow::SetmaxNull() {
    this[this->tableBasicAngularVelocity->maxColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::BasicAngularVelocityRow::IsAngularMovementRecognizer_IdNull() {
    return this->IsNull(this->tableBasicAngularVelocity->AngularMovementRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::BasicAngularVelocityRow::SetAngularMovementRecognizer_IdNull() {
    this[this->tableBasicAngularVelocity->AngularMovementRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::FingerCountRecognizerRow::FingerCountRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableFingerCountRecognizer = (cli::safe_cast<NewDataSet::FingerCountRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::FingerCountRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableFingerCountRecognizer->nameColumn]));
}
inline System::Void NewDataSet::FingerCountRecognizerRow::name::set(System::String^  value) {
    this[this->tableFingerCountRecognizer->nameColumn] = value;
}

inline System::String^  NewDataSet::FingerCountRecognizerRow::visibility::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableFingerCountRecognizer->visibilityColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'visibility\' in table \'FingerCountRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRecognizerRow::visibility::set(System::String^  value) {
    this[this->tableFingerCountRecognizer->visibilityColumn] = value;
}

inline System::Single NewDataSet::FingerCountRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableFingerCountRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'FingerCountRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableFingerCountRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::FingerCountRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableFingerCountRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'FingerCountRecognizer\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableFingerCountRecognizer->useFilteredDataColumn] = value;
}

inline System::Int32 NewDataSet::FingerCountRecognizerRow::FingerCountRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn]));
}
inline System::Void NewDataSet::FingerCountRecognizerRow::FingerCountRecognizer_Id::set(System::Int32 value) {
    this[this->tableFingerCountRecognizer->FingerCountRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::FingerCountRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableFingerCountRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'FingerCountRecognizer\' is DBN" 
L"ull.", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableFingerCountRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::FingerCountRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_FingerCountRecognizer"])));
}
inline System::Void NewDataSet::FingerCountRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_FingerCountRecognizer"]);
}

inline ::System::Boolean NewDataSet::FingerCountRecognizerRow::IsvisibilityNull() {
    return this->IsNull(this->tableFingerCountRecognizer->visibilityColumn);
}

inline ::System::Void NewDataSet::FingerCountRecognizerRow::SetvisibilityNull() {
    this[this->tableFingerCountRecognizer->visibilityColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableFingerCountRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::FingerCountRecognizerRow::SetminConfidenceNull() {
    this[this->tableFingerCountRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableFingerCountRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::FingerCountRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableFingerCountRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableFingerCountRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::FingerCountRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableFingerCountRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointRow^  >^  NewDataSet::FingerCountRecognizerRow::GetJointRows() {
    if (this->Table->ChildRelations[L"FingerCountRecognizer_Joint"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FingerCountRecognizer_Joint"])));
    }
}

inline cli::array< NewDataSet::FingerCountRow^  >^  NewDataSet::FingerCountRecognizerRow::GetFingerCountRows() {
    if (this->Table->ChildRelations[L"FingerCountRecognizer_FingerCount"] == nullptr) {
        return gcnew cli::array< NewDataSet::FingerCountRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::FingerCountRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FingerCountRecognizer_FingerCount"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::FingerCountRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"FingerCountRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"FingerCountRecognizer_METAINFO"])));
    }
}


inline NewDataSet::FingerCountRow::FingerCountRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableFingerCount = (cli::safe_cast<NewDataSet::FingerCountDataTable^  >(this->Table));
}

inline System::Int64 NewDataSet::FingerCountRow::min::get() {
    try {
        return (cli::safe_cast<::System::Int64 >(this[this->tableFingerCount->minColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'min\' in table \'FingerCount\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::FingerCountRow::min::set(System::Int64 value) {
    this[this->tableFingerCount->minColumn] = value;
}

inline System::Int64 NewDataSet::FingerCountRow::max::get() {
    try {
        return (cli::safe_cast<::System::Int64 >(this[this->tableFingerCount->maxColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'max\' in table \'FingerCount\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::FingerCountRow::max::set(System::Int64 value) {
    this[this->tableFingerCount->maxColumn] = value;
}

inline System::Boolean NewDataSet::FingerCountRow::useMedianCalculation::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableFingerCount->useMedianCalculationColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useMedianCalculation\' in table \'FingerCount\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRow::useMedianCalculation::set(System::Boolean value) {
    this[this->tableFingerCount->useMedianCalculationColumn] = value;
}

inline System::UInt32 NewDataSet::FingerCountRow::medianWindowSize::get() {
    try {
        return (cli::safe_cast<::System::UInt32 >(this[this->tableFingerCount->medianWindowSizeColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'medianWindowSize\' in table \'FingerCount\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRow::medianWindowSize::set(System::UInt32 value) {
    this[this->tableFingerCount->medianWindowSizeColumn] = value;
}

inline System::Int32 NewDataSet::FingerCountRow::FingerCountRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableFingerCount->FingerCountRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FingerCountRecognizer_Id\' in table \'FingerCount\' is DBNull." 
L"", 
            e));
    }
}
inline System::Void NewDataSet::FingerCountRow::FingerCountRecognizer_Id::set(System::Int32 value) {
    this[this->tableFingerCount->FingerCountRecognizer_IdColumn] = value;
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::FingerCountRow::FingerCountRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::FingerCountRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FingerCountRecognizer_FingerCount"])));
}
inline System::Void NewDataSet::FingerCountRow::FingerCountRecognizerRow::set(NewDataSet::FingerCountRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FingerCountRecognizer_FingerCount"]);
}

inline ::System::Boolean NewDataSet::FingerCountRow::IsminNull() {
    return this->IsNull(this->tableFingerCount->minColumn);
}

inline ::System::Void NewDataSet::FingerCountRow::SetminNull() {
    this[this->tableFingerCount->minColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRow::IsmaxNull() {
    return this->IsNull(this->tableFingerCount->maxColumn);
}

inline ::System::Void NewDataSet::FingerCountRow::SetmaxNull() {
    this[this->tableFingerCount->maxColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRow::IsuseMedianCalculationNull() {
    return this->IsNull(this->tableFingerCount->useMedianCalculationColumn);
}

inline ::System::Void NewDataSet::FingerCountRow::SetuseMedianCalculationNull() {
    this[this->tableFingerCount->useMedianCalculationColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRow::IsmedianWindowSizeNull() {
    return this->IsNull(this->tableFingerCount->medianWindowSizeColumn);
}

inline ::System::Void NewDataSet::FingerCountRow::SetmedianWindowSizeNull() {
    this[this->tableFingerCount->medianWindowSizeColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::FingerCountRow::IsFingerCountRecognizer_IdNull() {
    return this->IsNull(this->tableFingerCount->FingerCountRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::FingerCountRow::SetFingerCountRecognizer_IdNull() {
    this[this->tableFingerCount->FingerCountRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::TemplateRecognizerRow::TemplateRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableTemplateRecognizer = (cli::safe_cast<NewDataSet::TemplateRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::TemplateRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableTemplateRecognizer->nameColumn]));
}
inline System::Void NewDataSet::TemplateRecognizerRow::name::set(System::String^  value) {
    this[this->tableTemplateRecognizer->nameColumn] = value;
}

inline System::String^  NewDataSet::TemplateRecognizerRow::visibility::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableTemplateRecognizer->visibilityColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'visibility\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::visibility::set(System::String^  value) {
    this[this->tableTemplateRecognizer->visibilityColumn] = value;
}

inline System::Single NewDataSet::TemplateRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableTemplateRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableTemplateRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::TemplateRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableTemplateRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableTemplateRecognizer->useFilteredDataColumn] = value;
}

inline System::Boolean NewDataSet::TemplateRecognizerRow::useLocalTransformations::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableTemplateRecognizer->useLocalTransformationsColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useLocalTransformations\' in table \'TemplateRecognizer\' is D" 
L"BNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::useLocalTransformations::set(System::Boolean value) {
    this[this->tableTemplateRecognizer->useLocalTransformationsColumn] = value;
}

inline System::String^  NewDataSet::TemplateRecognizerRow::measuringUnit::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableTemplateRecognizer->measuringUnitColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'measuringUnit\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::measuringUnit::set(System::String^  value) {
    this[this->tableTemplateRecognizer->measuringUnitColumn] = value;
}

inline System::Boolean NewDataSet::TemplateRecognizerRow::useOrientations::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableTemplateRecognizer->useOrientationsColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useOrientations\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::useOrientations::set(System::Boolean value) {
    this[this->tableTemplateRecognizer->useOrientationsColumn] = value;
}

inline System::Boolean NewDataSet::TemplateRecognizerRow::useDTW::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableTemplateRecognizer->useDTWColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useDTW\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::useDTW::set(System::Boolean value) {
    this[this->tableTemplateRecognizer->useDTWColumn] = value;
}

inline System::Boolean NewDataSet::TemplateRecognizerRow::applyResampling::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableTemplateRecognizer->applyResamplingColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'applyResampling\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::applyResampling::set(System::Boolean value) {
    this[this->tableTemplateRecognizer->applyResamplingColumn] = value;
}

inline System::String^  NewDataSet::TemplateRecognizerRow::stochasticModel::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableTemplateRecognizer->stochasticModelColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'stochasticModel\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::stochasticModel::set(System::String^  value) {
    this[this->tableTemplateRecognizer->stochasticModelColumn] = value;
}

inline System::UInt32 NewDataSet::TemplateRecognizerRow::numGMRStates::get() {
    try {
        return (cli::safe_cast<::System::UInt32 >(this[this->tableTemplateRecognizer->numGMRStatesColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'numGMRStates\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::numGMRStates::set(System::UInt32 value) {
    this[this->tableTemplateRecognizer->numGMRStatesColumn] = value;
}

inline System::Single NewDataSet::TemplateRecognizerRow::maxDistance::get() {
    return (cli::safe_cast<::System::Single >(this[this->tableTemplateRecognizer->maxDistanceColumn]));
}
inline System::Void NewDataSet::TemplateRecognizerRow::maxDistance::set(System::Single value) {
    this[this->tableTemplateRecognizer->maxDistanceColumn] = value;
}

inline System::String^  NewDataSet::TemplateRecognizerRow::distanceMeasure::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableTemplateRecognizer->distanceMeasureColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'distanceMeasure\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::distanceMeasure::set(System::String^  value) {
    this[this->tableTemplateRecognizer->distanceMeasureColumn] = value;
}

inline System::Single NewDataSet::TemplateRecognizerRow::maxRotation::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableTemplateRecognizer->maxRotationColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'maxRotation\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::maxRotation::set(System::Single value) {
    this[this->tableTemplateRecognizer->maxRotationColumn] = value;
}

inline System::Boolean NewDataSet::TemplateRecognizerRow::aspectInvariant::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableTemplateRecognizer->aspectInvariantColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'aspectInvariant\' in table \'TemplateRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::aspectInvariant::set(System::Boolean value) {
    this[this->tableTemplateRecognizer->aspectInvariantColumn] = value;
}

inline System::Int32 NewDataSet::TemplateRecognizerRow::TemplateRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableTemplateRecognizer->TemplateRecognizer_IdColumn]));
}
inline System::Void NewDataSet::TemplateRecognizerRow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableTemplateRecognizer->TemplateRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::TemplateRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableTemplateRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'TemplateRecognizer\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::TemplateRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableTemplateRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::TemplateRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_TemplateRecognizer"])));
}
inline System::Void NewDataSet::TemplateRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_TemplateRecognizer"]);
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsvisibilityNull() {
    return this->IsNull(this->tableTemplateRecognizer->visibilityColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetvisibilityNull() {
    this[this->tableTemplateRecognizer->visibilityColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableTemplateRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetminConfidenceNull() {
    this[this->tableTemplateRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableTemplateRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableTemplateRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsuseLocalTransformationsNull() {
    return this->IsNull(this->tableTemplateRecognizer->useLocalTransformationsColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetuseLocalTransformationsNull() {
    this[this->tableTemplateRecognizer->useLocalTransformationsColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsmeasuringUnitNull() {
    return this->IsNull(this->tableTemplateRecognizer->measuringUnitColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetmeasuringUnitNull() {
    this[this->tableTemplateRecognizer->measuringUnitColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsuseOrientationsNull() {
    return this->IsNull(this->tableTemplateRecognizer->useOrientationsColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetuseOrientationsNull() {
    this[this->tableTemplateRecognizer->useOrientationsColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsuseDTWNull() {
    return this->IsNull(this->tableTemplateRecognizer->useDTWColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetuseDTWNull() {
    this[this->tableTemplateRecognizer->useDTWColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsapplyResamplingNull() {
    return this->IsNull(this->tableTemplateRecognizer->applyResamplingColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetapplyResamplingNull() {
    this[this->tableTemplateRecognizer->applyResamplingColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsstochasticModelNull() {
    return this->IsNull(this->tableTemplateRecognizer->stochasticModelColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetstochasticModelNull() {
    this[this->tableTemplateRecognizer->stochasticModelColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsnumGMRStatesNull() {
    return this->IsNull(this->tableTemplateRecognizer->numGMRStatesColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetnumGMRStatesNull() {
    this[this->tableTemplateRecognizer->numGMRStatesColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsdistanceMeasureNull() {
    return this->IsNull(this->tableTemplateRecognizer->distanceMeasureColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetdistanceMeasureNull() {
    this[this->tableTemplateRecognizer->distanceMeasureColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsmaxRotationNull() {
    return this->IsNull(this->tableTemplateRecognizer->maxRotationColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetmaxRotationNull() {
    this[this->tableTemplateRecognizer->maxRotationColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsaspectInvariantNull() {
    return this->IsNull(this->tableTemplateRecognizer->aspectInvariantColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetaspectInvariantNull() {
    this[this->tableTemplateRecognizer->aspectInvariantColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TemplateRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableTemplateRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::TemplateRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableTemplateRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::JointsRow^  >^  NewDataSet::TemplateRecognizerRow::GetJointsRows() {
    if (this->Table->ChildRelations[L"TemplateRecognizer_Joints"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointsRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TemplateRecognizer_Joints"])));
    }
}

inline cli::array< NewDataSet::JointRow^  >^  NewDataSet::TemplateRecognizerRow::GetJointRows() {
    if (this->Table->ChildRelations[L"TemplateRecognizer_Joint"] == nullptr) {
        return gcnew cli::array< NewDataSet::JointRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::JointRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TemplateRecognizer_Joint"])));
    }
}

inline cli::array< NewDataSet::HandJointsRow^  >^  NewDataSet::TemplateRecognizerRow::GetHandJointsRows() {
    if (this->Table->ChildRelations[L"TemplateRecognizer_HandJoints"] == nullptr) {
        return gcnew cli::array< NewDataSet::HandJointsRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::HandJointsRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TemplateRecognizer_HandJoints"])));
    }
}

inline cli::array< NewDataSet::TrainingDataRow^  >^  NewDataSet::TemplateRecognizerRow::GetTrainingDataRows() {
    if (this->Table->ChildRelations[L"TemplateRecognizer_TrainingData"] == nullptr) {
        return gcnew cli::array< NewDataSet::TrainingDataRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::TrainingDataRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TemplateRecognizer_TrainingData"])));
    }
}

inline cli::array< NewDataSet::IgnoreAxesRow^  >^  NewDataSet::TemplateRecognizerRow::GetIgnoreAxesRows() {
    if (this->Table->ChildRelations[L"TemplateRecognizer_IgnoreAxes"] == nullptr) {
        return gcnew cli::array< NewDataSet::IgnoreAxesRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::IgnoreAxesRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TemplateRecognizer_IgnoreAxes"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::TemplateRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"TemplateRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"TemplateRecognizer_METAINFO"])));
    }
}


inline NewDataSet::TrainingDataRow::TrainingDataRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableTrainingData = (cli::safe_cast<NewDataSet::TrainingDataDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::TrainingDataRow::file::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableTrainingData->fileColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'file\' in table \'TrainingData\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TrainingDataRow::file::set(System::String^  value) {
    this[this->tableTrainingData->fileColumn] = value;
}

inline System::Int32 NewDataSet::TrainingDataRow::start::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableTrainingData->startColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'start\' in table \'TrainingData\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TrainingDataRow::start::set(System::Int32 value) {
    this[this->tableTrainingData->startColumn] = value;
}

inline System::Int32 NewDataSet::TrainingDataRow::end::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableTrainingData->endColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'end\' in table \'TrainingData\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TrainingDataRow::end::set(System::Int32 value) {
    this[this->tableTrainingData->endColumn] = value;
}

inline System::Int32 NewDataSet::TrainingDataRow::TemplateRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableTrainingData->TemplateRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TemplateRecognizer_Id\' in table \'TrainingData\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::TrainingDataRow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableTrainingData->TemplateRecognizer_IdColumn] = value;
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::TrainingDataRow::TemplateRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TemplateRecognizer_TrainingData"])));
}
inline System::Void NewDataSet::TrainingDataRow::TemplateRecognizerRow::set(NewDataSet::TemplateRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"TemplateRecognizer_TrainingData"]);
}

inline ::System::Boolean NewDataSet::TrainingDataRow::IsfileNull() {
    return this->IsNull(this->tableTrainingData->fileColumn);
}

inline ::System::Void NewDataSet::TrainingDataRow::SetfileNull() {
    this[this->tableTrainingData->fileColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TrainingDataRow::IsstartNull() {
    return this->IsNull(this->tableTrainingData->startColumn);
}

inline ::System::Void NewDataSet::TrainingDataRow::SetstartNull() {
    this[this->tableTrainingData->startColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TrainingDataRow::IsendNull() {
    return this->IsNull(this->tableTrainingData->endColumn);
}

inline ::System::Void NewDataSet::TrainingDataRow::SetendNull() {
    this[this->tableTrainingData->endColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::TrainingDataRow::IsTemplateRecognizer_IdNull() {
    return this->IsNull(this->tableTrainingData->TemplateRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::TrainingDataRow::SetTemplateRecognizer_IdNull() {
    this[this->tableTrainingData->TemplateRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::IgnoreAxesRow::IgnoreAxesRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableIgnoreAxes = (cli::safe_cast<NewDataSet::IgnoreAxesDataTable^  >(this->Table));
}

inline System::Boolean NewDataSet::IgnoreAxesRow::x::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableIgnoreAxes->xColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'x\' in table \'IgnoreAxes\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::IgnoreAxesRow::x::set(System::Boolean value) {
    this[this->tableIgnoreAxes->xColumn] = value;
}

inline System::Boolean NewDataSet::IgnoreAxesRow::y::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableIgnoreAxes->yColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'y\' in table \'IgnoreAxes\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::IgnoreAxesRow::y::set(System::Boolean value) {
    this[this->tableIgnoreAxes->yColumn] = value;
}

inline System::Boolean NewDataSet::IgnoreAxesRow::z::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableIgnoreAxes->zColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'z\' in table \'IgnoreAxes\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::IgnoreAxesRow::z::set(System::Boolean value) {
    this[this->tableIgnoreAxes->zColumn] = value;
}

inline System::Int32 NewDataSet::IgnoreAxesRow::TemplateRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableIgnoreAxes->TemplateRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'TemplateRecognizer_Id\' in table \'IgnoreAxes\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::IgnoreAxesRow::TemplateRecognizer_Id::set(System::Int32 value) {
    this[this->tableIgnoreAxes->TemplateRecognizer_IdColumn] = value;
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::IgnoreAxesRow::TemplateRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::TemplateRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"TemplateRecognizer_IgnoreAxes"])));
}
inline System::Void NewDataSet::IgnoreAxesRow::TemplateRecognizerRow::set(NewDataSet::TemplateRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"TemplateRecognizer_IgnoreAxes"]);
}

inline ::System::Boolean NewDataSet::IgnoreAxesRow::IsxNull() {
    return this->IsNull(this->tableIgnoreAxes->xColumn);
}

inline ::System::Void NewDataSet::IgnoreAxesRow::SetxNull() {
    this[this->tableIgnoreAxes->xColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::IgnoreAxesRow::IsyNull() {
    return this->IsNull(this->tableIgnoreAxes->yColumn);
}

inline ::System::Void NewDataSet::IgnoreAxesRow::SetyNull() {
    this[this->tableIgnoreAxes->yColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::IgnoreAxesRow::IszNull() {
    return this->IsNull(this->tableIgnoreAxes->zColumn);
}

inline ::System::Void NewDataSet::IgnoreAxesRow::SetzNull() {
    this[this->tableIgnoreAxes->zColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::IgnoreAxesRow::IsTemplateRecognizer_IdNull() {
    return this->IsNull(this->tableIgnoreAxes->TemplateRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::IgnoreAxesRow::SetTemplateRecognizer_IdNull() {
    this[this->tableIgnoreAxes->TemplateRecognizer_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::CombinationRecognizerRow::CombinationRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableCombinationRecognizer = (cli::safe_cast<NewDataSet::CombinationRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::CombinationRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableCombinationRecognizer->nameColumn]));
}
inline System::Void NewDataSet::CombinationRecognizerRow::name::set(System::String^  value) {
    this[this->tableCombinationRecognizer->nameColumn] = value;
}

inline System::Boolean NewDataSet::CombinationRecognizerRow::waitUntilLastStateRecognizersStop::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableCombinationRecognizer->waitUntilLastStateRecognizersStopColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'waitUntilLastStateRecognizersStop\' in table \'CombinationRec" 
L"ognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::CombinationRecognizerRow::waitUntilLastStateRecognizersStop::set(System::Boolean value) {
    this[this->tableCombinationRecognizer->waitUntilLastStateRecognizersStopColumn] = value;
}

inline System::Int32 NewDataSet::CombinationRecognizerRow::CombinationRecognizer_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableCombinationRecognizer->CombinationRecognizer_IdColumn]));
}
inline System::Void NewDataSet::CombinationRecognizerRow::CombinationRecognizer_Id::set(System::Int32 value) {
    this[this->tableCombinationRecognizer->CombinationRecognizer_IdColumn] = value;
}

inline System::Int32 NewDataSet::CombinationRecognizerRow::FubiRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableCombinationRecognizer->FubiRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'FubiRecognizers_Id\' in table \'CombinationRecognizer\' is DBN" 
L"ull.", 
            e));
    }
}
inline System::Void NewDataSet::CombinationRecognizerRow::FubiRecognizers_Id::set(System::Int32 value) {
    this[this->tableCombinationRecognizer->FubiRecognizers_IdColumn] = value;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::CombinationRecognizerRow::FubiRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::FubiRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"FubiRecognizers_CombinationRecognizer"])));
}
inline System::Void NewDataSet::CombinationRecognizerRow::FubiRecognizersRow::set(NewDataSet::FubiRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"FubiRecognizers_CombinationRecognizer"]);
}

inline ::System::Boolean NewDataSet::CombinationRecognizerRow::IswaitUntilLastStateRecognizersStopNull() {
    return this->IsNull(this->tableCombinationRecognizer->waitUntilLastStateRecognizersStopColumn);
}

inline ::System::Void NewDataSet::CombinationRecognizerRow::SetwaitUntilLastStateRecognizersStopNull() {
    this[this->tableCombinationRecognizer->waitUntilLastStateRecognizersStopColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::CombinationRecognizerRow::IsFubiRecognizers_IdNull() {
    return this->IsNull(this->tableCombinationRecognizer->FubiRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::CombinationRecognizerRow::SetFubiRecognizers_IdNull() {
    this[this->tableCombinationRecognizer->FubiRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::StateRow^  >^  NewDataSet::CombinationRecognizerRow::GetStateRows() {
    if (this->Table->ChildRelations[L"CombinationRecognizer_State"] == nullptr) {
        return gcnew cli::array< NewDataSet::StateRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::StateRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"CombinationRecognizer_State"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::CombinationRecognizerRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"CombinationRecognizer_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"CombinationRecognizer_METAINFO"])));
    }
}


inline NewDataSet::StateRow::StateRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableState = (cli::safe_cast<NewDataSet::StateDataTable^  >(this->Table));
}

inline System::Single NewDataSet::StateRow::minDuration::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableState->minDurationColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minDuration\' in table \'State\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::StateRow::minDuration::set(System::Single value) {
    this[this->tableState->minDurationColumn] = value;
}

inline System::Single NewDataSet::StateRow::maxDuration::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableState->maxDurationColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'maxDuration\' in table \'State\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::StateRow::maxDuration::set(System::Single value) {
    this[this->tableState->maxDurationColumn] = value;
}

inline System::Single NewDataSet::StateRow::timeForTransition::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableState->timeForTransitionColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'timeForTransition\' in table \'State\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::StateRow::timeForTransition::set(System::Single value) {
    this[this->tableState->timeForTransitionColumn] = value;
}

inline System::Single NewDataSet::StateRow::maxInterruptionTime::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableState->maxInterruptionTimeColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'maxInterruptionTime\' in table \'State\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::StateRow::maxInterruptionTime::set(System::Single value) {
    this[this->tableState->maxInterruptionTimeColumn] = value;
}

inline System::Boolean NewDataSet::StateRow::noInterruptionBeforeMinDuration::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableState->noInterruptionBeforeMinDurationColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'noInterruptionBeforeMinDuration\' in table \'State\' is DBNull" 
L".", 
            e));
    }
}
inline System::Void NewDataSet::StateRow::noInterruptionBeforeMinDuration::set(System::Boolean value) {
    this[this->tableState->noInterruptionBeforeMinDurationColumn] = value;
}

inline System::String^  NewDataSet::StateRow::onFail::get() {
    try {
        return (cli::safe_cast<::System::String^  >(this[this->tableState->onFailColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'onFail\' in table \'State\' is DBNull.", e));
    }
}
inline System::Void NewDataSet::StateRow::onFail::set(System::String^  value) {
    this[this->tableState->onFailColumn] = value;
}

inline System::Int32 NewDataSet::StateRow::State_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableState->State_IdColumn]));
}
inline System::Void NewDataSet::StateRow::State_Id::set(System::Int32 value) {
    this[this->tableState->State_IdColumn] = value;
}

inline System::Int32 NewDataSet::StateRow::CombinationRecognizer_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableState->CombinationRecognizer_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'CombinationRecognizer_Id\' in table \'State\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::StateRow::CombinationRecognizer_Id::set(System::Int32 value) {
    this[this->tableState->CombinationRecognizer_IdColumn] = value;
}

inline NewDataSet::CombinationRecognizerRow^  NewDataSet::StateRow::CombinationRecognizerRow::get() {
    return (cli::safe_cast<NewDataSet::CombinationRecognizerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"CombinationRecognizer_State"])));
}
inline System::Void NewDataSet::StateRow::CombinationRecognizerRow::set(NewDataSet::CombinationRecognizerRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"CombinationRecognizer_State"]);
}

inline ::System::Boolean NewDataSet::StateRow::IsminDurationNull() {
    return this->IsNull(this->tableState->minDurationColumn);
}

inline ::System::Void NewDataSet::StateRow::SetminDurationNull() {
    this[this->tableState->minDurationColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::StateRow::IsmaxDurationNull() {
    return this->IsNull(this->tableState->maxDurationColumn);
}

inline ::System::Void NewDataSet::StateRow::SetmaxDurationNull() {
    this[this->tableState->maxDurationColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::StateRow::IstimeForTransitionNull() {
    return this->IsNull(this->tableState->timeForTransitionColumn);
}

inline ::System::Void NewDataSet::StateRow::SettimeForTransitionNull() {
    this[this->tableState->timeForTransitionColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::StateRow::IsmaxInterruptionTimeNull() {
    return this->IsNull(this->tableState->maxInterruptionTimeColumn);
}

inline ::System::Void NewDataSet::StateRow::SetmaxInterruptionTimeNull() {
    this[this->tableState->maxInterruptionTimeColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::StateRow::IsnoInterruptionBeforeMinDurationNull() {
    return this->IsNull(this->tableState->noInterruptionBeforeMinDurationColumn);
}

inline ::System::Void NewDataSet::StateRow::SetnoInterruptionBeforeMinDurationNull() {
    this[this->tableState->noInterruptionBeforeMinDurationColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::StateRow::IsonFailNull() {
    return this->IsNull(this->tableState->onFailColumn);
}

inline ::System::Void NewDataSet::StateRow::SetonFailNull() {
    this[this->tableState->onFailColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::StateRow::IsCombinationRecognizer_IdNull() {
    return this->IsNull(this->tableState->CombinationRecognizer_IdColumn);
}

inline ::System::Void NewDataSet::StateRow::SetCombinationRecognizer_IdNull() {
    this[this->tableState->CombinationRecognizer_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::RecognizerRow^  >^  NewDataSet::StateRow::GetRecognizerRows() {
    if (this->Table->ChildRelations[L"State_Recognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::RecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::RecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"State_Recognizer"])));
    }
}

inline cli::array< NewDataSet::NotRecognizerRow^  >^  NewDataSet::StateRow::GetNotRecognizerRows() {
    if (this->Table->ChildRelations[L"State_NotRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::NotRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::NotRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"State_NotRecognizer"])));
    }
}

inline cli::array< NewDataSet::AlternativeRecognizersRow^  >^  NewDataSet::StateRow::GetAlternativeRecognizersRows() {
    if (this->Table->ChildRelations[L"State_AlternativeRecognizers"] == nullptr) {
        return gcnew cli::array< NewDataSet::AlternativeRecognizersRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::AlternativeRecognizersRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"State_AlternativeRecognizers"])));
    }
}

inline cli::array< NewDataSet::METAINFORow^  >^  NewDataSet::StateRow::GetMETAINFORows() {
    if (this->Table->ChildRelations[L"State_METAINFO"] == nullptr) {
        return gcnew cli::array< NewDataSet::METAINFORow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::METAINFORow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"State_METAINFO"])));
    }
}


inline NewDataSet::RecognizerRow::RecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableRecognizer = (cli::safe_cast<NewDataSet::RecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::RecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableRecognizer->nameColumn]));
}
inline System::Void NewDataSet::RecognizerRow::name::set(System::String^  value) {
    this[this->tableRecognizer->nameColumn] = value;
}

inline System::Single NewDataSet::RecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'Recognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::RecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::RecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'Recognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::RecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableRecognizer->useFilteredDataColumn] = value;
}

inline System::Boolean NewDataSet::RecognizerRow::ignoreOnTrackingError::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableRecognizer->ignoreOnTrackingErrorColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ignoreOnTrackingError\' in table \'Recognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::RecognizerRow::ignoreOnTrackingError::set(System::Boolean value) {
    this[this->tableRecognizer->ignoreOnTrackingErrorColumn] = value;
}

inline System::Int32 NewDataSet::RecognizerRow::AlternativeRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableRecognizer->AlternativeRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AlternativeRecognizers_Id\' in table \'Recognizer\' is DBNull." 
L"", 
            e));
    }
}
inline System::Void NewDataSet::RecognizerRow::AlternativeRecognizers_Id::set(System::Int32 value) {
    this[this->tableRecognizer->AlternativeRecognizers_IdColumn] = value;
}

inline System::Int32 NewDataSet::RecognizerRow::State_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableRecognizer->State_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'State_Id\' in table \'Recognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::RecognizerRow::State_Id::set(System::Int32 value) {
    this[this->tableRecognizer->State_IdColumn] = value;
}

inline NewDataSet::AlternativeRecognizersRow^  NewDataSet::RecognizerRow::AlternativeRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AlternativeRecognizers_Recognizer"])));
}
inline System::Void NewDataSet::RecognizerRow::AlternativeRecognizersRow::set(NewDataSet::AlternativeRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AlternativeRecognizers_Recognizer"]);
}

inline NewDataSet::StateRow^  NewDataSet::RecognizerRow::StateRow::get() {
    return (cli::safe_cast<NewDataSet::StateRow^  >(this->GetParentRow(this->Table->ParentRelations[L"State_Recognizer"])));
}
inline System::Void NewDataSet::RecognizerRow::StateRow::set(NewDataSet::StateRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"State_Recognizer"]);
}

inline ::System::Boolean NewDataSet::RecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::RecognizerRow::SetminConfidenceNull() {
    this[this->tableRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::RecognizerRow::SetuseFilteredDataNull() {
    this[this->tableRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RecognizerRow::IsignoreOnTrackingErrorNull() {
    return this->IsNull(this->tableRecognizer->ignoreOnTrackingErrorColumn);
}

inline ::System::Void NewDataSet::RecognizerRow::SetignoreOnTrackingErrorNull() {
    this[this->tableRecognizer->ignoreOnTrackingErrorColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RecognizerRow::IsAlternativeRecognizers_IdNull() {
    return this->IsNull(this->tableRecognizer->AlternativeRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::RecognizerRow::SetAlternativeRecognizers_IdNull() {
    this[this->tableRecognizer->AlternativeRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::RecognizerRow::IsState_IdNull() {
    return this->IsNull(this->tableRecognizer->State_IdColumn);
}

inline ::System::Void NewDataSet::RecognizerRow::SetState_IdNull() {
    this[this->tableRecognizer->State_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::NotRecognizerRow::NotRecognizerRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableNotRecognizer = (cli::safe_cast<NewDataSet::NotRecognizerDataTable^  >(this->Table));
}

inline System::String^  NewDataSet::NotRecognizerRow::name::get() {
    return (cli::safe_cast<::System::String^  >(this[this->tableNotRecognizer->nameColumn]));
}
inline System::Void NewDataSet::NotRecognizerRow::name::set(System::String^  value) {
    this[this->tableNotRecognizer->nameColumn] = value;
}

inline System::Single NewDataSet::NotRecognizerRow::minConfidence::get() {
    try {
        return (cli::safe_cast<::System::Single >(this[this->tableNotRecognizer->minConfidenceColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'minConfidence\' in table \'NotRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::NotRecognizerRow::minConfidence::set(System::Single value) {
    this[this->tableNotRecognizer->minConfidenceColumn] = value;
}

inline System::Boolean NewDataSet::NotRecognizerRow::useFilteredData::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableNotRecognizer->useFilteredDataColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'useFilteredData\' in table \'NotRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::NotRecognizerRow::useFilteredData::set(System::Boolean value) {
    this[this->tableNotRecognizer->useFilteredDataColumn] = value;
}

inline System::Boolean NewDataSet::NotRecognizerRow::ignoreOnTrackingError::get() {
    try {
        return (cli::safe_cast<::System::Boolean >(this[this->tableNotRecognizer->ignoreOnTrackingErrorColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'ignoreOnTrackingError\' in table \'NotRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::NotRecognizerRow::ignoreOnTrackingError::set(System::Boolean value) {
    this[this->tableNotRecognizer->ignoreOnTrackingErrorColumn] = value;
}

inline System::Int32 NewDataSet::NotRecognizerRow::AlternativeRecognizers_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableNotRecognizer->AlternativeRecognizers_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'AlternativeRecognizers_Id\' in table \'NotRecognizer\' is DBNu" 
L"ll.", 
            e));
    }
}
inline System::Void NewDataSet::NotRecognizerRow::AlternativeRecognizers_Id::set(System::Int32 value) {
    this[this->tableNotRecognizer->AlternativeRecognizers_IdColumn] = value;
}

inline System::Int32 NewDataSet::NotRecognizerRow::State_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableNotRecognizer->State_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'State_Id\' in table \'NotRecognizer\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::NotRecognizerRow::State_Id::set(System::Int32 value) {
    this[this->tableNotRecognizer->State_IdColumn] = value;
}

inline NewDataSet::AlternativeRecognizersRow^  NewDataSet::NotRecognizerRow::AlternativeRecognizersRow::get() {
    return (cli::safe_cast<NewDataSet::AlternativeRecognizersRow^  >(this->GetParentRow(this->Table->ParentRelations[L"AlternativeRecognizers_NotRecognizer"])));
}
inline System::Void NewDataSet::NotRecognizerRow::AlternativeRecognizersRow::set(NewDataSet::AlternativeRecognizersRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"AlternativeRecognizers_NotRecognizer"]);
}

inline NewDataSet::StateRow^  NewDataSet::NotRecognizerRow::StateRow::get() {
    return (cli::safe_cast<NewDataSet::StateRow^  >(this->GetParentRow(this->Table->ParentRelations[L"State_NotRecognizer"])));
}
inline System::Void NewDataSet::NotRecognizerRow::StateRow::set(NewDataSet::StateRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"State_NotRecognizer"]);
}

inline ::System::Boolean NewDataSet::NotRecognizerRow::IsminConfidenceNull() {
    return this->IsNull(this->tableNotRecognizer->minConfidenceColumn);
}

inline ::System::Void NewDataSet::NotRecognizerRow::SetminConfidenceNull() {
    this[this->tableNotRecognizer->minConfidenceColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::NotRecognizerRow::IsuseFilteredDataNull() {
    return this->IsNull(this->tableNotRecognizer->useFilteredDataColumn);
}

inline ::System::Void NewDataSet::NotRecognizerRow::SetuseFilteredDataNull() {
    this[this->tableNotRecognizer->useFilteredDataColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::NotRecognizerRow::IsignoreOnTrackingErrorNull() {
    return this->IsNull(this->tableNotRecognizer->ignoreOnTrackingErrorColumn);
}

inline ::System::Void NewDataSet::NotRecognizerRow::SetignoreOnTrackingErrorNull() {
    this[this->tableNotRecognizer->ignoreOnTrackingErrorColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::NotRecognizerRow::IsAlternativeRecognizers_IdNull() {
    return this->IsNull(this->tableNotRecognizer->AlternativeRecognizers_IdColumn);
}

inline ::System::Void NewDataSet::NotRecognizerRow::SetAlternativeRecognizers_IdNull() {
    this[this->tableNotRecognizer->AlternativeRecognizers_IdColumn] = ::System::Convert::DBNull;
}

inline ::System::Boolean NewDataSet::NotRecognizerRow::IsState_IdNull() {
    return this->IsNull(this->tableNotRecognizer->State_IdColumn);
}

inline ::System::Void NewDataSet::NotRecognizerRow::SetState_IdNull() {
    this[this->tableNotRecognizer->State_IdColumn] = ::System::Convert::DBNull;
}


inline NewDataSet::AlternativeRecognizersRow::AlternativeRecognizersRow(::System::Data::DataRowBuilder^  rb) : 
        ::System::Data::DataRow(rb) {
    this->tableAlternativeRecognizers = (cli::safe_cast<NewDataSet::AlternativeRecognizersDataTable^  >(this->Table));
}

inline System::Int32 NewDataSet::AlternativeRecognizersRow::AlternativeRecognizers_Id::get() {
    return (cli::safe_cast<::System::Int32 >(this[this->tableAlternativeRecognizers->AlternativeRecognizers_IdColumn]));
}
inline System::Void NewDataSet::AlternativeRecognizersRow::AlternativeRecognizers_Id::set(System::Int32 value) {
    this[this->tableAlternativeRecognizers->AlternativeRecognizers_IdColumn] = value;
}

inline System::Int32 NewDataSet::AlternativeRecognizersRow::State_Id::get() {
    try {
        return (cli::safe_cast<::System::Int32 >(this[this->tableAlternativeRecognizers->State_IdColumn]));
    }
    catch (::System::InvalidCastException^ e) {
        throw (gcnew ::System::Data::StrongTypingException(L"The value for column \'State_Id\' in table \'AlternativeRecognizers\' is DBNull.", 
            e));
    }
}
inline System::Void NewDataSet::AlternativeRecognizersRow::State_Id::set(System::Int32 value) {
    this[this->tableAlternativeRecognizers->State_IdColumn] = value;
}

inline NewDataSet::StateRow^  NewDataSet::AlternativeRecognizersRow::StateRow::get() {
    return (cli::safe_cast<NewDataSet::StateRow^  >(this->GetParentRow(this->Table->ParentRelations[L"State_AlternativeRecognizers"])));
}
inline System::Void NewDataSet::AlternativeRecognizersRow::StateRow::set(NewDataSet::StateRow^  value) {
    this->SetParentRow(value, this->Table->ParentRelations[L"State_AlternativeRecognizers"]);
}

inline ::System::Boolean NewDataSet::AlternativeRecognizersRow::IsState_IdNull() {
    return this->IsNull(this->tableAlternativeRecognizers->State_IdColumn);
}

inline ::System::Void NewDataSet::AlternativeRecognizersRow::SetState_IdNull() {
    this[this->tableAlternativeRecognizers->State_IdColumn] = ::System::Convert::DBNull;
}

inline cli::array< NewDataSet::RecognizerRow^  >^  NewDataSet::AlternativeRecognizersRow::GetRecognizerRows() {
    if (this->Table->ChildRelations[L"AlternativeRecognizers_Recognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::RecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::RecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AlternativeRecognizers_Recognizer"])));
    }
}

inline cli::array< NewDataSet::NotRecognizerRow^  >^  NewDataSet::AlternativeRecognizersRow::GetNotRecognizerRows() {
    if (this->Table->ChildRelations[L"AlternativeRecognizers_NotRecognizer"] == nullptr) {
        return gcnew cli::array< NewDataSet::NotRecognizerRow^  >(0);
    }
    else {
        return (cli::safe_cast<cli::array< NewDataSet::NotRecognizerRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"AlternativeRecognizers_NotRecognizer"])));
    }
}


inline NewDataSet::FubiRecognizersRowChangeEvent::FubiRecognizersRowChangeEvent(NewDataSet::FubiRecognizersRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::FubiRecognizersRow^  NewDataSet::FubiRecognizersRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::FubiRecognizersRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::JointRelationRecognizerRowChangeEvent::JointRelationRecognizerRowChangeEvent(NewDataSet::JointRelationRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::JointRelationRecognizerRow^  NewDataSet::JointRelationRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::JointRelationRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::JointsRowChangeEvent::JointsRowChangeEvent(NewDataSet::JointsRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::JointsRow^  NewDataSet::JointsRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::JointsRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::JointRowChangeEvent::JointRowChangeEvent(NewDataSet::JointRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::JointRow^  NewDataSet::JointRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::JointRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::HandJointsRowChangeEvent::HandJointsRowChangeEvent(NewDataSet::HandJointsRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::HandJointsRow^  NewDataSet::HandJointsRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::HandJointsRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MaxValuesRowChangeEvent::MaxValuesRowChangeEvent(NewDataSet::MaxValuesRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MaxValuesRow^  NewDataSet::MaxValuesRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MaxValuesRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MinValuesRowChangeEvent::MinValuesRowChangeEvent(NewDataSet::MinValuesRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MinValuesRow^  NewDataSet::MinValuesRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MinValuesRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::RelationRowChangeEvent::RelationRowChangeEvent(NewDataSet::RelationRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::RelationRow^  NewDataSet::RelationRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::RelationRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MiddleJointRowChangeEvent::MiddleJointRowChangeEvent(NewDataSet::MiddleJointRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MiddleJointRow^  NewDataSet::MiddleJointRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MiddleJointRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::HandJointRowChangeEvent::HandJointRowChangeEvent(NewDataSet::HandJointRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::HandJointRow^  NewDataSet::HandJointRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::HandJointRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::METAINFORowChangeEvent::METAINFORowChangeEvent(NewDataSet::METAINFORow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::METAINFORow^  NewDataSet::METAINFORowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::METAINFORowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::PropertyRowChangeEvent::PropertyRowChangeEvent(NewDataSet::PropertyRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::PropertyRow^  NewDataSet::PropertyRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::PropertyRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::JointOrientationRecognizerRowChangeEvent::JointOrientationRecognizerRowChangeEvent(NewDataSet::JointOrientationRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::JointOrientationRecognizerRow^  NewDataSet::JointOrientationRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::JointOrientationRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MaxDegreesRowChangeEvent::MaxDegreesRowChangeEvent(NewDataSet::MaxDegreesRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MaxDegreesRow^  NewDataSet::MaxDegreesRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MaxDegreesRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MinDegreesRowChangeEvent::MinDegreesRowChangeEvent(NewDataSet::MinDegreesRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MinDegreesRow^  NewDataSet::MinDegreesRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MinDegreesRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::OrientationRowChangeEvent::OrientationRowChangeEvent(NewDataSet::OrientationRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::OrientationRow^  NewDataSet::OrientationRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::OrientationRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::LinearMovementRecognizerRowChangeEvent::LinearMovementRecognizerRowChangeEvent(NewDataSet::LinearMovementRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::LinearMovementRecognizerRow^  NewDataSet::LinearMovementRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::LinearMovementRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::DirectionRowChangeEvent::DirectionRowChangeEvent(NewDataSet::DirectionRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::DirectionRow^  NewDataSet::DirectionRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::DirectionRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::BasicDirectionRowChangeEvent::BasicDirectionRowChangeEvent(NewDataSet::BasicDirectionRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::BasicDirectionRow^  NewDataSet::BasicDirectionRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::BasicDirectionRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::SpeedRowChangeEvent::SpeedRowChangeEvent(NewDataSet::SpeedRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::SpeedRow^  NewDataSet::SpeedRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::SpeedRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::LengthRowChangeEvent::LengthRowChangeEvent(NewDataSet::LengthRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::LengthRow^  NewDataSet::LengthRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::LengthRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::AngularMovementRecognizerRowChangeEvent::AngularMovementRecognizerRowChangeEvent(NewDataSet::AngularMovementRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::AngularMovementRecognizerRow^  NewDataSet::AngularMovementRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::AngularMovementRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MaxAngularVelocityRowChangeEvent::MaxAngularVelocityRowChangeEvent(NewDataSet::MaxAngularVelocityRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MaxAngularVelocityRow^  NewDataSet::MaxAngularVelocityRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MaxAngularVelocityRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::MinAngularVelocityRowChangeEvent::MinAngularVelocityRowChangeEvent(NewDataSet::MinAngularVelocityRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::MinAngularVelocityRow^  NewDataSet::MinAngularVelocityRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::MinAngularVelocityRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::BasicAngularVelocityRowChangeEvent::BasicAngularVelocityRowChangeEvent(NewDataSet::BasicAngularVelocityRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::BasicAngularVelocityRow^  NewDataSet::BasicAngularVelocityRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::BasicAngularVelocityRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::FingerCountRecognizerRowChangeEvent::FingerCountRecognizerRowChangeEvent(NewDataSet::FingerCountRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::FingerCountRecognizerRow^  NewDataSet::FingerCountRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::FingerCountRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::FingerCountRowChangeEvent::FingerCountRowChangeEvent(NewDataSet::FingerCountRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::FingerCountRow^  NewDataSet::FingerCountRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::FingerCountRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::TemplateRecognizerRowChangeEvent::TemplateRecognizerRowChangeEvent(NewDataSet::TemplateRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::TemplateRecognizerRow^  NewDataSet::TemplateRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::TemplateRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::TrainingDataRowChangeEvent::TrainingDataRowChangeEvent(NewDataSet::TrainingDataRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::TrainingDataRow^  NewDataSet::TrainingDataRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::TrainingDataRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::IgnoreAxesRowChangeEvent::IgnoreAxesRowChangeEvent(NewDataSet::IgnoreAxesRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::IgnoreAxesRow^  NewDataSet::IgnoreAxesRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::IgnoreAxesRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::CombinationRecognizerRowChangeEvent::CombinationRecognizerRowChangeEvent(NewDataSet::CombinationRecognizerRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::CombinationRecognizerRow^  NewDataSet::CombinationRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::CombinationRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::StateRowChangeEvent::StateRowChangeEvent(NewDataSet::StateRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::StateRow^  NewDataSet::StateRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::StateRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::RecognizerRowChangeEvent::RecognizerRowChangeEvent(NewDataSet::RecognizerRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::RecognizerRow^  NewDataSet::RecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::RecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::NotRecognizerRowChangeEvent::NotRecognizerRowChangeEvent(NewDataSet::NotRecognizerRow^  row, ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::NotRecognizerRow^  NewDataSet::NotRecognizerRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::NotRecognizerRowChangeEvent::Action::get() {
    return this->eventAction;
}


inline NewDataSet::AlternativeRecognizersRowChangeEvent::AlternativeRecognizersRowChangeEvent(NewDataSet::AlternativeRecognizersRow^  row, 
            ::System::Data::DataRowAction action) {
    this->eventRow = row;
    this->eventAction = action;
}

inline NewDataSet::AlternativeRecognizersRow^  NewDataSet::AlternativeRecognizersRowChangeEvent::Row::get() {
    return this->eventRow;
}

inline ::System::Data::DataRowAction NewDataSet::AlternativeRecognizersRowChangeEvent::Action::get() {
    return this->eventAction;
}
